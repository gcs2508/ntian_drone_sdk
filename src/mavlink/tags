!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	mavlink_sha256.h	229;"	d
A	mavlink_sha256.h	68;"	d
ADSB_ALTITUDE_TYPE	common/common.h	/^typedef enum ADSB_ALTITUDE_TYPE$/;"	g
ADSB_ALTITUDE_TYPE	common/common.h	/^} ADSB_ALTITUDE_TYPE;$/;"	t	typeref:enum:ADSB_ALTITUDE_TYPE
ADSB_ALTITUDE_TYPE_ENUM_END	common/common.h	/^	ADSB_ALTITUDE_TYPE_ENUM_END=2, \/*  | *\/$/;"	e	enum:ADSB_ALTITUDE_TYPE
ADSB_ALTITUDE_TYPE_GEOMETRIC	common/common.h	/^	ADSB_ALTITUDE_TYPE_GEOMETRIC=1, \/* Altitude reported from a GNSS source | *\/$/;"	e	enum:ADSB_ALTITUDE_TYPE
ADSB_ALTITUDE_TYPE_PRESSURE_QNH	common/common.h	/^	ADSB_ALTITUDE_TYPE_PRESSURE_QNH=0, \/* Altitude reported from a Baro source using QNH reference | *\/$/;"	e	enum:ADSB_ALTITUDE_TYPE
ADSB_EMITTER_TYPE	common/common.h	/^typedef enum ADSB_EMITTER_TYPE$/;"	g
ADSB_EMITTER_TYPE	common/common.h	/^} ADSB_EMITTER_TYPE;$/;"	t	typeref:enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_EMERGENCY_SURFACE	common/common.h	/^	ADSB_EMITTER_TYPE_EMERGENCY_SURFACE=17, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_ENUM_END	common/common.h	/^	ADSB_EMITTER_TYPE_ENUM_END=20, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_GLIDER	common/common.h	/^	ADSB_EMITTER_TYPE_GLIDER=9, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_HEAVY	common/common.h	/^	ADSB_EMITTER_TYPE_HEAVY=5, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_HIGHLY_MANUV	common/common.h	/^	ADSB_EMITTER_TYPE_HIGHLY_MANUV=6, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE	common/common.h	/^	ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE=4, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_LARGE	common/common.h	/^	ADSB_EMITTER_TYPE_LARGE=3, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_LIGHT	common/common.h	/^	ADSB_EMITTER_TYPE_LIGHT=1, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_LIGHTER_AIR	common/common.h	/^	ADSB_EMITTER_TYPE_LIGHTER_AIR=10, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_NO_INFO	common/common.h	/^	ADSB_EMITTER_TYPE_NO_INFO=0, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_PARACHUTE	common/common.h	/^	ADSB_EMITTER_TYPE_PARACHUTE=11, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_POINT_OBSTACLE	common/common.h	/^	ADSB_EMITTER_TYPE_POINT_OBSTACLE=19, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_ROTOCRAFT	common/common.h	/^	ADSB_EMITTER_TYPE_ROTOCRAFT=7, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_SERVICE_SURFACE	common/common.h	/^	ADSB_EMITTER_TYPE_SERVICE_SURFACE=18, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_SMALL	common/common.h	/^	ADSB_EMITTER_TYPE_SMALL=2, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_SPACE	common/common.h	/^	ADSB_EMITTER_TYPE_SPACE=15, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_UAV	common/common.h	/^	ADSB_EMITTER_TYPE_UAV=14, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_ULTRA_LIGHT	common/common.h	/^	ADSB_EMITTER_TYPE_ULTRA_LIGHT=12, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_UNASSGINED3	common/common.h	/^	ADSB_EMITTER_TYPE_UNASSGINED3=16, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_UNASSIGNED	common/common.h	/^	ADSB_EMITTER_TYPE_UNASSIGNED=8, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_EMITTER_TYPE_UNASSIGNED2	common/common.h	/^	ADSB_EMITTER_TYPE_UNASSIGNED2=13, \/*  | *\/$/;"	e	enum:ADSB_EMITTER_TYPE
ADSB_FLAGS	common/common.h	/^typedef enum ADSB_FLAGS$/;"	g
ADSB_FLAGS	common/common.h	/^} ADSB_FLAGS;$/;"	t	typeref:enum:ADSB_FLAGS
ADSB_FLAGS_ENUM_END	common/common.h	/^	ADSB_FLAGS_ENUM_END=65, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_SIMULATED	common/common.h	/^	ADSB_FLAGS_SIMULATED=64, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_VALID_ALTITUDE	common/common.h	/^	ADSB_FLAGS_VALID_ALTITUDE=2, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_VALID_CALLSIGN	common/common.h	/^	ADSB_FLAGS_VALID_CALLSIGN=16, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_VALID_COORDS	common/common.h	/^	ADSB_FLAGS_VALID_COORDS=1, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_VALID_HEADING	common/common.h	/^	ADSB_FLAGS_VALID_HEADING=4, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_VALID_SQUAWK	common/common.h	/^	ADSB_FLAGS_VALID_SQUAWK=32, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
ADSB_FLAGS_VALID_VELOCITY	common/common.h	/^	ADSB_FLAGS_VALID_VELOCITY=8, \/*  | *\/$/;"	e	enum:ADSB_FLAGS
B	mavlink_sha256.h	230;"	d
B	mavlink_sha256.h	69;"	d
C	mavlink_sha256.h	231;"	d
C	mavlink_sha256.h	70;"	d
COMMON_TESTSUITE_H	common/testsuite.h	6;"	d
Ch	mavlink_sha256.h	237;"	d
Ch	mavlink_sha256.h	58;"	d
D	mavlink_sha256.h	232;"	d
D	mavlink_sha256.h	71;"	d
E	mavlink_sha256.h	233;"	d
E	mavlink_sha256.h	72;"	d
ESTIMATOR_ATTITUDE	common/common.h	/^	ESTIMATOR_ATTITUDE=1, \/* True if the attitude estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_CONST_POS_MODE	common/common.h	/^	ESTIMATOR_CONST_POS_MODE=128, \/* True if the EKF is in a constant position mode and is not using external measurements (eg GPS or optical flow) | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_GPS_GLITCH	common/common.h	/^	ESTIMATOR_GPS_GLITCH=1024, \/* True if the EKF has detected a GPS glitch | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_POS_HORIZ_ABS	common/common.h	/^	ESTIMATOR_POS_HORIZ_ABS=16, \/* True if the horizontal position (absolute) estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_POS_HORIZ_REL	common/common.h	/^	ESTIMATOR_POS_HORIZ_REL=8, \/* True if the horizontal position (relative) estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_POS_VERT_ABS	common/common.h	/^	ESTIMATOR_POS_VERT_ABS=32, \/* True if the vertical position (absolute) estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_POS_VERT_AGL	common/common.h	/^	ESTIMATOR_POS_VERT_AGL=64, \/* True if the vertical position (above ground) estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_PRED_POS_HORIZ_ABS	common/common.h	/^	ESTIMATOR_PRED_POS_HORIZ_ABS=512, \/* True if the EKF has sufficient data to enter a mode that will provide a (absolute) position estimate | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_PRED_POS_HORIZ_REL	common/common.h	/^	ESTIMATOR_PRED_POS_HORIZ_REL=256, \/* True if the EKF has sufficient data to enter a mode that will provide a (relative) position estimate | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_STATUS_FLAGS	common/common.h	/^typedef enum ESTIMATOR_STATUS_FLAGS$/;"	g
ESTIMATOR_STATUS_FLAGS	common/common.h	/^} ESTIMATOR_STATUS_FLAGS;$/;"	t	typeref:enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_STATUS_FLAGS_ENUM_END	common/common.h	/^	ESTIMATOR_STATUS_FLAGS_ENUM_END=1025, \/*  | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_VELOCITY_HORIZ	common/common.h	/^	ESTIMATOR_VELOCITY_HORIZ=2, \/* True if the horizontal velocity estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
ESTIMATOR_VELOCITY_VERT	common/common.h	/^	ESTIMATOR_VELOCITY_VERT=4, \/* True if the  vertical velocity estimate is good | *\/$/;"	e	enum:ESTIMATOR_STATUS_FLAGS
F	mavlink_sha256.h	234;"	d
F	mavlink_sha256.h	73;"	d
FENCE_ACTION	common/common.h	/^typedef enum FENCE_ACTION$/;"	g
FENCE_ACTION	common/common.h	/^} FENCE_ACTION;$/;"	t	typeref:enum:FENCE_ACTION
FENCE_ACTION_ENUM_END	common/common.h	/^	FENCE_ACTION_ENUM_END=5, \/*  | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_GUIDED	common/common.h	/^	FENCE_ACTION_GUIDED=1, \/* Switched to guided mode to return point (fence point 0) | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_GUIDED_THR_PASS	common/common.h	/^	FENCE_ACTION_GUIDED_THR_PASS=3, \/* Switched to guided mode to return point (fence point 0) with manual throttle control | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_NONE	common/common.h	/^	FENCE_ACTION_NONE=0, \/* Disable fenced mode | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_REPORT	common/common.h	/^	FENCE_ACTION_REPORT=2, \/* Report fence breach, but don't take action | *\/$/;"	e	enum:FENCE_ACTION
FENCE_ACTION_RTL	common/common.h	/^	FENCE_ACTION_RTL=4, \/* Switch to RTL (return to launch) mode and head for the return point. | *\/$/;"	e	enum:FENCE_ACTION
FENCE_BREACH	common/common.h	/^typedef enum FENCE_BREACH$/;"	g
FENCE_BREACH	common/common.h	/^} FENCE_BREACH;$/;"	t	typeref:enum:FENCE_BREACH
FENCE_BREACH_BOUNDARY	common/common.h	/^	FENCE_BREACH_BOUNDARY=3, \/* Breached fence boundary | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_ENUM_END	common/common.h	/^	FENCE_BREACH_ENUM_END=4, \/*  | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_MAXALT	common/common.h	/^	FENCE_BREACH_MAXALT=2, \/* Breached maximum altitude | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_MINALT	common/common.h	/^	FENCE_BREACH_MINALT=1, \/* Breached minimum altitude | *\/$/;"	e	enum:FENCE_BREACH
FENCE_BREACH_NONE	common/common.h	/^	FENCE_BREACH_NONE=0, \/* No last fence breach | *\/$/;"	e	enum:FENCE_BREACH
FIRMWARE_VERSION_TYPE	common/common.h	/^typedef enum FIRMWARE_VERSION_TYPE$/;"	g
FIRMWARE_VERSION_TYPE	common/common.h	/^} FIRMWARE_VERSION_TYPE;$/;"	t	typeref:enum:FIRMWARE_VERSION_TYPE
FIRMWARE_VERSION_TYPE_ALPHA	common/common.h	/^	FIRMWARE_VERSION_TYPE_ALPHA=64, \/* alpha release | *\/$/;"	e	enum:FIRMWARE_VERSION_TYPE
FIRMWARE_VERSION_TYPE_BETA	common/common.h	/^	FIRMWARE_VERSION_TYPE_BETA=128, \/* beta release | *\/$/;"	e	enum:FIRMWARE_VERSION_TYPE
FIRMWARE_VERSION_TYPE_DEV	common/common.h	/^	FIRMWARE_VERSION_TYPE_DEV=0, \/* development release | *\/$/;"	e	enum:FIRMWARE_VERSION_TYPE
FIRMWARE_VERSION_TYPE_ENUM_END	common/common.h	/^	FIRMWARE_VERSION_TYPE_ENUM_END=256, \/*  | *\/$/;"	e	enum:FIRMWARE_VERSION_TYPE
FIRMWARE_VERSION_TYPE_OFFICIAL	common/common.h	/^	FIRMWARE_VERSION_TYPE_OFFICIAL=255, \/* official stable release | *\/$/;"	e	enum:FIRMWARE_VERSION_TYPE
FIRMWARE_VERSION_TYPE_RC	common/common.h	/^	FIRMWARE_VERSION_TYPE_RC=192, \/* release candidate | *\/$/;"	e	enum:FIRMWARE_VERSION_TYPE
G	mavlink_sha256.h	235;"	d
G	mavlink_sha256.h	74;"	d
GPS_INPUT_IGNORE_FLAGS	common/common.h	/^typedef enum GPS_INPUT_IGNORE_FLAGS$/;"	g
GPS_INPUT_IGNORE_FLAGS	common/common.h	/^} GPS_INPUT_IGNORE_FLAGS;$/;"	t	typeref:enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAGS_ENUM_END	common/common.h	/^	GPS_INPUT_IGNORE_FLAGS_ENUM_END=129, \/*  | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_ALT	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_ALT=1, \/* ignore altitude field | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_HDOP	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_HDOP=2, \/* ignore hdop field | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_HORIZONTAL_ACCURACY	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_HORIZONTAL_ACCURACY=64, \/* ignore horizontal accuracy field | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_SPEED_ACCURACY	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_SPEED_ACCURACY=32, \/* ignore speed accuracy field | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_VDOP	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_VDOP=4, \/* ignore vdop field | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_VEL_HORIZ	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_VEL_HORIZ=8, \/* ignore horizontal velocity field (vn and ve) | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_VEL_VERT	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_VEL_VERT=16, \/* ignore vertical velocity field (vd) | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
GPS_INPUT_IGNORE_FLAG_VERTICAL_ACCURACY	common/common.h	/^	GPS_INPUT_IGNORE_FLAG_VERTICAL_ACCURACY=128, \/* ignore vertical accuracy field | *\/$/;"	e	enum:GPS_INPUT_IGNORE_FLAGS
H	mavlink_sha256.h	236;"	d
H	mavlink_sha256.h	75;"	d
HAVE_ENUM_ADSB_ALTITUDE_TYPE	common/common.h	782;"	d
HAVE_ENUM_ADSB_EMITTER_TYPE	common/common.h	793;"	d
HAVE_ENUM_ADSB_FLAGS	common/common.h	822;"	d
HAVE_ENUM_ESTIMATOR_STATUS_FLAGS	common/common.h	848;"	d
HAVE_ENUM_FENCE_ACTION	common/common.h	312;"	d
HAVE_ENUM_FENCE_BREACH	common/common.h	326;"	d
HAVE_ENUM_FIRMWARE_VERSION_TYPE	common/common.h	103;"	d
HAVE_ENUM_GPS_INPUT_IGNORE_FLAGS	common/common.h	880;"	d
HAVE_ENUM_MAVLINK_DATA_STREAM_TYPE	common/common.h	297;"	d
HAVE_ENUM_MAV_AUTOPILOT	common/common.h	39;"	d
HAVE_ENUM_MAV_BATTERY_FUNCTION	common/common.h	742;"	d
HAVE_ENUM_MAV_BATTERY_TYPE	common/common.h	728;"	d
HAVE_ENUM_MAV_CMD	common/common.h	353;"	d
HAVE_ENUM_MAV_CMD_ACK	common/common.h	497;"	d
HAVE_ENUM_MAV_COMPONENT	common/common.h	202;"	d
HAVE_ENUM_MAV_DATA_STREAM	common/common.h	463;"	d
HAVE_ENUM_MAV_DISTANCE_SENSOR	common/common.h	632;"	d
HAVE_ENUM_MAV_DO_REPOSITION_FLAGS	common/common.h	838;"	d
HAVE_ENUM_MAV_ESTIMATOR_TYPE	common/common.h	714;"	d
HAVE_ENUM_MAV_FRAME	common/common.h	276;"	d
HAVE_ENUM_MAV_GOTO	common/common.h	151;"	d
HAVE_ENUM_MAV_LANDED_STATE	common/common.h	770;"	d
HAVE_ENUM_MAV_MISSION_RESULT	common/common.h	548;"	d
HAVE_ENUM_MAV_MODE	common/common.h	165;"	d
HAVE_ENUM_MAV_MODE_FLAG	common/common.h	117;"	d
HAVE_ENUM_MAV_MODE_FLAG_DECODE_POSITION	common/common.h	134;"	d
HAVE_ENUM_MAV_MOUNT_MODE	common/common.h	339;"	d
HAVE_ENUM_MAV_PARAM_TYPE	common/common.h	515;"	d
HAVE_ENUM_MAV_POWER_STATUS	common/common.h	589;"	d
HAVE_ENUM_MAV_PROTOCOL_CAPABILITY	common/common.h	692;"	d
HAVE_ENUM_MAV_RESULT	common/common.h	534;"	d
HAVE_ENUM_MAV_ROI	common/common.h	483;"	d
HAVE_ENUM_MAV_SENSOR_ORIENTATION	common/common.h	644;"	d
HAVE_ENUM_MAV_SEVERITY	common/common.h	572;"	d
HAVE_ENUM_MAV_STATE	common/common.h	185;"	d
HAVE_ENUM_MAV_SYS_STATUS_SENSOR	common/common.h	243;"	d
HAVE_ENUM_MAV_TYPE	common/common.h	66;"	d
HAVE_ENUM_MAV_VTOL_STATE	common/common.h	756;"	d
HAVE_ENUM_MOTOR_TEST_THROTTLE_TYPE	common/common.h	868;"	d
HAVE_ENUM_NTIAN_GIMBAL_STATUS	ntian/ntian.h	49;"	d
HAVE_ENUM_NTIAN_MAVLINK_GIMBAL_VERSION	ntian/ntian.h	39;"	d
HAVE_ENUM_SERIAL_CONTROL_DEV	common/common.h	604;"	d
HAVE_ENUM_SERIAL_CONTROL_FLAG	common/common.h	618;"	d
MAVLINK_ALIGNED_FIELDS	common/mavlink.h	17;"	d
MAVLINK_ALIGNED_FIELDS	ntian/mavlink.h	17;"	d
MAVLINK_ASSERT	protocol.h	26;"	d
MAVLINK_AVOID_GCC_STACK_BUG	protocol.h	22;"	d
MAVLINK_BIG_ENDIAN	mavlink_types.h	268;"	d
MAVLINK_BUILD_DATE	common/version.h	8;"	d
MAVLINK_BUILD_DATE	ntian/version.h	8;"	d
MAVLINK_COMMAND_24BIT	common/mavlink.h	25;"	d
MAVLINK_COMMAND_24BIT	ntian/mavlink.h	25;"	d
MAVLINK_COMMON_H	common/common.h	6;"	d
MAVLINK_COMM_0	mavlink_types.h	/^    MAVLINK_COMM_0,$/;"	e	enum:__anon2
MAVLINK_COMM_1	mavlink_types.h	/^    MAVLINK_COMM_1,$/;"	e	enum:__anon2
MAVLINK_COMM_2	mavlink_types.h	/^    MAVLINK_COMM_2,$/;"	e	enum:__anon2
MAVLINK_COMM_3	mavlink_types.h	/^    MAVLINK_COMM_3$/;"	e	enum:__anon2
MAVLINK_COMM_NUM_BUFFERS	mavlink_types.h	174;"	d
MAVLINK_COMM_NUM_BUFFERS	mavlink_types.h	176;"	d
MAVLINK_CORE_HEADER_LEN	mavlink_types.h	23;"	d
MAVLINK_CORE_HEADER_MAVLINK1_LEN	mavlink_types.h	24;"	d
MAVLINK_CRC_EXTRA	common/mavlink.h	21;"	d
MAVLINK_CRC_EXTRA	ntian/mavlink.h	21;"	d
MAVLINK_DATA_STREAM_IMG_BMP	common/common.h	/^	MAVLINK_DATA_STREAM_IMG_BMP=2, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_JPEG	common/common.h	/^	MAVLINK_DATA_STREAM_IMG_JPEG=1, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_PGM	common/common.h	/^	MAVLINK_DATA_STREAM_IMG_PGM=5, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_PNG	common/common.h	/^	MAVLINK_DATA_STREAM_IMG_PNG=6, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_RAW32U	common/common.h	/^	MAVLINK_DATA_STREAM_IMG_RAW32U=4, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_IMG_RAW8U	common/common.h	/^	MAVLINK_DATA_STREAM_IMG_RAW8U=3, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_TYPE	common/common.h	/^typedef enum MAVLINK_DATA_STREAM_TYPE$/;"	g
MAVLINK_DATA_STREAM_TYPE	common/common.h	/^} MAVLINK_DATA_STREAM_TYPE;$/;"	t	typeref:enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_DATA_STREAM_TYPE_ENUM_END	common/common.h	/^	MAVLINK_DATA_STREAM_TYPE_ENUM_END=7, \/*  | *\/$/;"	e	enum:MAVLINK_DATA_STREAM_TYPE
MAVLINK_ENABLED_COMMON	common/common.h	32;"	d
MAVLINK_ENABLED_NTIAN	ntian/ntian.h	32;"	d
MAVLINK_ENDIAN	common/mavlink.h	13;"	d
MAVLINK_ENDIAN	ntian/mavlink.h	13;"	d
MAVLINK_END_UART_SEND	protocol.h	34;"	d
MAVLINK_FRAMING_BAD_CRC	mavlink_types.h	/^    MAVLINK_FRAMING_BAD_CRC=2,$/;"	e	enum:__anon4
MAVLINK_FRAMING_BAD_SIGNATURE	mavlink_types.h	/^    MAVLINK_FRAMING_BAD_SIGNATURE=3$/;"	e	enum:__anon4
MAVLINK_FRAMING_INCOMPLETE	mavlink_types.h	/^    MAVLINK_FRAMING_INCOMPLETE=0,$/;"	e	enum:__anon4
MAVLINK_FRAMING_OK	mavlink_types.h	/^    MAVLINK_FRAMING_OK=1,$/;"	e	enum:__anon4
MAVLINK_H	common/mavlink.h	6;"	d
MAVLINK_H	ntian/mavlink.h	6;"	d
MAVLINK_HAVE_EXPECTED_MESSAGE_LENGTH	mavlink_helpers.h	514;"	d
MAVLINK_HAVE_GET_MESSAGE_INFO	mavlink_get_info.h	5;"	d
MAVLINK_HELPER	mavlink_helpers.h	11;"	d
MAVLINK_HELPER	mavlink_sha256.h	46;"	d
MAVLINK_HELPER	protocol.h	40;"	d
MAVLINK_HELPER	protocol.h	75;"	d
MAVLINK_IFLAG_MASK	mavlink_types.h	290;"	d
MAVLINK_IFLAG_SIGNED	mavlink_types.h	289;"	d
MAVLINK_LITTLE_ENDIAN	mavlink_types.h	269;"	d
MAVLINK_MAX_DIALECT_PAYLOAD_SIZE	common/version.h	10;"	d
MAVLINK_MAX_DIALECT_PAYLOAD_SIZE	ntian/version.h	10;"	d
MAVLINK_MAX_FIELDS	mavlink_types.h	133;"	d
MAVLINK_MAX_PACKET_LEN	mavlink_types.h	31;"	d
MAVLINK_MAX_PAYLOAD_LEN	mavlink_types.h	20;"	d
MAVLINK_MAX_SIGNING_STREAMS	mavlink_types.h	255;"	d
MAVLINK_MESSAGE_CRCS	common/common.h	23;"	d
MAVLINK_MESSAGE_CRCS	ntian/ntian.h	23;"	d
MAVLINK_MESSAGE_INFO	common/common.h	27;"	d
MAVLINK_MESSAGE_INFO	ntian/ntian.h	27;"	d
MAVLINK_MESSAGE_INFO_ACTUATOR_CONTROL_TARGET	common/mavlink_msg_actuator_control_target.h	23;"	d
MAVLINK_MESSAGE_INFO_ACTUATOR_CONTROL_TARGET	common/mavlink_msg_actuator_control_target.h	33;"	d
MAVLINK_MESSAGE_INFO_ADSB_VEHICLE	common/mavlink_msg_adsb_vehicle.h	33;"	d
MAVLINK_MESSAGE_INFO_ADSB_VEHICLE	common/mavlink_msg_adsb_vehicle.h	53;"	d
MAVLINK_MESSAGE_INFO_ALTITUDE	common/mavlink_msg_altitude.h	27;"	d
MAVLINK_MESSAGE_INFO_ALTITUDE	common/mavlink_msg_altitude.h	41;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE	common/mavlink_msg_attitude.h	27;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE	common/mavlink_msg_attitude.h	41;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION	common/mavlink_msg_attitude_quaternion.h	28;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION	common/mavlink_msg_attitude_quaternion.h	43;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION_COV	common/mavlink_msg_attitude_quaternion_cov.h	27;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_QUATERNION_COV	common/mavlink_msg_attitude_quaternion_cov.h	40;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_TARGET	common/mavlink_msg_attitude_target.h	27;"	d
MAVLINK_MESSAGE_INFO_ATTITUDE_TARGET	common/mavlink_msg_attitude_target.h	41;"	d
MAVLINK_MESSAGE_INFO_ATT_POS_MOCAP	common/mavlink_msg_att_pos_mocap.h	25;"	d
MAVLINK_MESSAGE_INFO_ATT_POS_MOCAP	common/mavlink_msg_att_pos_mocap.h	37;"	d
MAVLINK_MESSAGE_INFO_AUTH_KEY	common/mavlink_msg_auth_key.h	21;"	d
MAVLINK_MESSAGE_INFO_AUTH_KEY	common/mavlink_msg_auth_key.h	29;"	d
MAVLINK_MESSAGE_INFO_AUTOPILOT_VERSION	common/mavlink_msg_autopilot_version.h	33;"	d
MAVLINK_MESSAGE_INFO_AUTOPILOT_VERSION	common/mavlink_msg_autopilot_version.h	51;"	d
MAVLINK_MESSAGE_INFO_BATTERY_STATUS	common/mavlink_msg_battery_status.h	29;"	d
MAVLINK_MESSAGE_INFO_BATTERY_STATUS	common/mavlink_msg_battery_status.h	45;"	d
MAVLINK_MESSAGE_INFO_CAMERA_TRIGGER	common/mavlink_msg_camera_trigger.h	22;"	d
MAVLINK_MESSAGE_INFO_CAMERA_TRIGGER	common/mavlink_msg_camera_trigger.h	31;"	d
MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL	common/mavlink_msg_change_operator_control.h	24;"	d
MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL	common/mavlink_msg_change_operator_control.h	35;"	d
MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL_ACK	common/mavlink_msg_change_operator_control_ack.h	23;"	d
MAVLINK_MESSAGE_INFO_CHANGE_OPERATOR_CONTROL_ACK	common/mavlink_msg_change_operator_control_ack.h	33;"	d
MAVLINK_MESSAGE_INFO_COMMAND_ACK	common/mavlink_msg_command_ack.h	22;"	d
MAVLINK_MESSAGE_INFO_COMMAND_ACK	common/mavlink_msg_command_ack.h	31;"	d
MAVLINK_MESSAGE_INFO_COMMAND_INT	common/mavlink_msg_command_int.h	33;"	d
MAVLINK_MESSAGE_INFO_COMMAND_INT	common/mavlink_msg_command_int.h	53;"	d
MAVLINK_MESSAGE_INFO_COMMAND_LONG	common/mavlink_msg_command_long.h	31;"	d
MAVLINK_MESSAGE_INFO_COMMAND_LONG	common/mavlink_msg_command_long.h	49;"	d
MAVLINK_MESSAGE_INFO_CONTROL_SYSTEM_STATE	common/mavlink_msg_control_system_state.h	39;"	d
MAVLINK_MESSAGE_INFO_CONTROL_SYSTEM_STATE	common/mavlink_msg_control_system_state.h	63;"	d
MAVLINK_MESSAGE_INFO_DATA_STREAM	common/mavlink_msg_data_stream.h	23;"	d
MAVLINK_MESSAGE_INFO_DATA_STREAM	common/mavlink_msg_data_stream.h	33;"	d
MAVLINK_MESSAGE_INFO_DATA_TRANSMISSION_HANDSHAKE	common/mavlink_msg_data_transmission_handshake.h	27;"	d
MAVLINK_MESSAGE_INFO_DATA_TRANSMISSION_HANDSHAKE	common/mavlink_msg_data_transmission_handshake.h	41;"	d
MAVLINK_MESSAGE_INFO_DEBUG	common/mavlink_msg_debug.h	23;"	d
MAVLINK_MESSAGE_INFO_DEBUG	common/mavlink_msg_debug.h	33;"	d
MAVLINK_MESSAGE_INFO_DEBUG_VECT	common/mavlink_msg_debug_vect.h	25;"	d
MAVLINK_MESSAGE_INFO_DEBUG_VECT	common/mavlink_msg_debug_vect.h	37;"	d
MAVLINK_MESSAGE_INFO_DISTANCE_SENSOR	common/mavlink_msg_distance_sensor.h	28;"	d
MAVLINK_MESSAGE_INFO_DISTANCE_SENSOR	common/mavlink_msg_distance_sensor.h	43;"	d
MAVLINK_MESSAGE_INFO_ENCAPSULATED_DATA	common/mavlink_msg_encapsulated_data.h	22;"	d
MAVLINK_MESSAGE_INFO_ENCAPSULATED_DATA	common/mavlink_msg_encapsulated_data.h	31;"	d
MAVLINK_MESSAGE_INFO_ESTIMATOR_STATUS	common/mavlink_msg_estimator_status.h	30;"	d
MAVLINK_MESSAGE_INFO_ESTIMATOR_STATUS	common/mavlink_msg_estimator_status.h	47;"	d
MAVLINK_MESSAGE_INFO_EXTENDED_SYS_STATE	common/mavlink_msg_extended_sys_state.h	22;"	d
MAVLINK_MESSAGE_INFO_EXTENDED_SYS_STATE	common/mavlink_msg_extended_sys_state.h	31;"	d
MAVLINK_MESSAGE_INFO_FILE_TRANSFER_PROTOCOL	common/mavlink_msg_file_transfer_protocol.h	24;"	d
MAVLINK_MESSAGE_INFO_FILE_TRANSFER_PROTOCOL	common/mavlink_msg_file_transfer_protocol.h	35;"	d
MAVLINK_MESSAGE_INFO_FOLLOW_TARGET	common/mavlink_msg_follow_target.h	35;"	d
MAVLINK_MESSAGE_INFO_FOLLOW_TARGET	common/mavlink_msg_follow_target.h	53;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT	common/mavlink_msg_global_position_int.h	29;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT	common/mavlink_msg_global_position_int.h	45;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT_COV	common/mavlink_msg_global_position_int_cov.h	31;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_POSITION_INT_COV	common/mavlink_msg_global_position_int_cov.h	49;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_VISION_POSITION_ESTIMATE	common/mavlink_msg_global_vision_position_estimate.h	27;"	d
MAVLINK_MESSAGE_INFO_GLOBAL_VISION_POSITION_ESTIMATE	common/mavlink_msg_global_vision_position_estimate.h	41;"	d
MAVLINK_MESSAGE_INFO_GPS2_RAW	common/mavlink_msg_gps2_raw.h	32;"	d
MAVLINK_MESSAGE_INFO_GPS2_RAW	common/mavlink_msg_gps2_raw.h	51;"	d
MAVLINK_MESSAGE_INFO_GPS2_RTK	common/mavlink_msg_gps2_rtk.h	33;"	d
MAVLINK_MESSAGE_INFO_GPS2_RTK	common/mavlink_msg_gps2_rtk.h	53;"	d
MAVLINK_MESSAGE_INFO_GPS_GLOBAL_ORIGIN	common/mavlink_msg_gps_global_origin.h	23;"	d
MAVLINK_MESSAGE_INFO_GPS_GLOBAL_ORIGIN	common/mavlink_msg_gps_global_origin.h	33;"	d
MAVLINK_MESSAGE_INFO_GPS_INJECT_DATA	common/mavlink_msg_gps_inject_data.h	24;"	d
MAVLINK_MESSAGE_INFO_GPS_INJECT_DATA	common/mavlink_msg_gps_inject_data.h	35;"	d
MAVLINK_MESSAGE_INFO_GPS_INPUT	common/mavlink_msg_gps_input.h	38;"	d
MAVLINK_MESSAGE_INFO_GPS_INPUT	common/mavlink_msg_gps_input.h	63;"	d
MAVLINK_MESSAGE_INFO_GPS_RAW_INT	common/mavlink_msg_gps_raw_int.h	30;"	d
MAVLINK_MESSAGE_INFO_GPS_RAW_INT	common/mavlink_msg_gps_raw_int.h	47;"	d
MAVLINK_MESSAGE_INFO_GPS_RTCM_DATA	common/mavlink_msg_gps_rtcm_data.h	23;"	d
MAVLINK_MESSAGE_INFO_GPS_RTCM_DATA	common/mavlink_msg_gps_rtcm_data.h	33;"	d
MAVLINK_MESSAGE_INFO_GPS_RTK	common/mavlink_msg_gps_rtk.h	33;"	d
MAVLINK_MESSAGE_INFO_GPS_RTK	common/mavlink_msg_gps_rtk.h	53;"	d
MAVLINK_MESSAGE_INFO_GPS_STATUS	common/mavlink_msg_gps_status.h	30;"	d
MAVLINK_MESSAGE_INFO_GPS_STATUS	common/mavlink_msg_gps_status.h	43;"	d
MAVLINK_MESSAGE_INFO_HEARTBEAT	common/mavlink_msg_heartbeat.h	26;"	d
MAVLINK_MESSAGE_INFO_HEARTBEAT	common/mavlink_msg_heartbeat.h	39;"	d
MAVLINK_MESSAGE_INFO_HIGHRES_IMU	common/mavlink_msg_highres_imu.h	35;"	d
MAVLINK_MESSAGE_INFO_HIGHRES_IMU	common/mavlink_msg_highres_imu.h	57;"	d
MAVLINK_MESSAGE_INFO_HIL_CONTROLS	common/mavlink_msg_hil_controls.h	31;"	d
MAVLINK_MESSAGE_INFO_HIL_CONTROLS	common/mavlink_msg_hil_controls.h	49;"	d
MAVLINK_MESSAGE_INFO_HIL_GPS	common/mavlink_msg_hil_gps.h	33;"	d
MAVLINK_MESSAGE_INFO_HIL_GPS	common/mavlink_msg_hil_gps.h	53;"	d
MAVLINK_MESSAGE_INFO_HIL_OPTICAL_FLOW	common/mavlink_msg_hil_optical_flow.h	32;"	d
MAVLINK_MESSAGE_INFO_HIL_OPTICAL_FLOW	common/mavlink_msg_hil_optical_flow.h	51;"	d
MAVLINK_MESSAGE_INFO_HIL_RC_INPUTS_RAW	common/mavlink_msg_hil_rc_inputs_raw.h	34;"	d
MAVLINK_MESSAGE_INFO_HIL_RC_INPUTS_RAW	common/mavlink_msg_hil_rc_inputs_raw.h	55;"	d
MAVLINK_MESSAGE_INFO_HIL_SENSOR	common/mavlink_msg_hil_sensor.h	35;"	d
MAVLINK_MESSAGE_INFO_HIL_SENSOR	common/mavlink_msg_hil_sensor.h	57;"	d
MAVLINK_MESSAGE_INFO_HIL_STATE	common/mavlink_msg_hil_state.h	36;"	d
MAVLINK_MESSAGE_INFO_HIL_STATE	common/mavlink_msg_hil_state.h	59;"	d
MAVLINK_MESSAGE_INFO_HIL_STATE_QUATERNION	common/mavlink_msg_hil_state_quaternion.h	36;"	d
MAVLINK_MESSAGE_INFO_HIL_STATE_QUATERNION	common/mavlink_msg_hil_state_quaternion.h	59;"	d
MAVLINK_MESSAGE_INFO_HOME_POSITION	common/mavlink_msg_home_position.h	30;"	d
MAVLINK_MESSAGE_INFO_HOME_POSITION	common/mavlink_msg_home_position.h	47;"	d
MAVLINK_MESSAGE_INFO_LANDING_TARGET	common/mavlink_msg_landing_target.h	28;"	d
MAVLINK_MESSAGE_INFO_LANDING_TARGET	common/mavlink_msg_landing_target.h	43;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED	common/mavlink_msg_local_position_ned.h	27;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED	common/mavlink_msg_local_position_ned.h	41;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_COV	common/mavlink_msg_local_position_ned_cov.h	33;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_COV	common/mavlink_msg_local_position_ned_cov.h	53;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET	common/mavlink_msg_local_position_ned_system_global_offset.h	27;"	d
MAVLINK_MESSAGE_INFO_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET	common/mavlink_msg_local_position_ned_system_global_offset.h	41;"	d
MAVLINK_MESSAGE_INFO_LOG_DATA	common/mavlink_msg_log_data.h	24;"	d
MAVLINK_MESSAGE_INFO_LOG_DATA	common/mavlink_msg_log_data.h	35;"	d
MAVLINK_MESSAGE_INFO_LOG_ENTRY	common/mavlink_msg_log_entry.h	25;"	d
MAVLINK_MESSAGE_INFO_LOG_ENTRY	common/mavlink_msg_log_entry.h	37;"	d
MAVLINK_MESSAGE_INFO_LOG_ERASE	common/mavlink_msg_log_erase.h	22;"	d
MAVLINK_MESSAGE_INFO_LOG_ERASE	common/mavlink_msg_log_erase.h	31;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_DATA	common/mavlink_msg_log_request_data.h	25;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_DATA	common/mavlink_msg_log_request_data.h	37;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_END	common/mavlink_msg_log_request_end.h	22;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_END	common/mavlink_msg_log_request_end.h	31;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_LIST	common/mavlink_msg_log_request_list.h	24;"	d
MAVLINK_MESSAGE_INFO_LOG_REQUEST_LIST	common/mavlink_msg_log_request_list.h	35;"	d
MAVLINK_MESSAGE_INFO_MANUAL_CONTROL	common/mavlink_msg_manual_control.h	26;"	d
MAVLINK_MESSAGE_INFO_MANUAL_CONTROL	common/mavlink_msg_manual_control.h	39;"	d
MAVLINK_MESSAGE_INFO_MANUAL_SETPOINT	common/mavlink_msg_manual_setpoint.h	27;"	d
MAVLINK_MESSAGE_INFO_MANUAL_SETPOINT	common/mavlink_msg_manual_setpoint.h	41;"	d
MAVLINK_MESSAGE_INFO_MEMORY_VECT	common/mavlink_msg_memory_vect.h	24;"	d
MAVLINK_MESSAGE_INFO_MEMORY_VECT	common/mavlink_msg_memory_vect.h	35;"	d
MAVLINK_MESSAGE_INFO_MESSAGE_INTERVAL	common/mavlink_msg_message_interval.h	22;"	d
MAVLINK_MESSAGE_INFO_MESSAGE_INTERVAL	common/mavlink_msg_message_interval.h	31;"	d
MAVLINK_MESSAGE_INFO_MISSION_ACK	common/mavlink_msg_mission_ack.h	23;"	d
MAVLINK_MESSAGE_INFO_MISSION_ACK	common/mavlink_msg_mission_ack.h	33;"	d
MAVLINK_MESSAGE_INFO_MISSION_CLEAR_ALL	common/mavlink_msg_mission_clear_all.h	22;"	d
MAVLINK_MESSAGE_INFO_MISSION_CLEAR_ALL	common/mavlink_msg_mission_clear_all.h	31;"	d
MAVLINK_MESSAGE_INFO_MISSION_COUNT	common/mavlink_msg_mission_count.h	23;"	d
MAVLINK_MESSAGE_INFO_MISSION_COUNT	common/mavlink_msg_mission_count.h	33;"	d
MAVLINK_MESSAGE_INFO_MISSION_CURRENT	common/mavlink_msg_mission_current.h	21;"	d
MAVLINK_MESSAGE_INFO_MISSION_CURRENT	common/mavlink_msg_mission_current.h	29;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM	common/mavlink_msg_mission_item.h	34;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM	common/mavlink_msg_mission_item.h	55;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM_INT	common/mavlink_msg_mission_item_int.h	34;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM_INT	common/mavlink_msg_mission_item_int.h	55;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM_REACHED	common/mavlink_msg_mission_item_reached.h	21;"	d
MAVLINK_MESSAGE_INFO_MISSION_ITEM_REACHED	common/mavlink_msg_mission_item_reached.h	29;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST	common/mavlink_msg_mission_request.h	23;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST	common/mavlink_msg_mission_request.h	33;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_INT	common/mavlink_msg_mission_request_int.h	23;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_INT	common/mavlink_msg_mission_request_int.h	33;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_LIST	common/mavlink_msg_mission_request_list.h	22;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_LIST	common/mavlink_msg_mission_request_list.h	31;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_PARTIAL_LIST	common/mavlink_msg_mission_request_partial_list.h	24;"	d
MAVLINK_MESSAGE_INFO_MISSION_REQUEST_PARTIAL_LIST	common/mavlink_msg_mission_request_partial_list.h	35;"	d
MAVLINK_MESSAGE_INFO_MISSION_SET_CURRENT	common/mavlink_msg_mission_set_current.h	23;"	d
MAVLINK_MESSAGE_INFO_MISSION_SET_CURRENT	common/mavlink_msg_mission_set_current.h	33;"	d
MAVLINK_MESSAGE_INFO_MISSION_WRITE_PARTIAL_LIST	common/mavlink_msg_mission_write_partial_list.h	24;"	d
MAVLINK_MESSAGE_INFO_MISSION_WRITE_PARTIAL_LIST	common/mavlink_msg_mission_write_partial_list.h	35;"	d
MAVLINK_MESSAGE_INFO_MOUNT_GIMBAL_CONTROL	ntian/mavlink_msg_mount_gimbal_control.h	26;"	d
MAVLINK_MESSAGE_INFO_MOUNT_GIMBAL_CONTROL	ntian/mavlink_msg_mount_gimbal_control.h	39;"	d
MAVLINK_MESSAGE_INFO_NAMED_VALUE_FLOAT	common/mavlink_msg_named_value_float.h	23;"	d
MAVLINK_MESSAGE_INFO_NAMED_VALUE_FLOAT	common/mavlink_msg_named_value_float.h	33;"	d
MAVLINK_MESSAGE_INFO_NAMED_VALUE_INT	common/mavlink_msg_named_value_int.h	23;"	d
MAVLINK_MESSAGE_INFO_NAMED_VALUE_INT	common/mavlink_msg_named_value_int.h	33;"	d
MAVLINK_MESSAGE_INFO_NAV_CONTROLLER_OUTPUT	common/mavlink_msg_nav_controller_output.h	28;"	d
MAVLINK_MESSAGE_INFO_NAV_CONTROLLER_OUTPUT	common/mavlink_msg_nav_controller_output.h	43;"	d
MAVLINK_MESSAGE_INFO_OPTICAL_FLOW	common/mavlink_msg_optical_flow.h	28;"	d
MAVLINK_MESSAGE_INFO_OPTICAL_FLOW	common/mavlink_msg_optical_flow.h	43;"	d
MAVLINK_MESSAGE_INFO_OPTICAL_FLOW_RAD	common/mavlink_msg_optical_flow_rad.h	32;"	d
MAVLINK_MESSAGE_INFO_OPTICAL_FLOW_RAD	common/mavlink_msg_optical_flow_rad.h	51;"	d
MAVLINK_MESSAGE_INFO_PARAM_MAP_RC	common/mavlink_msg_param_map_rc.h	29;"	d
MAVLINK_MESSAGE_INFO_PARAM_MAP_RC	common/mavlink_msg_param_map_rc.h	45;"	d
MAVLINK_MESSAGE_INFO_PARAM_REQUEST_LIST	common/mavlink_msg_param_request_list.h	22;"	d
MAVLINK_MESSAGE_INFO_PARAM_REQUEST_LIST	common/mavlink_msg_param_request_list.h	31;"	d
MAVLINK_MESSAGE_INFO_PARAM_REQUEST_READ	common/mavlink_msg_param_request_read.h	24;"	d
MAVLINK_MESSAGE_INFO_PARAM_REQUEST_READ	common/mavlink_msg_param_request_read.h	35;"	d
MAVLINK_MESSAGE_INFO_PARAM_SET	common/mavlink_msg_param_set.h	25;"	d
MAVLINK_MESSAGE_INFO_PARAM_SET	common/mavlink_msg_param_set.h	37;"	d
MAVLINK_MESSAGE_INFO_PARAM_VALUE	common/mavlink_msg_param_value.h	25;"	d
MAVLINK_MESSAGE_INFO_PARAM_VALUE	common/mavlink_msg_param_value.h	37;"	d
MAVLINK_MESSAGE_INFO_PING	common/mavlink_msg_ping.h	24;"	d
MAVLINK_MESSAGE_INFO_PING	common/mavlink_msg_ping.h	35;"	d
MAVLINK_MESSAGE_INFO_POSITION_TARGET_GLOBAL_INT	common/mavlink_msg_position_target_global_int.h	34;"	d
MAVLINK_MESSAGE_INFO_POSITION_TARGET_GLOBAL_INT	common/mavlink_msg_position_target_global_int.h	55;"	d
MAVLINK_MESSAGE_INFO_POSITION_TARGET_LOCAL_NED	common/mavlink_msg_position_target_local_ned.h	34;"	d
MAVLINK_MESSAGE_INFO_POSITION_TARGET_LOCAL_NED	common/mavlink_msg_position_target_local_ned.h	55;"	d
MAVLINK_MESSAGE_INFO_POWER_STATUS	common/mavlink_msg_power_status.h	23;"	d
MAVLINK_MESSAGE_INFO_POWER_STATUS	common/mavlink_msg_power_status.h	33;"	d
MAVLINK_MESSAGE_INFO_RADIO_STATUS	common/mavlink_msg_radio_status.h	27;"	d
MAVLINK_MESSAGE_INFO_RADIO_STATUS	common/mavlink_msg_radio_status.h	41;"	d
MAVLINK_MESSAGE_INFO_RAW_IMU	common/mavlink_msg_raw_imu.h	30;"	d
MAVLINK_MESSAGE_INFO_RAW_IMU	common/mavlink_msg_raw_imu.h	47;"	d
MAVLINK_MESSAGE_INFO_RAW_PRESSURE	common/mavlink_msg_raw_pressure.h	25;"	d
MAVLINK_MESSAGE_INFO_RAW_PRESSURE	common/mavlink_msg_raw_pressure.h	37;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS	common/mavlink_msg_rc_channels.h	41;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS	common/mavlink_msg_rc_channels.h	69;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_OVERRIDE	common/mavlink_msg_rc_channels_override.h	30;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_OVERRIDE	common/mavlink_msg_rc_channels_override.h	47;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_RAW	common/mavlink_msg_rc_channels_raw.h	31;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_RAW	common/mavlink_msg_rc_channels_raw.h	49;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_SCALED	common/mavlink_msg_rc_channels_scaled.h	31;"	d
MAVLINK_MESSAGE_INFO_RC_CHANNELS_SCALED	common/mavlink_msg_rc_channels_scaled.h	49;"	d
MAVLINK_MESSAGE_INFO_REQUEST_DATA_STREAM	common/mavlink_msg_request_data_stream.h	25;"	d
MAVLINK_MESSAGE_INFO_REQUEST_DATA_STREAM	common/mavlink_msg_request_data_stream.h	37;"	d
MAVLINK_MESSAGE_INFO_RESOURCE_REQUEST	common/mavlink_msg_resource_request.h	26;"	d
MAVLINK_MESSAGE_INFO_RESOURCE_REQUEST	common/mavlink_msg_resource_request.h	38;"	d
MAVLINK_MESSAGE_INFO_SAFETY_ALLOWED_AREA	common/mavlink_msg_safety_allowed_area.h	27;"	d
MAVLINK_MESSAGE_INFO_SAFETY_ALLOWED_AREA	common/mavlink_msg_safety_allowed_area.h	41;"	d
MAVLINK_MESSAGE_INFO_SAFETY_SET_ALLOWED_AREA	common/mavlink_msg_safety_set_allowed_area.h	29;"	d
MAVLINK_MESSAGE_INFO_SAFETY_SET_ALLOWED_AREA	common/mavlink_msg_safety_set_allowed_area.h	45;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU	common/mavlink_msg_scaled_imu.h	30;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU	common/mavlink_msg_scaled_imu.h	47;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU2	common/mavlink_msg_scaled_imu2.h	30;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU2	common/mavlink_msg_scaled_imu2.h	47;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU3	common/mavlink_msg_scaled_imu3.h	30;"	d
MAVLINK_MESSAGE_INFO_SCALED_IMU3	common/mavlink_msg_scaled_imu3.h	47;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE	common/mavlink_msg_scaled_pressure.h	24;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE	common/mavlink_msg_scaled_pressure.h	35;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE2	common/mavlink_msg_scaled_pressure2.h	24;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE2	common/mavlink_msg_scaled_pressure2.h	35;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE3	common/mavlink_msg_scaled_pressure3.h	24;"	d
MAVLINK_MESSAGE_INFO_SCALED_PRESSURE3	common/mavlink_msg_scaled_pressure3.h	35;"	d
MAVLINK_MESSAGE_INFO_SERIAL_CONTROL	common/mavlink_msg_serial_control.h	26;"	d
MAVLINK_MESSAGE_INFO_SERIAL_CONTROL	common/mavlink_msg_serial_control.h	39;"	d
MAVLINK_MESSAGE_INFO_SERVO_OUTPUT_RAW	common/mavlink_msg_servo_output_raw.h	30;"	d
MAVLINK_MESSAGE_INFO_SERVO_OUTPUT_RAW	common/mavlink_msg_servo_output_raw.h	47;"	d
MAVLINK_MESSAGE_INFO_SETUP_SIGNING	common/mavlink_msg_setup_signing.h	24;"	d
MAVLINK_MESSAGE_INFO_SETUP_SIGNING	common/mavlink_msg_setup_signing.h	35;"	d
MAVLINK_MESSAGE_INFO_SET_ACTUATOR_CONTROL_TARGET	common/mavlink_msg_set_actuator_control_target.h	25;"	d
MAVLINK_MESSAGE_INFO_SET_ACTUATOR_CONTROL_TARGET	common/mavlink_msg_set_actuator_control_target.h	37;"	d
MAVLINK_MESSAGE_INFO_SET_ATTITUDE_TARGET	common/mavlink_msg_set_attitude_target.h	29;"	d
MAVLINK_MESSAGE_INFO_SET_ATTITUDE_TARGET	common/mavlink_msg_set_attitude_target.h	45;"	d
MAVLINK_MESSAGE_INFO_SET_GPS_GLOBAL_ORIGIN	common/mavlink_msg_set_gps_global_origin.h	24;"	d
MAVLINK_MESSAGE_INFO_SET_GPS_GLOBAL_ORIGIN	common/mavlink_msg_set_gps_global_origin.h	35;"	d
MAVLINK_MESSAGE_INFO_SET_HOME_POSITION	common/mavlink_msg_set_home_position.h	31;"	d
MAVLINK_MESSAGE_INFO_SET_HOME_POSITION	common/mavlink_msg_set_home_position.h	49;"	d
MAVLINK_MESSAGE_INFO_SET_MODE	common/mavlink_msg_set_mode.h	23;"	d
MAVLINK_MESSAGE_INFO_SET_MODE	common/mavlink_msg_set_mode.h	33;"	d
MAVLINK_MESSAGE_INFO_SET_POSITION_TARGET_GLOBAL_INT	common/mavlink_msg_set_position_target_global_int.h	36;"	d
MAVLINK_MESSAGE_INFO_SET_POSITION_TARGET_GLOBAL_INT	common/mavlink_msg_set_position_target_global_int.h	59;"	d
MAVLINK_MESSAGE_INFO_SET_POSITION_TARGET_LOCAL_NED	common/mavlink_msg_set_position_target_local_ned.h	36;"	d
MAVLINK_MESSAGE_INFO_SET_POSITION_TARGET_LOCAL_NED	common/mavlink_msg_set_position_target_local_ned.h	59;"	d
MAVLINK_MESSAGE_INFO_SIM_STATE	common/mavlink_msg_sim_state.h	41;"	d
MAVLINK_MESSAGE_INFO_SIM_STATE	common/mavlink_msg_sim_state.h	69;"	d
MAVLINK_MESSAGE_INFO_STATUSTEXT	common/mavlink_msg_statustext.h	22;"	d
MAVLINK_MESSAGE_INFO_STATUSTEXT	common/mavlink_msg_statustext.h	31;"	d
MAVLINK_MESSAGE_INFO_SYSTEM_TIME	common/mavlink_msg_system_time.h	22;"	d
MAVLINK_MESSAGE_INFO_SYSTEM_TIME	common/mavlink_msg_system_time.h	31;"	d
MAVLINK_MESSAGE_INFO_SYS_STATUS	common/mavlink_msg_sys_status.h	33;"	d
MAVLINK_MESSAGE_INFO_SYS_STATUS	common/mavlink_msg_sys_status.h	53;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_CHECK	common/mavlink_msg_terrain_check.h	22;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_CHECK	common/mavlink_msg_terrain_check.h	31;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_DATA	common/mavlink_msg_terrain_data.h	25;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_DATA	common/mavlink_msg_terrain_data.h	37;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_REPORT	common/mavlink_msg_terrain_report.h	27;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_REPORT	common/mavlink_msg_terrain_report.h	41;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_REQUEST	common/mavlink_msg_terrain_request.h	24;"	d
MAVLINK_MESSAGE_INFO_TERRAIN_REQUEST	common/mavlink_msg_terrain_request.h	35;"	d
MAVLINK_MESSAGE_INFO_TIMESYNC	common/mavlink_msg_timesync.h	22;"	d
MAVLINK_MESSAGE_INFO_TIMESYNC	common/mavlink_msg_timesync.h	31;"	d
MAVLINK_MESSAGE_INFO_V2_EXTENSION	common/mavlink_msg_v2_extension.h	25;"	d
MAVLINK_MESSAGE_INFO_V2_EXTENSION	common/mavlink_msg_v2_extension.h	37;"	d
MAVLINK_MESSAGE_INFO_VFR_HUD	common/mavlink_msg_vfr_hud.h	26;"	d
MAVLINK_MESSAGE_INFO_VFR_HUD	common/mavlink_msg_vfr_hud.h	39;"	d
MAVLINK_MESSAGE_INFO_VIBRATION	common/mavlink_msg_vibration.h	27;"	d
MAVLINK_MESSAGE_INFO_VIBRATION	common/mavlink_msg_vibration.h	41;"	d
MAVLINK_MESSAGE_INFO_VICON_POSITION_ESTIMATE	common/mavlink_msg_vicon_position_estimate.h	27;"	d
MAVLINK_MESSAGE_INFO_VICON_POSITION_ESTIMATE	common/mavlink_msg_vicon_position_estimate.h	41;"	d
MAVLINK_MESSAGE_INFO_VISION_POSITION_ESTIMATE	common/mavlink_msg_vision_position_estimate.h	27;"	d
MAVLINK_MESSAGE_INFO_VISION_POSITION_ESTIMATE	common/mavlink_msg_vision_position_estimate.h	41;"	d
MAVLINK_MESSAGE_INFO_VISION_SPEED_ESTIMATE	common/mavlink_msg_vision_speed_estimate.h	24;"	d
MAVLINK_MESSAGE_INFO_VISION_SPEED_ESTIMATE	common/mavlink_msg_vision_speed_estimate.h	35;"	d
MAVLINK_MESSAGE_INFO_WIND_COV	common/mavlink_msg_wind_cov.h	29;"	d
MAVLINK_MESSAGE_INFO_WIND_COV	common/mavlink_msg_wind_cov.h	45;"	d
MAVLINK_MESSAGE_LENGTH	mavlink_helpers.h	570;"	d
MAVLINK_MESSAGE_LENGTHS	common/common.h	19;"	d
MAVLINK_MESSAGE_LENGTHS	ntian/ntian.h	19;"	d
MAVLINK_MSG_ACTUATOR_CONTROL_TARGET_FIELD_CONTROLS_LEN	common/mavlink_msg_actuator_control_target.h	20;"	d
MAVLINK_MSG_ADSB_VEHICLE_FIELD_CALLSIGN_LEN	common/mavlink_msg_adsb_vehicle.h	30;"	d
MAVLINK_MSG_ATTITUDE_QUATERNION_COV_FIELD_COVARIANCE_LEN	common/mavlink_msg_attitude_quaternion_cov.h	24;"	d
MAVLINK_MSG_ATTITUDE_QUATERNION_COV_FIELD_Q_LEN	common/mavlink_msg_attitude_quaternion_cov.h	23;"	d
MAVLINK_MSG_ATTITUDE_TARGET_FIELD_Q_LEN	common/mavlink_msg_attitude_target.h	24;"	d
MAVLINK_MSG_ATT_POS_MOCAP_FIELD_Q_LEN	common/mavlink_msg_att_pos_mocap.h	22;"	d
MAVLINK_MSG_AUTH_KEY_FIELD_KEY_LEN	common/mavlink_msg_auth_key.h	18;"	d
MAVLINK_MSG_AUTOPILOT_VERSION_FIELD_FLIGHT_CUSTOM_VERSION_LEN	common/mavlink_msg_autopilot_version.h	28;"	d
MAVLINK_MSG_AUTOPILOT_VERSION_FIELD_MIDDLEWARE_CUSTOM_VERSION_LEN	common/mavlink_msg_autopilot_version.h	29;"	d
MAVLINK_MSG_AUTOPILOT_VERSION_FIELD_OS_CUSTOM_VERSION_LEN	common/mavlink_msg_autopilot_version.h	30;"	d
MAVLINK_MSG_BATTERY_STATUS_FIELD_VOLTAGES_LEN	common/mavlink_msg_battery_status.h	26;"	d
MAVLINK_MSG_CHANGE_OPERATOR_CONTROL_FIELD_PASSKEY_LEN	common/mavlink_msg_change_operator_control.h	21;"	d
MAVLINK_MSG_CONTROL_SYSTEM_STATE_FIELD_POS_VARIANCE_LEN	common/mavlink_msg_control_system_state.h	35;"	d
MAVLINK_MSG_CONTROL_SYSTEM_STATE_FIELD_Q_LEN	common/mavlink_msg_control_system_state.h	36;"	d
MAVLINK_MSG_CONTROL_SYSTEM_STATE_FIELD_VEL_VARIANCE_LEN	common/mavlink_msg_control_system_state.h	34;"	d
MAVLINK_MSG_DEBUG_VECT_FIELD_NAME_LEN	common/mavlink_msg_debug_vect.h	22;"	d
MAVLINK_MSG_ENCAPSULATED_DATA_FIELD_DATA_LEN	common/mavlink_msg_encapsulated_data.h	19;"	d
MAVLINK_MSG_FILE_TRANSFER_PROTOCOL_FIELD_PAYLOAD_LEN	common/mavlink_msg_file_transfer_protocol.h	21;"	d
MAVLINK_MSG_FOLLOW_TARGET_FIELD_ACC_LEN	common/mavlink_msg_follow_target.h	29;"	d
MAVLINK_MSG_FOLLOW_TARGET_FIELD_ATTITUDE_Q_LEN	common/mavlink_msg_follow_target.h	30;"	d
MAVLINK_MSG_FOLLOW_TARGET_FIELD_POSITION_COV_LEN	common/mavlink_msg_follow_target.h	32;"	d
MAVLINK_MSG_FOLLOW_TARGET_FIELD_RATES_LEN	common/mavlink_msg_follow_target.h	31;"	d
MAVLINK_MSG_FOLLOW_TARGET_FIELD_VEL_LEN	common/mavlink_msg_follow_target.h	28;"	d
MAVLINK_MSG_GLOBAL_POSITION_INT_COV_FIELD_COVARIANCE_LEN	common/mavlink_msg_global_position_int_cov.h	28;"	d
MAVLINK_MSG_GPS_INJECT_DATA_FIELD_DATA_LEN	common/mavlink_msg_gps_inject_data.h	21;"	d
MAVLINK_MSG_GPS_RTCM_DATA_FIELD_DATA_LEN	common/mavlink_msg_gps_rtcm_data.h	20;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_AZIMUTH_LEN	common/mavlink_msg_gps_status.h	26;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_ELEVATION_LEN	common/mavlink_msg_gps_status.h	25;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_PRN_LEN	common/mavlink_msg_gps_status.h	23;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_SNR_LEN	common/mavlink_msg_gps_status.h	27;"	d
MAVLINK_MSG_GPS_STATUS_FIELD_SATELLITE_USED_LEN	common/mavlink_msg_gps_status.h	24;"	d
MAVLINK_MSG_HIL_STATE_QUATERNION_FIELD_ATTITUDE_QUATERNION_LEN	common/mavlink_msg_hil_state_quaternion.h	33;"	d
MAVLINK_MSG_HOME_POSITION_FIELD_Q_LEN	common/mavlink_msg_home_position.h	27;"	d
MAVLINK_MSG_ID_0_CRC	common/mavlink_msg_heartbeat.h	21;"	d
MAVLINK_MSG_ID_0_LEN	common/mavlink_msg_heartbeat.h	17;"	d
MAVLINK_MSG_ID_0_MIN_LEN	common/mavlink_msg_heartbeat.h	18;"	d
MAVLINK_MSG_ID_100_CRC	common/mavlink_msg_optical_flow.h	23;"	d
MAVLINK_MSG_ID_100_LEN	common/mavlink_msg_optical_flow.h	19;"	d
MAVLINK_MSG_ID_100_MIN_LEN	common/mavlink_msg_optical_flow.h	20;"	d
MAVLINK_MSG_ID_101_CRC	common/mavlink_msg_global_vision_position_estimate.h	22;"	d
MAVLINK_MSG_ID_101_LEN	common/mavlink_msg_global_vision_position_estimate.h	18;"	d
MAVLINK_MSG_ID_101_MIN_LEN	common/mavlink_msg_global_vision_position_estimate.h	19;"	d
MAVLINK_MSG_ID_102_CRC	common/mavlink_msg_vision_position_estimate.h	22;"	d
MAVLINK_MSG_ID_102_LEN	common/mavlink_msg_vision_position_estimate.h	18;"	d
MAVLINK_MSG_ID_102_MIN_LEN	common/mavlink_msg_vision_position_estimate.h	19;"	d
MAVLINK_MSG_ID_103_CRC	common/mavlink_msg_vision_speed_estimate.h	19;"	d
MAVLINK_MSG_ID_103_LEN	common/mavlink_msg_vision_speed_estimate.h	15;"	d
MAVLINK_MSG_ID_103_MIN_LEN	common/mavlink_msg_vision_speed_estimate.h	16;"	d
MAVLINK_MSG_ID_104_CRC	common/mavlink_msg_vicon_position_estimate.h	22;"	d
MAVLINK_MSG_ID_104_LEN	common/mavlink_msg_vicon_position_estimate.h	18;"	d
MAVLINK_MSG_ID_104_MIN_LEN	common/mavlink_msg_vicon_position_estimate.h	19;"	d
MAVLINK_MSG_ID_105_CRC	common/mavlink_msg_highres_imu.h	30;"	d
MAVLINK_MSG_ID_105_LEN	common/mavlink_msg_highres_imu.h	26;"	d
MAVLINK_MSG_ID_105_MIN_LEN	common/mavlink_msg_highres_imu.h	27;"	d
MAVLINK_MSG_ID_106_CRC	common/mavlink_msg_optical_flow_rad.h	27;"	d
MAVLINK_MSG_ID_106_LEN	common/mavlink_msg_optical_flow_rad.h	23;"	d
MAVLINK_MSG_ID_106_MIN_LEN	common/mavlink_msg_optical_flow_rad.h	24;"	d
MAVLINK_MSG_ID_107_CRC	common/mavlink_msg_hil_sensor.h	30;"	d
MAVLINK_MSG_ID_107_LEN	common/mavlink_msg_hil_sensor.h	26;"	d
MAVLINK_MSG_ID_107_MIN_LEN	common/mavlink_msg_hil_sensor.h	27;"	d
MAVLINK_MSG_ID_108_CRC	common/mavlink_msg_sim_state.h	36;"	d
MAVLINK_MSG_ID_108_LEN	common/mavlink_msg_sim_state.h	32;"	d
MAVLINK_MSG_ID_108_MIN_LEN	common/mavlink_msg_sim_state.h	33;"	d
MAVLINK_MSG_ID_109_CRC	common/mavlink_msg_radio_status.h	22;"	d
MAVLINK_MSG_ID_109_LEN	common/mavlink_msg_radio_status.h	18;"	d
MAVLINK_MSG_ID_109_MIN_LEN	common/mavlink_msg_radio_status.h	19;"	d
MAVLINK_MSG_ID_110_CRC	common/mavlink_msg_file_transfer_protocol.h	19;"	d
MAVLINK_MSG_ID_110_LEN	common/mavlink_msg_file_transfer_protocol.h	15;"	d
MAVLINK_MSG_ID_110_MIN_LEN	common/mavlink_msg_file_transfer_protocol.h	16;"	d
MAVLINK_MSG_ID_111_CRC	common/mavlink_msg_timesync.h	17;"	d
MAVLINK_MSG_ID_111_LEN	common/mavlink_msg_timesync.h	13;"	d
MAVLINK_MSG_ID_111_MIN_LEN	common/mavlink_msg_timesync.h	14;"	d
MAVLINK_MSG_ID_112_CRC	common/mavlink_msg_camera_trigger.h	17;"	d
MAVLINK_MSG_ID_112_LEN	common/mavlink_msg_camera_trigger.h	13;"	d
MAVLINK_MSG_ID_112_MIN_LEN	common/mavlink_msg_camera_trigger.h	14;"	d
MAVLINK_MSG_ID_113_CRC	common/mavlink_msg_hil_gps.h	28;"	d
MAVLINK_MSG_ID_113_LEN	common/mavlink_msg_hil_gps.h	24;"	d
MAVLINK_MSG_ID_113_MIN_LEN	common/mavlink_msg_hil_gps.h	25;"	d
MAVLINK_MSG_ID_114_CRC	common/mavlink_msg_hil_optical_flow.h	27;"	d
MAVLINK_MSG_ID_114_LEN	common/mavlink_msg_hil_optical_flow.h	23;"	d
MAVLINK_MSG_ID_114_MIN_LEN	common/mavlink_msg_hil_optical_flow.h	24;"	d
MAVLINK_MSG_ID_115_CRC	common/mavlink_msg_hil_state_quaternion.h	31;"	d
MAVLINK_MSG_ID_115_LEN	common/mavlink_msg_hil_state_quaternion.h	27;"	d
MAVLINK_MSG_ID_115_MIN_LEN	common/mavlink_msg_hil_state_quaternion.h	28;"	d
MAVLINK_MSG_ID_116_CRC	common/mavlink_msg_scaled_imu2.h	25;"	d
MAVLINK_MSG_ID_116_LEN	common/mavlink_msg_scaled_imu2.h	21;"	d
MAVLINK_MSG_ID_116_MIN_LEN	common/mavlink_msg_scaled_imu2.h	22;"	d
MAVLINK_MSG_ID_117_CRC	common/mavlink_msg_log_request_list.h	19;"	d
MAVLINK_MSG_ID_117_LEN	common/mavlink_msg_log_request_list.h	15;"	d
MAVLINK_MSG_ID_117_MIN_LEN	common/mavlink_msg_log_request_list.h	16;"	d
MAVLINK_MSG_ID_118_CRC	common/mavlink_msg_log_entry.h	20;"	d
MAVLINK_MSG_ID_118_LEN	common/mavlink_msg_log_entry.h	16;"	d
MAVLINK_MSG_ID_118_MIN_LEN	common/mavlink_msg_log_entry.h	17;"	d
MAVLINK_MSG_ID_119_CRC	common/mavlink_msg_log_request_data.h	20;"	d
MAVLINK_MSG_ID_119_LEN	common/mavlink_msg_log_request_data.h	16;"	d
MAVLINK_MSG_ID_119_MIN_LEN	common/mavlink_msg_log_request_data.h	17;"	d
MAVLINK_MSG_ID_11_CRC	common/mavlink_msg_set_mode.h	18;"	d
MAVLINK_MSG_ID_11_LEN	common/mavlink_msg_set_mode.h	14;"	d
MAVLINK_MSG_ID_11_MIN_LEN	common/mavlink_msg_set_mode.h	15;"	d
MAVLINK_MSG_ID_120_CRC	common/mavlink_msg_log_data.h	19;"	d
MAVLINK_MSG_ID_120_LEN	common/mavlink_msg_log_data.h	15;"	d
MAVLINK_MSG_ID_120_MIN_LEN	common/mavlink_msg_log_data.h	16;"	d
MAVLINK_MSG_ID_121_CRC	common/mavlink_msg_log_erase.h	17;"	d
MAVLINK_MSG_ID_121_LEN	common/mavlink_msg_log_erase.h	13;"	d
MAVLINK_MSG_ID_121_MIN_LEN	common/mavlink_msg_log_erase.h	14;"	d
MAVLINK_MSG_ID_122_CRC	common/mavlink_msg_log_request_end.h	17;"	d
MAVLINK_MSG_ID_122_LEN	common/mavlink_msg_log_request_end.h	13;"	d
MAVLINK_MSG_ID_122_MIN_LEN	common/mavlink_msg_log_request_end.h	14;"	d
MAVLINK_MSG_ID_123_CRC	common/mavlink_msg_gps_inject_data.h	19;"	d
MAVLINK_MSG_ID_123_LEN	common/mavlink_msg_gps_inject_data.h	15;"	d
MAVLINK_MSG_ID_123_MIN_LEN	common/mavlink_msg_gps_inject_data.h	16;"	d
MAVLINK_MSG_ID_124_CRC	common/mavlink_msg_gps2_raw.h	27;"	d
MAVLINK_MSG_ID_124_LEN	common/mavlink_msg_gps2_raw.h	23;"	d
MAVLINK_MSG_ID_124_MIN_LEN	common/mavlink_msg_gps2_raw.h	24;"	d
MAVLINK_MSG_ID_125_CRC	common/mavlink_msg_power_status.h	18;"	d
MAVLINK_MSG_ID_125_LEN	common/mavlink_msg_power_status.h	14;"	d
MAVLINK_MSG_ID_125_MIN_LEN	common/mavlink_msg_power_status.h	15;"	d
MAVLINK_MSG_ID_126_CRC	common/mavlink_msg_serial_control.h	21;"	d
MAVLINK_MSG_ID_126_LEN	common/mavlink_msg_serial_control.h	17;"	d
MAVLINK_MSG_ID_126_MIN_LEN	common/mavlink_msg_serial_control.h	18;"	d
MAVLINK_MSG_ID_127_CRC	common/mavlink_msg_gps_rtk.h	28;"	d
MAVLINK_MSG_ID_127_LEN	common/mavlink_msg_gps_rtk.h	24;"	d
MAVLINK_MSG_ID_127_MIN_LEN	common/mavlink_msg_gps_rtk.h	25;"	d
MAVLINK_MSG_ID_128_CRC	common/mavlink_msg_gps2_rtk.h	28;"	d
MAVLINK_MSG_ID_128_LEN	common/mavlink_msg_gps2_rtk.h	24;"	d
MAVLINK_MSG_ID_128_MIN_LEN	common/mavlink_msg_gps2_rtk.h	25;"	d
MAVLINK_MSG_ID_129_CRC	common/mavlink_msg_scaled_imu3.h	25;"	d
MAVLINK_MSG_ID_129_LEN	common/mavlink_msg_scaled_imu3.h	21;"	d
MAVLINK_MSG_ID_129_MIN_LEN	common/mavlink_msg_scaled_imu3.h	22;"	d
MAVLINK_MSG_ID_130_CRC	common/mavlink_msg_data_transmission_handshake.h	22;"	d
MAVLINK_MSG_ID_130_LEN	common/mavlink_msg_data_transmission_handshake.h	18;"	d
MAVLINK_MSG_ID_130_MIN_LEN	common/mavlink_msg_data_transmission_handshake.h	19;"	d
MAVLINK_MSG_ID_131_CRC	common/mavlink_msg_encapsulated_data.h	17;"	d
MAVLINK_MSG_ID_131_LEN	common/mavlink_msg_encapsulated_data.h	13;"	d
MAVLINK_MSG_ID_131_MIN_LEN	common/mavlink_msg_encapsulated_data.h	14;"	d
MAVLINK_MSG_ID_132_CRC	common/mavlink_msg_distance_sensor.h	23;"	d
MAVLINK_MSG_ID_132_LEN	common/mavlink_msg_distance_sensor.h	19;"	d
MAVLINK_MSG_ID_132_MIN_LEN	common/mavlink_msg_distance_sensor.h	20;"	d
MAVLINK_MSG_ID_133_CRC	common/mavlink_msg_terrain_request.h	19;"	d
MAVLINK_MSG_ID_133_LEN	common/mavlink_msg_terrain_request.h	15;"	d
MAVLINK_MSG_ID_133_MIN_LEN	common/mavlink_msg_terrain_request.h	16;"	d
MAVLINK_MSG_ID_134_CRC	common/mavlink_msg_terrain_data.h	20;"	d
MAVLINK_MSG_ID_134_LEN	common/mavlink_msg_terrain_data.h	16;"	d
MAVLINK_MSG_ID_134_MIN_LEN	common/mavlink_msg_terrain_data.h	17;"	d
MAVLINK_MSG_ID_135_CRC	common/mavlink_msg_terrain_check.h	17;"	d
MAVLINK_MSG_ID_135_LEN	common/mavlink_msg_terrain_check.h	13;"	d
MAVLINK_MSG_ID_135_MIN_LEN	common/mavlink_msg_terrain_check.h	14;"	d
MAVLINK_MSG_ID_136_CRC	common/mavlink_msg_terrain_report.h	22;"	d
MAVLINK_MSG_ID_136_LEN	common/mavlink_msg_terrain_report.h	18;"	d
MAVLINK_MSG_ID_136_MIN_LEN	common/mavlink_msg_terrain_report.h	19;"	d
MAVLINK_MSG_ID_137_CRC	common/mavlink_msg_scaled_pressure2.h	19;"	d
MAVLINK_MSG_ID_137_LEN	common/mavlink_msg_scaled_pressure2.h	15;"	d
MAVLINK_MSG_ID_137_MIN_LEN	common/mavlink_msg_scaled_pressure2.h	16;"	d
MAVLINK_MSG_ID_138_CRC	common/mavlink_msg_att_pos_mocap.h	20;"	d
MAVLINK_MSG_ID_138_LEN	common/mavlink_msg_att_pos_mocap.h	16;"	d
MAVLINK_MSG_ID_138_MIN_LEN	common/mavlink_msg_att_pos_mocap.h	17;"	d
MAVLINK_MSG_ID_139_CRC	common/mavlink_msg_set_actuator_control_target.h	20;"	d
MAVLINK_MSG_ID_139_LEN	common/mavlink_msg_set_actuator_control_target.h	16;"	d
MAVLINK_MSG_ID_139_MIN_LEN	common/mavlink_msg_set_actuator_control_target.h	17;"	d
MAVLINK_MSG_ID_140_CRC	common/mavlink_msg_actuator_control_target.h	18;"	d
MAVLINK_MSG_ID_140_LEN	common/mavlink_msg_actuator_control_target.h	14;"	d
MAVLINK_MSG_ID_140_MIN_LEN	common/mavlink_msg_actuator_control_target.h	15;"	d
MAVLINK_MSG_ID_141_CRC	common/mavlink_msg_altitude.h	22;"	d
MAVLINK_MSG_ID_141_LEN	common/mavlink_msg_altitude.h	18;"	d
MAVLINK_MSG_ID_141_MIN_LEN	common/mavlink_msg_altitude.h	19;"	d
MAVLINK_MSG_ID_142_CRC	common/mavlink_msg_resource_request.h	20;"	d
MAVLINK_MSG_ID_142_LEN	common/mavlink_msg_resource_request.h	16;"	d
MAVLINK_MSG_ID_142_MIN_LEN	common/mavlink_msg_resource_request.h	17;"	d
MAVLINK_MSG_ID_143_CRC	common/mavlink_msg_scaled_pressure3.h	19;"	d
MAVLINK_MSG_ID_143_LEN	common/mavlink_msg_scaled_pressure3.h	15;"	d
MAVLINK_MSG_ID_143_MIN_LEN	common/mavlink_msg_scaled_pressure3.h	16;"	d
MAVLINK_MSG_ID_144_CRC	common/mavlink_msg_follow_target.h	26;"	d
MAVLINK_MSG_ID_144_LEN	common/mavlink_msg_follow_target.h	22;"	d
MAVLINK_MSG_ID_144_MIN_LEN	common/mavlink_msg_follow_target.h	23;"	d
MAVLINK_MSG_ID_146_CRC	common/mavlink_msg_control_system_state.h	32;"	d
MAVLINK_MSG_ID_146_LEN	common/mavlink_msg_control_system_state.h	28;"	d
MAVLINK_MSG_ID_146_MIN_LEN	common/mavlink_msg_control_system_state.h	29;"	d
MAVLINK_MSG_ID_147_CRC	common/mavlink_msg_battery_status.h	24;"	d
MAVLINK_MSG_ID_147_LEN	common/mavlink_msg_battery_status.h	20;"	d
MAVLINK_MSG_ID_147_MIN_LEN	common/mavlink_msg_battery_status.h	21;"	d
MAVLINK_MSG_ID_148_CRC	common/mavlink_msg_autopilot_version.h	26;"	d
MAVLINK_MSG_ID_148_LEN	common/mavlink_msg_autopilot_version.h	22;"	d
MAVLINK_MSG_ID_148_MIN_LEN	common/mavlink_msg_autopilot_version.h	23;"	d
MAVLINK_MSG_ID_149_CRC	common/mavlink_msg_landing_target.h	23;"	d
MAVLINK_MSG_ID_149_LEN	common/mavlink_msg_landing_target.h	19;"	d
MAVLINK_MSG_ID_149_MIN_LEN	common/mavlink_msg_landing_target.h	20;"	d
MAVLINK_MSG_ID_156_CRC	ntian/mavlink_msg_mount_gimbal_control.h	21;"	d
MAVLINK_MSG_ID_156_LEN	ntian/mavlink_msg_mount_gimbal_control.h	17;"	d
MAVLINK_MSG_ID_156_MIN_LEN	ntian/mavlink_msg_mount_gimbal_control.h	18;"	d
MAVLINK_MSG_ID_1_CRC	common/mavlink_msg_sys_status.h	28;"	d
MAVLINK_MSG_ID_1_LEN	common/mavlink_msg_sys_status.h	24;"	d
MAVLINK_MSG_ID_1_MIN_LEN	common/mavlink_msg_sys_status.h	25;"	d
MAVLINK_MSG_ID_20_CRC	common/mavlink_msg_param_request_read.h	19;"	d
MAVLINK_MSG_ID_20_LEN	common/mavlink_msg_param_request_read.h	15;"	d
MAVLINK_MSG_ID_20_MIN_LEN	common/mavlink_msg_param_request_read.h	16;"	d
MAVLINK_MSG_ID_21_CRC	common/mavlink_msg_param_request_list.h	17;"	d
MAVLINK_MSG_ID_21_LEN	common/mavlink_msg_param_request_list.h	13;"	d
MAVLINK_MSG_ID_21_MIN_LEN	common/mavlink_msg_param_request_list.h	14;"	d
MAVLINK_MSG_ID_22_CRC	common/mavlink_msg_param_value.h	20;"	d
MAVLINK_MSG_ID_22_LEN	common/mavlink_msg_param_value.h	16;"	d
MAVLINK_MSG_ID_22_MIN_LEN	common/mavlink_msg_param_value.h	17;"	d
MAVLINK_MSG_ID_230_CRC	common/mavlink_msg_estimator_status.h	25;"	d
MAVLINK_MSG_ID_230_LEN	common/mavlink_msg_estimator_status.h	21;"	d
MAVLINK_MSG_ID_230_MIN_LEN	common/mavlink_msg_estimator_status.h	22;"	d
MAVLINK_MSG_ID_231_CRC	common/mavlink_msg_wind_cov.h	24;"	d
MAVLINK_MSG_ID_231_LEN	common/mavlink_msg_wind_cov.h	20;"	d
MAVLINK_MSG_ID_231_MIN_LEN	common/mavlink_msg_wind_cov.h	21;"	d
MAVLINK_MSG_ID_232_CRC	common/mavlink_msg_gps_input.h	33;"	d
MAVLINK_MSG_ID_232_LEN	common/mavlink_msg_gps_input.h	29;"	d
MAVLINK_MSG_ID_232_MIN_LEN	common/mavlink_msg_gps_input.h	30;"	d
MAVLINK_MSG_ID_233_CRC	common/mavlink_msg_gps_rtcm_data.h	18;"	d
MAVLINK_MSG_ID_233_LEN	common/mavlink_msg_gps_rtcm_data.h	14;"	d
MAVLINK_MSG_ID_233_MIN_LEN	common/mavlink_msg_gps_rtcm_data.h	15;"	d
MAVLINK_MSG_ID_23_CRC	common/mavlink_msg_param_set.h	20;"	d
MAVLINK_MSG_ID_23_LEN	common/mavlink_msg_param_set.h	16;"	d
MAVLINK_MSG_ID_23_MIN_LEN	common/mavlink_msg_param_set.h	17;"	d
MAVLINK_MSG_ID_241_CRC	common/mavlink_msg_vibration.h	22;"	d
MAVLINK_MSG_ID_241_LEN	common/mavlink_msg_vibration.h	18;"	d
MAVLINK_MSG_ID_241_MIN_LEN	common/mavlink_msg_vibration.h	19;"	d
MAVLINK_MSG_ID_242_CRC	common/mavlink_msg_home_position.h	25;"	d
MAVLINK_MSG_ID_242_LEN	common/mavlink_msg_home_position.h	21;"	d
MAVLINK_MSG_ID_242_MIN_LEN	common/mavlink_msg_home_position.h	22;"	d
MAVLINK_MSG_ID_243_CRC	common/mavlink_msg_set_home_position.h	26;"	d
MAVLINK_MSG_ID_243_LEN	common/mavlink_msg_set_home_position.h	22;"	d
MAVLINK_MSG_ID_243_MIN_LEN	common/mavlink_msg_set_home_position.h	23;"	d
MAVLINK_MSG_ID_244_CRC	common/mavlink_msg_message_interval.h	17;"	d
MAVLINK_MSG_ID_244_LEN	common/mavlink_msg_message_interval.h	13;"	d
MAVLINK_MSG_ID_244_MIN_LEN	common/mavlink_msg_message_interval.h	14;"	d
MAVLINK_MSG_ID_245_CRC	common/mavlink_msg_extended_sys_state.h	17;"	d
MAVLINK_MSG_ID_245_LEN	common/mavlink_msg_extended_sys_state.h	13;"	d
MAVLINK_MSG_ID_245_MIN_LEN	common/mavlink_msg_extended_sys_state.h	14;"	d
MAVLINK_MSG_ID_246_CRC	common/mavlink_msg_adsb_vehicle.h	28;"	d
MAVLINK_MSG_ID_246_LEN	common/mavlink_msg_adsb_vehicle.h	24;"	d
MAVLINK_MSG_ID_246_MIN_LEN	common/mavlink_msg_adsb_vehicle.h	25;"	d
MAVLINK_MSG_ID_248_CRC	common/mavlink_msg_v2_extension.h	20;"	d
MAVLINK_MSG_ID_248_LEN	common/mavlink_msg_v2_extension.h	16;"	d
MAVLINK_MSG_ID_248_MIN_LEN	common/mavlink_msg_v2_extension.h	17;"	d
MAVLINK_MSG_ID_249_CRC	common/mavlink_msg_memory_vect.h	19;"	d
MAVLINK_MSG_ID_249_LEN	common/mavlink_msg_memory_vect.h	15;"	d
MAVLINK_MSG_ID_249_MIN_LEN	common/mavlink_msg_memory_vect.h	16;"	d
MAVLINK_MSG_ID_24_CRC	common/mavlink_msg_gps_raw_int.h	25;"	d
MAVLINK_MSG_ID_24_LEN	common/mavlink_msg_gps_raw_int.h	21;"	d
MAVLINK_MSG_ID_24_MIN_LEN	common/mavlink_msg_gps_raw_int.h	22;"	d
MAVLINK_MSG_ID_250_CRC	common/mavlink_msg_debug_vect.h	20;"	d
MAVLINK_MSG_ID_250_LEN	common/mavlink_msg_debug_vect.h	16;"	d
MAVLINK_MSG_ID_250_MIN_LEN	common/mavlink_msg_debug_vect.h	17;"	d
MAVLINK_MSG_ID_251_CRC	common/mavlink_msg_named_value_float.h	18;"	d
MAVLINK_MSG_ID_251_LEN	common/mavlink_msg_named_value_float.h	14;"	d
MAVLINK_MSG_ID_251_MIN_LEN	common/mavlink_msg_named_value_float.h	15;"	d
MAVLINK_MSG_ID_252_CRC	common/mavlink_msg_named_value_int.h	18;"	d
MAVLINK_MSG_ID_252_LEN	common/mavlink_msg_named_value_int.h	14;"	d
MAVLINK_MSG_ID_252_MIN_LEN	common/mavlink_msg_named_value_int.h	15;"	d
MAVLINK_MSG_ID_253_CRC	common/mavlink_msg_statustext.h	17;"	d
MAVLINK_MSG_ID_253_LEN	common/mavlink_msg_statustext.h	13;"	d
MAVLINK_MSG_ID_253_MIN_LEN	common/mavlink_msg_statustext.h	14;"	d
MAVLINK_MSG_ID_254_CRC	common/mavlink_msg_debug.h	18;"	d
MAVLINK_MSG_ID_254_LEN	common/mavlink_msg_debug.h	14;"	d
MAVLINK_MSG_ID_254_MIN_LEN	common/mavlink_msg_debug.h	15;"	d
MAVLINK_MSG_ID_256_CRC	common/mavlink_msg_setup_signing.h	19;"	d
MAVLINK_MSG_ID_256_LEN	common/mavlink_msg_setup_signing.h	15;"	d
MAVLINK_MSG_ID_256_MIN_LEN	common/mavlink_msg_setup_signing.h	16;"	d
MAVLINK_MSG_ID_25_CRC	common/mavlink_msg_gps_status.h	21;"	d
MAVLINK_MSG_ID_25_LEN	common/mavlink_msg_gps_status.h	17;"	d
MAVLINK_MSG_ID_25_MIN_LEN	common/mavlink_msg_gps_status.h	18;"	d
MAVLINK_MSG_ID_26_CRC	common/mavlink_msg_scaled_imu.h	25;"	d
MAVLINK_MSG_ID_26_LEN	common/mavlink_msg_scaled_imu.h	21;"	d
MAVLINK_MSG_ID_26_MIN_LEN	common/mavlink_msg_scaled_imu.h	22;"	d
MAVLINK_MSG_ID_27_CRC	common/mavlink_msg_raw_imu.h	25;"	d
MAVLINK_MSG_ID_27_LEN	common/mavlink_msg_raw_imu.h	21;"	d
MAVLINK_MSG_ID_27_MIN_LEN	common/mavlink_msg_raw_imu.h	22;"	d
MAVLINK_MSG_ID_28_CRC	common/mavlink_msg_raw_pressure.h	20;"	d
MAVLINK_MSG_ID_28_LEN	common/mavlink_msg_raw_pressure.h	16;"	d
MAVLINK_MSG_ID_28_MIN_LEN	common/mavlink_msg_raw_pressure.h	17;"	d
MAVLINK_MSG_ID_29_CRC	common/mavlink_msg_scaled_pressure.h	19;"	d
MAVLINK_MSG_ID_29_LEN	common/mavlink_msg_scaled_pressure.h	15;"	d
MAVLINK_MSG_ID_29_MIN_LEN	common/mavlink_msg_scaled_pressure.h	16;"	d
MAVLINK_MSG_ID_2_CRC	common/mavlink_msg_system_time.h	17;"	d
MAVLINK_MSG_ID_2_LEN	common/mavlink_msg_system_time.h	13;"	d
MAVLINK_MSG_ID_2_MIN_LEN	common/mavlink_msg_system_time.h	14;"	d
MAVLINK_MSG_ID_30_CRC	common/mavlink_msg_attitude.h	22;"	d
MAVLINK_MSG_ID_30_LEN	common/mavlink_msg_attitude.h	18;"	d
MAVLINK_MSG_ID_30_MIN_LEN	common/mavlink_msg_attitude.h	19;"	d
MAVLINK_MSG_ID_31_CRC	common/mavlink_msg_attitude_quaternion.h	23;"	d
MAVLINK_MSG_ID_31_LEN	common/mavlink_msg_attitude_quaternion.h	19;"	d
MAVLINK_MSG_ID_31_MIN_LEN	common/mavlink_msg_attitude_quaternion.h	20;"	d
MAVLINK_MSG_ID_32_CRC	common/mavlink_msg_local_position_ned.h	22;"	d
MAVLINK_MSG_ID_32_LEN	common/mavlink_msg_local_position_ned.h	18;"	d
MAVLINK_MSG_ID_32_MIN_LEN	common/mavlink_msg_local_position_ned.h	19;"	d
MAVLINK_MSG_ID_33_CRC	common/mavlink_msg_global_position_int.h	24;"	d
MAVLINK_MSG_ID_33_LEN	common/mavlink_msg_global_position_int.h	20;"	d
MAVLINK_MSG_ID_33_MIN_LEN	common/mavlink_msg_global_position_int.h	21;"	d
MAVLINK_MSG_ID_34_CRC	common/mavlink_msg_rc_channels_scaled.h	26;"	d
MAVLINK_MSG_ID_34_LEN	common/mavlink_msg_rc_channels_scaled.h	22;"	d
MAVLINK_MSG_ID_34_MIN_LEN	common/mavlink_msg_rc_channels_scaled.h	23;"	d
MAVLINK_MSG_ID_35_CRC	common/mavlink_msg_rc_channels_raw.h	26;"	d
MAVLINK_MSG_ID_35_LEN	common/mavlink_msg_rc_channels_raw.h	22;"	d
MAVLINK_MSG_ID_35_MIN_LEN	common/mavlink_msg_rc_channels_raw.h	23;"	d
MAVLINK_MSG_ID_36_CRC	common/mavlink_msg_servo_output_raw.h	25;"	d
MAVLINK_MSG_ID_36_LEN	common/mavlink_msg_servo_output_raw.h	21;"	d
MAVLINK_MSG_ID_36_MIN_LEN	common/mavlink_msg_servo_output_raw.h	22;"	d
MAVLINK_MSG_ID_37_CRC	common/mavlink_msg_mission_request_partial_list.h	19;"	d
MAVLINK_MSG_ID_37_LEN	common/mavlink_msg_mission_request_partial_list.h	15;"	d
MAVLINK_MSG_ID_37_MIN_LEN	common/mavlink_msg_mission_request_partial_list.h	16;"	d
MAVLINK_MSG_ID_38_CRC	common/mavlink_msg_mission_write_partial_list.h	19;"	d
MAVLINK_MSG_ID_38_LEN	common/mavlink_msg_mission_write_partial_list.h	15;"	d
MAVLINK_MSG_ID_38_MIN_LEN	common/mavlink_msg_mission_write_partial_list.h	16;"	d
MAVLINK_MSG_ID_39_CRC	common/mavlink_msg_mission_item.h	29;"	d
MAVLINK_MSG_ID_39_LEN	common/mavlink_msg_mission_item.h	25;"	d
MAVLINK_MSG_ID_39_MIN_LEN	common/mavlink_msg_mission_item.h	26;"	d
MAVLINK_MSG_ID_40_CRC	common/mavlink_msg_mission_request.h	18;"	d
MAVLINK_MSG_ID_40_LEN	common/mavlink_msg_mission_request.h	14;"	d
MAVLINK_MSG_ID_40_MIN_LEN	common/mavlink_msg_mission_request.h	15;"	d
MAVLINK_MSG_ID_41_CRC	common/mavlink_msg_mission_set_current.h	18;"	d
MAVLINK_MSG_ID_41_LEN	common/mavlink_msg_mission_set_current.h	14;"	d
MAVLINK_MSG_ID_41_MIN_LEN	common/mavlink_msg_mission_set_current.h	15;"	d
MAVLINK_MSG_ID_42_CRC	common/mavlink_msg_mission_current.h	16;"	d
MAVLINK_MSG_ID_42_LEN	common/mavlink_msg_mission_current.h	12;"	d
MAVLINK_MSG_ID_42_MIN_LEN	common/mavlink_msg_mission_current.h	13;"	d
MAVLINK_MSG_ID_43_CRC	common/mavlink_msg_mission_request_list.h	17;"	d
MAVLINK_MSG_ID_43_LEN	common/mavlink_msg_mission_request_list.h	13;"	d
MAVLINK_MSG_ID_43_MIN_LEN	common/mavlink_msg_mission_request_list.h	14;"	d
MAVLINK_MSG_ID_44_CRC	common/mavlink_msg_mission_count.h	18;"	d
MAVLINK_MSG_ID_44_LEN	common/mavlink_msg_mission_count.h	14;"	d
MAVLINK_MSG_ID_44_MIN_LEN	common/mavlink_msg_mission_count.h	15;"	d
MAVLINK_MSG_ID_45_CRC	common/mavlink_msg_mission_clear_all.h	17;"	d
MAVLINK_MSG_ID_45_LEN	common/mavlink_msg_mission_clear_all.h	13;"	d
MAVLINK_MSG_ID_45_MIN_LEN	common/mavlink_msg_mission_clear_all.h	14;"	d
MAVLINK_MSG_ID_46_CRC	common/mavlink_msg_mission_item_reached.h	16;"	d
MAVLINK_MSG_ID_46_LEN	common/mavlink_msg_mission_item_reached.h	12;"	d
MAVLINK_MSG_ID_46_MIN_LEN	common/mavlink_msg_mission_item_reached.h	13;"	d
MAVLINK_MSG_ID_47_CRC	common/mavlink_msg_mission_ack.h	18;"	d
MAVLINK_MSG_ID_47_LEN	common/mavlink_msg_mission_ack.h	14;"	d
MAVLINK_MSG_ID_47_MIN_LEN	common/mavlink_msg_mission_ack.h	15;"	d
MAVLINK_MSG_ID_48_CRC	common/mavlink_msg_set_gps_global_origin.h	19;"	d
MAVLINK_MSG_ID_48_LEN	common/mavlink_msg_set_gps_global_origin.h	15;"	d
MAVLINK_MSG_ID_48_MIN_LEN	common/mavlink_msg_set_gps_global_origin.h	16;"	d
MAVLINK_MSG_ID_49_CRC	common/mavlink_msg_gps_global_origin.h	18;"	d
MAVLINK_MSG_ID_49_LEN	common/mavlink_msg_gps_global_origin.h	14;"	d
MAVLINK_MSG_ID_49_MIN_LEN	common/mavlink_msg_gps_global_origin.h	15;"	d
MAVLINK_MSG_ID_4_CRC	common/mavlink_msg_ping.h	19;"	d
MAVLINK_MSG_ID_4_LEN	common/mavlink_msg_ping.h	15;"	d
MAVLINK_MSG_ID_4_MIN_LEN	common/mavlink_msg_ping.h	16;"	d
MAVLINK_MSG_ID_50_CRC	common/mavlink_msg_param_map_rc.h	24;"	d
MAVLINK_MSG_ID_50_LEN	common/mavlink_msg_param_map_rc.h	20;"	d
MAVLINK_MSG_ID_50_MIN_LEN	common/mavlink_msg_param_map_rc.h	21;"	d
MAVLINK_MSG_ID_51_CRC	common/mavlink_msg_mission_request_int.h	18;"	d
MAVLINK_MSG_ID_51_LEN	common/mavlink_msg_mission_request_int.h	14;"	d
MAVLINK_MSG_ID_51_MIN_LEN	common/mavlink_msg_mission_request_int.h	15;"	d
MAVLINK_MSG_ID_54_CRC	common/mavlink_msg_safety_set_allowed_area.h	24;"	d
MAVLINK_MSG_ID_54_LEN	common/mavlink_msg_safety_set_allowed_area.h	20;"	d
MAVLINK_MSG_ID_54_MIN_LEN	common/mavlink_msg_safety_set_allowed_area.h	21;"	d
MAVLINK_MSG_ID_55_CRC	common/mavlink_msg_safety_allowed_area.h	22;"	d
MAVLINK_MSG_ID_55_LEN	common/mavlink_msg_safety_allowed_area.h	18;"	d
MAVLINK_MSG_ID_55_MIN_LEN	common/mavlink_msg_safety_allowed_area.h	19;"	d
MAVLINK_MSG_ID_5_CRC	common/mavlink_msg_change_operator_control.h	19;"	d
MAVLINK_MSG_ID_5_LEN	common/mavlink_msg_change_operator_control.h	15;"	d
MAVLINK_MSG_ID_5_MIN_LEN	common/mavlink_msg_change_operator_control.h	16;"	d
MAVLINK_MSG_ID_61_CRC	common/mavlink_msg_attitude_quaternion_cov.h	21;"	d
MAVLINK_MSG_ID_61_LEN	common/mavlink_msg_attitude_quaternion_cov.h	17;"	d
MAVLINK_MSG_ID_61_MIN_LEN	common/mavlink_msg_attitude_quaternion_cov.h	18;"	d
MAVLINK_MSG_ID_62_CRC	common/mavlink_msg_nav_controller_output.h	23;"	d
MAVLINK_MSG_ID_62_LEN	common/mavlink_msg_nav_controller_output.h	19;"	d
MAVLINK_MSG_ID_62_MIN_LEN	common/mavlink_msg_nav_controller_output.h	20;"	d
MAVLINK_MSG_ID_63_CRC	common/mavlink_msg_global_position_int_cov.h	26;"	d
MAVLINK_MSG_ID_63_LEN	common/mavlink_msg_global_position_int_cov.h	22;"	d
MAVLINK_MSG_ID_63_MIN_LEN	common/mavlink_msg_global_position_int_cov.h	23;"	d
MAVLINK_MSG_ID_64_CRC	common/mavlink_msg_local_position_ned_cov.h	28;"	d
MAVLINK_MSG_ID_64_LEN	common/mavlink_msg_local_position_ned_cov.h	24;"	d
MAVLINK_MSG_ID_64_MIN_LEN	common/mavlink_msg_local_position_ned_cov.h	25;"	d
MAVLINK_MSG_ID_65_CRC	common/mavlink_msg_rc_channels.h	36;"	d
MAVLINK_MSG_ID_65_LEN	common/mavlink_msg_rc_channels.h	32;"	d
MAVLINK_MSG_ID_65_MIN_LEN	common/mavlink_msg_rc_channels.h	33;"	d
MAVLINK_MSG_ID_66_CRC	common/mavlink_msg_request_data_stream.h	20;"	d
MAVLINK_MSG_ID_66_LEN	common/mavlink_msg_request_data_stream.h	16;"	d
MAVLINK_MSG_ID_66_MIN_LEN	common/mavlink_msg_request_data_stream.h	17;"	d
MAVLINK_MSG_ID_67_CRC	common/mavlink_msg_data_stream.h	18;"	d
MAVLINK_MSG_ID_67_LEN	common/mavlink_msg_data_stream.h	14;"	d
MAVLINK_MSG_ID_67_MIN_LEN	common/mavlink_msg_data_stream.h	15;"	d
MAVLINK_MSG_ID_69_CRC	common/mavlink_msg_manual_control.h	21;"	d
MAVLINK_MSG_ID_69_LEN	common/mavlink_msg_manual_control.h	17;"	d
MAVLINK_MSG_ID_69_MIN_LEN	common/mavlink_msg_manual_control.h	18;"	d
MAVLINK_MSG_ID_6_CRC	common/mavlink_msg_change_operator_control_ack.h	18;"	d
MAVLINK_MSG_ID_6_LEN	common/mavlink_msg_change_operator_control_ack.h	14;"	d
MAVLINK_MSG_ID_6_MIN_LEN	common/mavlink_msg_change_operator_control_ack.h	15;"	d
MAVLINK_MSG_ID_70_CRC	common/mavlink_msg_rc_channels_override.h	25;"	d
MAVLINK_MSG_ID_70_LEN	common/mavlink_msg_rc_channels_override.h	21;"	d
MAVLINK_MSG_ID_70_MIN_LEN	common/mavlink_msg_rc_channels_override.h	22;"	d
MAVLINK_MSG_ID_73_CRC	common/mavlink_msg_mission_item_int.h	29;"	d
MAVLINK_MSG_ID_73_LEN	common/mavlink_msg_mission_item_int.h	25;"	d
MAVLINK_MSG_ID_73_MIN_LEN	common/mavlink_msg_mission_item_int.h	26;"	d
MAVLINK_MSG_ID_74_CRC	common/mavlink_msg_vfr_hud.h	21;"	d
MAVLINK_MSG_ID_74_LEN	common/mavlink_msg_vfr_hud.h	17;"	d
MAVLINK_MSG_ID_74_MIN_LEN	common/mavlink_msg_vfr_hud.h	18;"	d
MAVLINK_MSG_ID_75_CRC	common/mavlink_msg_command_int.h	28;"	d
MAVLINK_MSG_ID_75_LEN	common/mavlink_msg_command_int.h	24;"	d
MAVLINK_MSG_ID_75_MIN_LEN	common/mavlink_msg_command_int.h	25;"	d
MAVLINK_MSG_ID_76_CRC	common/mavlink_msg_command_long.h	26;"	d
MAVLINK_MSG_ID_76_LEN	common/mavlink_msg_command_long.h	22;"	d
MAVLINK_MSG_ID_76_MIN_LEN	common/mavlink_msg_command_long.h	23;"	d
MAVLINK_MSG_ID_77_CRC	common/mavlink_msg_command_ack.h	17;"	d
MAVLINK_MSG_ID_77_LEN	common/mavlink_msg_command_ack.h	13;"	d
MAVLINK_MSG_ID_77_MIN_LEN	common/mavlink_msg_command_ack.h	14;"	d
MAVLINK_MSG_ID_7_CRC	common/mavlink_msg_auth_key.h	16;"	d
MAVLINK_MSG_ID_7_LEN	common/mavlink_msg_auth_key.h	12;"	d
MAVLINK_MSG_ID_7_MIN_LEN	common/mavlink_msg_auth_key.h	13;"	d
MAVLINK_MSG_ID_81_CRC	common/mavlink_msg_manual_setpoint.h	22;"	d
MAVLINK_MSG_ID_81_LEN	common/mavlink_msg_manual_setpoint.h	18;"	d
MAVLINK_MSG_ID_81_MIN_LEN	common/mavlink_msg_manual_setpoint.h	19;"	d
MAVLINK_MSG_ID_82_CRC	common/mavlink_msg_set_attitude_target.h	24;"	d
MAVLINK_MSG_ID_82_LEN	common/mavlink_msg_set_attitude_target.h	20;"	d
MAVLINK_MSG_ID_82_MIN_LEN	common/mavlink_msg_set_attitude_target.h	21;"	d
MAVLINK_MSG_ID_83_CRC	common/mavlink_msg_attitude_target.h	22;"	d
MAVLINK_MSG_ID_83_LEN	common/mavlink_msg_attitude_target.h	18;"	d
MAVLINK_MSG_ID_83_MIN_LEN	common/mavlink_msg_attitude_target.h	19;"	d
MAVLINK_MSG_ID_84_CRC	common/mavlink_msg_set_position_target_local_ned.h	31;"	d
MAVLINK_MSG_ID_84_LEN	common/mavlink_msg_set_position_target_local_ned.h	27;"	d
MAVLINK_MSG_ID_84_MIN_LEN	common/mavlink_msg_set_position_target_local_ned.h	28;"	d
MAVLINK_MSG_ID_85_CRC	common/mavlink_msg_position_target_local_ned.h	29;"	d
MAVLINK_MSG_ID_85_LEN	common/mavlink_msg_position_target_local_ned.h	25;"	d
MAVLINK_MSG_ID_85_MIN_LEN	common/mavlink_msg_position_target_local_ned.h	26;"	d
MAVLINK_MSG_ID_86_CRC	common/mavlink_msg_set_position_target_global_int.h	31;"	d
MAVLINK_MSG_ID_86_LEN	common/mavlink_msg_set_position_target_global_int.h	27;"	d
MAVLINK_MSG_ID_86_MIN_LEN	common/mavlink_msg_set_position_target_global_int.h	28;"	d
MAVLINK_MSG_ID_87_CRC	common/mavlink_msg_position_target_global_int.h	29;"	d
MAVLINK_MSG_ID_87_LEN	common/mavlink_msg_position_target_global_int.h	25;"	d
MAVLINK_MSG_ID_87_MIN_LEN	common/mavlink_msg_position_target_global_int.h	26;"	d
MAVLINK_MSG_ID_89_CRC	common/mavlink_msg_local_position_ned_system_global_offset.h	22;"	d
MAVLINK_MSG_ID_89_LEN	common/mavlink_msg_local_position_ned_system_global_offset.h	18;"	d
MAVLINK_MSG_ID_89_MIN_LEN	common/mavlink_msg_local_position_ned_system_global_offset.h	19;"	d
MAVLINK_MSG_ID_90_CRC	common/mavlink_msg_hil_state.h	31;"	d
MAVLINK_MSG_ID_90_LEN	common/mavlink_msg_hil_state.h	27;"	d
MAVLINK_MSG_ID_90_MIN_LEN	common/mavlink_msg_hil_state.h	28;"	d
MAVLINK_MSG_ID_91_CRC	common/mavlink_msg_hil_controls.h	26;"	d
MAVLINK_MSG_ID_91_LEN	common/mavlink_msg_hil_controls.h	22;"	d
MAVLINK_MSG_ID_91_MIN_LEN	common/mavlink_msg_hil_controls.h	23;"	d
MAVLINK_MSG_ID_92_CRC	common/mavlink_msg_hil_rc_inputs_raw.h	29;"	d
MAVLINK_MSG_ID_92_LEN	common/mavlink_msg_hil_rc_inputs_raw.h	25;"	d
MAVLINK_MSG_ID_92_MIN_LEN	common/mavlink_msg_hil_rc_inputs_raw.h	26;"	d
MAVLINK_MSG_ID_ACTUATOR_CONTROL_TARGET	common/mavlink_msg_actuator_control_target.h	3;"	d
MAVLINK_MSG_ID_ACTUATOR_CONTROL_TARGET_CRC	common/mavlink_msg_actuator_control_target.h	17;"	d
MAVLINK_MSG_ID_ACTUATOR_CONTROL_TARGET_LEN	common/mavlink_msg_actuator_control_target.h	12;"	d
MAVLINK_MSG_ID_ACTUATOR_CONTROL_TARGET_MIN_LEN	common/mavlink_msg_actuator_control_target.h	13;"	d
MAVLINK_MSG_ID_ADSB_VEHICLE	common/mavlink_msg_adsb_vehicle.h	3;"	d
MAVLINK_MSG_ID_ADSB_VEHICLE_CRC	common/mavlink_msg_adsb_vehicle.h	27;"	d
MAVLINK_MSG_ID_ADSB_VEHICLE_LEN	common/mavlink_msg_adsb_vehicle.h	22;"	d
MAVLINK_MSG_ID_ADSB_VEHICLE_MIN_LEN	common/mavlink_msg_adsb_vehicle.h	23;"	d
MAVLINK_MSG_ID_ALTITUDE	common/mavlink_msg_altitude.h	3;"	d
MAVLINK_MSG_ID_ALTITUDE_CRC	common/mavlink_msg_altitude.h	21;"	d
MAVLINK_MSG_ID_ALTITUDE_LEN	common/mavlink_msg_altitude.h	16;"	d
MAVLINK_MSG_ID_ALTITUDE_MIN_LEN	common/mavlink_msg_altitude.h	17;"	d
MAVLINK_MSG_ID_ATTITUDE	common/mavlink_msg_attitude.h	3;"	d
MAVLINK_MSG_ID_ATTITUDE_CRC	common/mavlink_msg_attitude.h	21;"	d
MAVLINK_MSG_ID_ATTITUDE_LEN	common/mavlink_msg_attitude.h	16;"	d
MAVLINK_MSG_ID_ATTITUDE_MIN_LEN	common/mavlink_msg_attitude.h	17;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION	common/mavlink_msg_attitude_quaternion.h	3;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_COV	common/mavlink_msg_attitude_quaternion_cov.h	3;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_COV_CRC	common/mavlink_msg_attitude_quaternion_cov.h	20;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_COV_LEN	common/mavlink_msg_attitude_quaternion_cov.h	15;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_COV_MIN_LEN	common/mavlink_msg_attitude_quaternion_cov.h	16;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_CRC	common/mavlink_msg_attitude_quaternion.h	22;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_LEN	common/mavlink_msg_attitude_quaternion.h	17;"	d
MAVLINK_MSG_ID_ATTITUDE_QUATERNION_MIN_LEN	common/mavlink_msg_attitude_quaternion.h	18;"	d
MAVLINK_MSG_ID_ATTITUDE_TARGET	common/mavlink_msg_attitude_target.h	3;"	d
MAVLINK_MSG_ID_ATTITUDE_TARGET_CRC	common/mavlink_msg_attitude_target.h	21;"	d
MAVLINK_MSG_ID_ATTITUDE_TARGET_LEN	common/mavlink_msg_attitude_target.h	16;"	d
MAVLINK_MSG_ID_ATTITUDE_TARGET_MIN_LEN	common/mavlink_msg_attitude_target.h	17;"	d
MAVLINK_MSG_ID_ATT_POS_MOCAP	common/mavlink_msg_att_pos_mocap.h	3;"	d
MAVLINK_MSG_ID_ATT_POS_MOCAP_CRC	common/mavlink_msg_att_pos_mocap.h	19;"	d
MAVLINK_MSG_ID_ATT_POS_MOCAP_LEN	common/mavlink_msg_att_pos_mocap.h	14;"	d
MAVLINK_MSG_ID_ATT_POS_MOCAP_MIN_LEN	common/mavlink_msg_att_pos_mocap.h	15;"	d
MAVLINK_MSG_ID_AUTH_KEY	common/mavlink_msg_auth_key.h	3;"	d
MAVLINK_MSG_ID_AUTH_KEY_CRC	common/mavlink_msg_auth_key.h	15;"	d
MAVLINK_MSG_ID_AUTH_KEY_LEN	common/mavlink_msg_auth_key.h	10;"	d
MAVLINK_MSG_ID_AUTH_KEY_MIN_LEN	common/mavlink_msg_auth_key.h	11;"	d
MAVLINK_MSG_ID_AUTOPILOT_VERSION	common/mavlink_msg_autopilot_version.h	3;"	d
MAVLINK_MSG_ID_AUTOPILOT_VERSION_CRC	common/mavlink_msg_autopilot_version.h	25;"	d
MAVLINK_MSG_ID_AUTOPILOT_VERSION_LEN	common/mavlink_msg_autopilot_version.h	20;"	d
MAVLINK_MSG_ID_AUTOPILOT_VERSION_MIN_LEN	common/mavlink_msg_autopilot_version.h	21;"	d
MAVLINK_MSG_ID_BATTERY_STATUS	common/mavlink_msg_battery_status.h	3;"	d
MAVLINK_MSG_ID_BATTERY_STATUS_CRC	common/mavlink_msg_battery_status.h	23;"	d
MAVLINK_MSG_ID_BATTERY_STATUS_LEN	common/mavlink_msg_battery_status.h	18;"	d
MAVLINK_MSG_ID_BATTERY_STATUS_MIN_LEN	common/mavlink_msg_battery_status.h	19;"	d
MAVLINK_MSG_ID_CAMERA_TRIGGER	common/mavlink_msg_camera_trigger.h	3;"	d
MAVLINK_MSG_ID_CAMERA_TRIGGER_CRC	common/mavlink_msg_camera_trigger.h	16;"	d
MAVLINK_MSG_ID_CAMERA_TRIGGER_LEN	common/mavlink_msg_camera_trigger.h	11;"	d
MAVLINK_MSG_ID_CAMERA_TRIGGER_MIN_LEN	common/mavlink_msg_camera_trigger.h	12;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL	common/mavlink_msg_change_operator_control.h	3;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK	common/mavlink_msg_change_operator_control_ack.h	3;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK_CRC	common/mavlink_msg_change_operator_control_ack.h	17;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK_LEN	common/mavlink_msg_change_operator_control_ack.h	12;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_ACK_MIN_LEN	common/mavlink_msg_change_operator_control_ack.h	13;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_CRC	common/mavlink_msg_change_operator_control.h	18;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_LEN	common/mavlink_msg_change_operator_control.h	13;"	d
MAVLINK_MSG_ID_CHANGE_OPERATOR_CONTROL_MIN_LEN	common/mavlink_msg_change_operator_control.h	14;"	d
MAVLINK_MSG_ID_COMMAND_ACK	common/mavlink_msg_command_ack.h	3;"	d
MAVLINK_MSG_ID_COMMAND_ACK_CRC	common/mavlink_msg_command_ack.h	16;"	d
MAVLINK_MSG_ID_COMMAND_ACK_LEN	common/mavlink_msg_command_ack.h	11;"	d
MAVLINK_MSG_ID_COMMAND_ACK_MIN_LEN	common/mavlink_msg_command_ack.h	12;"	d
MAVLINK_MSG_ID_COMMAND_INT	common/mavlink_msg_command_int.h	3;"	d
MAVLINK_MSG_ID_COMMAND_INT_CRC	common/mavlink_msg_command_int.h	27;"	d
MAVLINK_MSG_ID_COMMAND_INT_LEN	common/mavlink_msg_command_int.h	22;"	d
MAVLINK_MSG_ID_COMMAND_INT_MIN_LEN	common/mavlink_msg_command_int.h	23;"	d
MAVLINK_MSG_ID_COMMAND_LONG	common/mavlink_msg_command_long.h	3;"	d
MAVLINK_MSG_ID_COMMAND_LONG_CRC	common/mavlink_msg_command_long.h	25;"	d
MAVLINK_MSG_ID_COMMAND_LONG_LEN	common/mavlink_msg_command_long.h	20;"	d
MAVLINK_MSG_ID_COMMAND_LONG_MIN_LEN	common/mavlink_msg_command_long.h	21;"	d
MAVLINK_MSG_ID_CONTROL_SYSTEM_STATE	common/mavlink_msg_control_system_state.h	3;"	d
MAVLINK_MSG_ID_CONTROL_SYSTEM_STATE_CRC	common/mavlink_msg_control_system_state.h	31;"	d
MAVLINK_MSG_ID_CONTROL_SYSTEM_STATE_LEN	common/mavlink_msg_control_system_state.h	26;"	d
MAVLINK_MSG_ID_CONTROL_SYSTEM_STATE_MIN_LEN	common/mavlink_msg_control_system_state.h	27;"	d
MAVLINK_MSG_ID_DATA_STREAM	common/mavlink_msg_data_stream.h	3;"	d
MAVLINK_MSG_ID_DATA_STREAM_CRC	common/mavlink_msg_data_stream.h	17;"	d
MAVLINK_MSG_ID_DATA_STREAM_LEN	common/mavlink_msg_data_stream.h	12;"	d
MAVLINK_MSG_ID_DATA_STREAM_MIN_LEN	common/mavlink_msg_data_stream.h	13;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE	common/mavlink_msg_data_transmission_handshake.h	3;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE_CRC	common/mavlink_msg_data_transmission_handshake.h	21;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE_LEN	common/mavlink_msg_data_transmission_handshake.h	16;"	d
MAVLINK_MSG_ID_DATA_TRANSMISSION_HANDSHAKE_MIN_LEN	common/mavlink_msg_data_transmission_handshake.h	17;"	d
MAVLINK_MSG_ID_DEBUG	common/mavlink_msg_debug.h	3;"	d
MAVLINK_MSG_ID_DEBUG_CRC	common/mavlink_msg_debug.h	17;"	d
MAVLINK_MSG_ID_DEBUG_LEN	common/mavlink_msg_debug.h	12;"	d
MAVLINK_MSG_ID_DEBUG_MIN_LEN	common/mavlink_msg_debug.h	13;"	d
MAVLINK_MSG_ID_DEBUG_VECT	common/mavlink_msg_debug_vect.h	3;"	d
MAVLINK_MSG_ID_DEBUG_VECT_CRC	common/mavlink_msg_debug_vect.h	19;"	d
MAVLINK_MSG_ID_DEBUG_VECT_LEN	common/mavlink_msg_debug_vect.h	14;"	d
MAVLINK_MSG_ID_DEBUG_VECT_MIN_LEN	common/mavlink_msg_debug_vect.h	15;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR	common/mavlink_msg_distance_sensor.h	3;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR_CRC	common/mavlink_msg_distance_sensor.h	22;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR_LEN	common/mavlink_msg_distance_sensor.h	17;"	d
MAVLINK_MSG_ID_DISTANCE_SENSOR_MIN_LEN	common/mavlink_msg_distance_sensor.h	18;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA	common/mavlink_msg_encapsulated_data.h	3;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA_CRC	common/mavlink_msg_encapsulated_data.h	16;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA_LEN	common/mavlink_msg_encapsulated_data.h	11;"	d
MAVLINK_MSG_ID_ENCAPSULATED_DATA_MIN_LEN	common/mavlink_msg_encapsulated_data.h	12;"	d
MAVLINK_MSG_ID_ESTIMATOR_STATUS	common/mavlink_msg_estimator_status.h	3;"	d
MAVLINK_MSG_ID_ESTIMATOR_STATUS_CRC	common/mavlink_msg_estimator_status.h	24;"	d
MAVLINK_MSG_ID_ESTIMATOR_STATUS_LEN	common/mavlink_msg_estimator_status.h	19;"	d
MAVLINK_MSG_ID_ESTIMATOR_STATUS_MIN_LEN	common/mavlink_msg_estimator_status.h	20;"	d
MAVLINK_MSG_ID_EXTENDED_SYS_STATE	common/mavlink_msg_extended_sys_state.h	3;"	d
MAVLINK_MSG_ID_EXTENDED_SYS_STATE_CRC	common/mavlink_msg_extended_sys_state.h	16;"	d
MAVLINK_MSG_ID_EXTENDED_SYS_STATE_LEN	common/mavlink_msg_extended_sys_state.h	11;"	d
MAVLINK_MSG_ID_EXTENDED_SYS_STATE_MIN_LEN	common/mavlink_msg_extended_sys_state.h	12;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL	common/mavlink_msg_file_transfer_protocol.h	3;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL_CRC	common/mavlink_msg_file_transfer_protocol.h	18;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL_LEN	common/mavlink_msg_file_transfer_protocol.h	13;"	d
MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL_MIN_LEN	common/mavlink_msg_file_transfer_protocol.h	14;"	d
MAVLINK_MSG_ID_FOLLOW_TARGET	common/mavlink_msg_follow_target.h	3;"	d
MAVLINK_MSG_ID_FOLLOW_TARGET_CRC	common/mavlink_msg_follow_target.h	25;"	d
MAVLINK_MSG_ID_FOLLOW_TARGET_LEN	common/mavlink_msg_follow_target.h	20;"	d
MAVLINK_MSG_ID_FOLLOW_TARGET_MIN_LEN	common/mavlink_msg_follow_target.h	21;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT	common/mavlink_msg_global_position_int.h	3;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_COV	common/mavlink_msg_global_position_int_cov.h	3;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_COV_CRC	common/mavlink_msg_global_position_int_cov.h	25;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_COV_LEN	common/mavlink_msg_global_position_int_cov.h	20;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_COV_MIN_LEN	common/mavlink_msg_global_position_int_cov.h	21;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_CRC	common/mavlink_msg_global_position_int.h	23;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_LEN	common/mavlink_msg_global_position_int.h	18;"	d
MAVLINK_MSG_ID_GLOBAL_POSITION_INT_MIN_LEN	common/mavlink_msg_global_position_int.h	19;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE	common/mavlink_msg_global_vision_position_estimate.h	3;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE_CRC	common/mavlink_msg_global_vision_position_estimate.h	21;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE_LEN	common/mavlink_msg_global_vision_position_estimate.h	16;"	d
MAVLINK_MSG_ID_GLOBAL_VISION_POSITION_ESTIMATE_MIN_LEN	common/mavlink_msg_global_vision_position_estimate.h	17;"	d
MAVLINK_MSG_ID_GPS2_RAW	common/mavlink_msg_gps2_raw.h	3;"	d
MAVLINK_MSG_ID_GPS2_RAW_CRC	common/mavlink_msg_gps2_raw.h	26;"	d
MAVLINK_MSG_ID_GPS2_RAW_LEN	common/mavlink_msg_gps2_raw.h	21;"	d
MAVLINK_MSG_ID_GPS2_RAW_MIN_LEN	common/mavlink_msg_gps2_raw.h	22;"	d
MAVLINK_MSG_ID_GPS2_RTK	common/mavlink_msg_gps2_rtk.h	3;"	d
MAVLINK_MSG_ID_GPS2_RTK_CRC	common/mavlink_msg_gps2_rtk.h	27;"	d
MAVLINK_MSG_ID_GPS2_RTK_LEN	common/mavlink_msg_gps2_rtk.h	22;"	d
MAVLINK_MSG_ID_GPS2_RTK_MIN_LEN	common/mavlink_msg_gps2_rtk.h	23;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN	common/mavlink_msg_gps_global_origin.h	3;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN_CRC	common/mavlink_msg_gps_global_origin.h	17;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN_LEN	common/mavlink_msg_gps_global_origin.h	12;"	d
MAVLINK_MSG_ID_GPS_GLOBAL_ORIGIN_MIN_LEN	common/mavlink_msg_gps_global_origin.h	13;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA	common/mavlink_msg_gps_inject_data.h	3;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA_CRC	common/mavlink_msg_gps_inject_data.h	18;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA_LEN	common/mavlink_msg_gps_inject_data.h	13;"	d
MAVLINK_MSG_ID_GPS_INJECT_DATA_MIN_LEN	common/mavlink_msg_gps_inject_data.h	14;"	d
MAVLINK_MSG_ID_GPS_INPUT	common/mavlink_msg_gps_input.h	3;"	d
MAVLINK_MSG_ID_GPS_INPUT_CRC	common/mavlink_msg_gps_input.h	32;"	d
MAVLINK_MSG_ID_GPS_INPUT_LEN	common/mavlink_msg_gps_input.h	27;"	d
MAVLINK_MSG_ID_GPS_INPUT_MIN_LEN	common/mavlink_msg_gps_input.h	28;"	d
MAVLINK_MSG_ID_GPS_RAW_INT	common/mavlink_msg_gps_raw_int.h	3;"	d
MAVLINK_MSG_ID_GPS_RAW_INT_CRC	common/mavlink_msg_gps_raw_int.h	24;"	d
MAVLINK_MSG_ID_GPS_RAW_INT_LEN	common/mavlink_msg_gps_raw_int.h	19;"	d
MAVLINK_MSG_ID_GPS_RAW_INT_MIN_LEN	common/mavlink_msg_gps_raw_int.h	20;"	d
MAVLINK_MSG_ID_GPS_RTCM_DATA	common/mavlink_msg_gps_rtcm_data.h	3;"	d
MAVLINK_MSG_ID_GPS_RTCM_DATA_CRC	common/mavlink_msg_gps_rtcm_data.h	17;"	d
MAVLINK_MSG_ID_GPS_RTCM_DATA_LEN	common/mavlink_msg_gps_rtcm_data.h	12;"	d
MAVLINK_MSG_ID_GPS_RTCM_DATA_MIN_LEN	common/mavlink_msg_gps_rtcm_data.h	13;"	d
MAVLINK_MSG_ID_GPS_RTK	common/mavlink_msg_gps_rtk.h	3;"	d
MAVLINK_MSG_ID_GPS_RTK_CRC	common/mavlink_msg_gps_rtk.h	27;"	d
MAVLINK_MSG_ID_GPS_RTK_LEN	common/mavlink_msg_gps_rtk.h	22;"	d
MAVLINK_MSG_ID_GPS_RTK_MIN_LEN	common/mavlink_msg_gps_rtk.h	23;"	d
MAVLINK_MSG_ID_GPS_STATUS	common/mavlink_msg_gps_status.h	3;"	d
MAVLINK_MSG_ID_GPS_STATUS_CRC	common/mavlink_msg_gps_status.h	20;"	d
MAVLINK_MSG_ID_GPS_STATUS_LEN	common/mavlink_msg_gps_status.h	15;"	d
MAVLINK_MSG_ID_GPS_STATUS_MIN_LEN	common/mavlink_msg_gps_status.h	16;"	d
MAVLINK_MSG_ID_HEARTBEAT	common/mavlink_msg_heartbeat.h	3;"	d
MAVLINK_MSG_ID_HEARTBEAT_CRC	common/mavlink_msg_heartbeat.h	20;"	d
MAVLINK_MSG_ID_HEARTBEAT_LEN	common/mavlink_msg_heartbeat.h	15;"	d
MAVLINK_MSG_ID_HEARTBEAT_MIN_LEN	common/mavlink_msg_heartbeat.h	16;"	d
MAVLINK_MSG_ID_HIGHRES_IMU	common/mavlink_msg_highres_imu.h	3;"	d
MAVLINK_MSG_ID_HIGHRES_IMU_CRC	common/mavlink_msg_highres_imu.h	29;"	d
MAVLINK_MSG_ID_HIGHRES_IMU_LEN	common/mavlink_msg_highres_imu.h	24;"	d
MAVLINK_MSG_ID_HIGHRES_IMU_MIN_LEN	common/mavlink_msg_highres_imu.h	25;"	d
MAVLINK_MSG_ID_HIL_CONTROLS	common/mavlink_msg_hil_controls.h	3;"	d
MAVLINK_MSG_ID_HIL_CONTROLS_CRC	common/mavlink_msg_hil_controls.h	25;"	d
MAVLINK_MSG_ID_HIL_CONTROLS_LEN	common/mavlink_msg_hil_controls.h	20;"	d
MAVLINK_MSG_ID_HIL_CONTROLS_MIN_LEN	common/mavlink_msg_hil_controls.h	21;"	d
MAVLINK_MSG_ID_HIL_GPS	common/mavlink_msg_hil_gps.h	3;"	d
MAVLINK_MSG_ID_HIL_GPS_CRC	common/mavlink_msg_hil_gps.h	27;"	d
MAVLINK_MSG_ID_HIL_GPS_LEN	common/mavlink_msg_hil_gps.h	22;"	d
MAVLINK_MSG_ID_HIL_GPS_MIN_LEN	common/mavlink_msg_hil_gps.h	23;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW	common/mavlink_msg_hil_optical_flow.h	3;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW_CRC	common/mavlink_msg_hil_optical_flow.h	26;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW_LEN	common/mavlink_msg_hil_optical_flow.h	21;"	d
MAVLINK_MSG_ID_HIL_OPTICAL_FLOW_MIN_LEN	common/mavlink_msg_hil_optical_flow.h	22;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW	common/mavlink_msg_hil_rc_inputs_raw.h	3;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW_CRC	common/mavlink_msg_hil_rc_inputs_raw.h	28;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW_LEN	common/mavlink_msg_hil_rc_inputs_raw.h	23;"	d
MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW_MIN_LEN	common/mavlink_msg_hil_rc_inputs_raw.h	24;"	d
MAVLINK_MSG_ID_HIL_SENSOR	common/mavlink_msg_hil_sensor.h	3;"	d
MAVLINK_MSG_ID_HIL_SENSOR_CRC	common/mavlink_msg_hil_sensor.h	29;"	d
MAVLINK_MSG_ID_HIL_SENSOR_LEN	common/mavlink_msg_hil_sensor.h	24;"	d
MAVLINK_MSG_ID_HIL_SENSOR_MIN_LEN	common/mavlink_msg_hil_sensor.h	25;"	d
MAVLINK_MSG_ID_HIL_STATE	common/mavlink_msg_hil_state.h	3;"	d
MAVLINK_MSG_ID_HIL_STATE_CRC	common/mavlink_msg_hil_state.h	30;"	d
MAVLINK_MSG_ID_HIL_STATE_LEN	common/mavlink_msg_hil_state.h	25;"	d
MAVLINK_MSG_ID_HIL_STATE_MIN_LEN	common/mavlink_msg_hil_state.h	26;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION	common/mavlink_msg_hil_state_quaternion.h	3;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION_CRC	common/mavlink_msg_hil_state_quaternion.h	30;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION_LEN	common/mavlink_msg_hil_state_quaternion.h	25;"	d
MAVLINK_MSG_ID_HIL_STATE_QUATERNION_MIN_LEN	common/mavlink_msg_hil_state_quaternion.h	26;"	d
MAVLINK_MSG_ID_HOME_POSITION	common/mavlink_msg_home_position.h	3;"	d
MAVLINK_MSG_ID_HOME_POSITION_CRC	common/mavlink_msg_home_position.h	24;"	d
MAVLINK_MSG_ID_HOME_POSITION_LEN	common/mavlink_msg_home_position.h	19;"	d
MAVLINK_MSG_ID_HOME_POSITION_MIN_LEN	common/mavlink_msg_home_position.h	20;"	d
MAVLINK_MSG_ID_LANDING_TARGET	common/mavlink_msg_landing_target.h	3;"	d
MAVLINK_MSG_ID_LANDING_TARGET_CRC	common/mavlink_msg_landing_target.h	22;"	d
MAVLINK_MSG_ID_LANDING_TARGET_LEN	common/mavlink_msg_landing_target.h	17;"	d
MAVLINK_MSG_ID_LANDING_TARGET_MIN_LEN	common/mavlink_msg_landing_target.h	18;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED	common/mavlink_msg_local_position_ned.h	3;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_COV	common/mavlink_msg_local_position_ned_cov.h	3;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_COV_CRC	common/mavlink_msg_local_position_ned_cov.h	27;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_COV_LEN	common/mavlink_msg_local_position_ned_cov.h	22;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_COV_MIN_LEN	common/mavlink_msg_local_position_ned_cov.h	23;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_CRC	common/mavlink_msg_local_position_ned.h	21;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_LEN	common/mavlink_msg_local_position_ned.h	16;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_MIN_LEN	common/mavlink_msg_local_position_ned.h	17;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET	common/mavlink_msg_local_position_ned_system_global_offset.h	3;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET_CRC	common/mavlink_msg_local_position_ned_system_global_offset.h	21;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET_LEN	common/mavlink_msg_local_position_ned_system_global_offset.h	16;"	d
MAVLINK_MSG_ID_LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET_MIN_LEN	common/mavlink_msg_local_position_ned_system_global_offset.h	17;"	d
MAVLINK_MSG_ID_LOG_DATA	common/mavlink_msg_log_data.h	3;"	d
MAVLINK_MSG_ID_LOG_DATA_CRC	common/mavlink_msg_log_data.h	18;"	d
MAVLINK_MSG_ID_LOG_DATA_LEN	common/mavlink_msg_log_data.h	13;"	d
MAVLINK_MSG_ID_LOG_DATA_MIN_LEN	common/mavlink_msg_log_data.h	14;"	d
MAVLINK_MSG_ID_LOG_ENTRY	common/mavlink_msg_log_entry.h	3;"	d
MAVLINK_MSG_ID_LOG_ENTRY_CRC	common/mavlink_msg_log_entry.h	19;"	d
MAVLINK_MSG_ID_LOG_ENTRY_LEN	common/mavlink_msg_log_entry.h	14;"	d
MAVLINK_MSG_ID_LOG_ENTRY_MIN_LEN	common/mavlink_msg_log_entry.h	15;"	d
MAVLINK_MSG_ID_LOG_ERASE	common/mavlink_msg_log_erase.h	3;"	d
MAVLINK_MSG_ID_LOG_ERASE_CRC	common/mavlink_msg_log_erase.h	16;"	d
MAVLINK_MSG_ID_LOG_ERASE_LEN	common/mavlink_msg_log_erase.h	11;"	d
MAVLINK_MSG_ID_LOG_ERASE_MIN_LEN	common/mavlink_msg_log_erase.h	12;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA	common/mavlink_msg_log_request_data.h	3;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA_CRC	common/mavlink_msg_log_request_data.h	19;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA_LEN	common/mavlink_msg_log_request_data.h	14;"	d
MAVLINK_MSG_ID_LOG_REQUEST_DATA_MIN_LEN	common/mavlink_msg_log_request_data.h	15;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END	common/mavlink_msg_log_request_end.h	3;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END_CRC	common/mavlink_msg_log_request_end.h	16;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END_LEN	common/mavlink_msg_log_request_end.h	11;"	d
MAVLINK_MSG_ID_LOG_REQUEST_END_MIN_LEN	common/mavlink_msg_log_request_end.h	12;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST	common/mavlink_msg_log_request_list.h	3;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST_CRC	common/mavlink_msg_log_request_list.h	18;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST_LEN	common/mavlink_msg_log_request_list.h	13;"	d
MAVLINK_MSG_ID_LOG_REQUEST_LIST_MIN_LEN	common/mavlink_msg_log_request_list.h	14;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL	common/mavlink_msg_manual_control.h	3;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL_CRC	common/mavlink_msg_manual_control.h	20;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL_LEN	common/mavlink_msg_manual_control.h	15;"	d
MAVLINK_MSG_ID_MANUAL_CONTROL_MIN_LEN	common/mavlink_msg_manual_control.h	16;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT	common/mavlink_msg_manual_setpoint.h	3;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT_CRC	common/mavlink_msg_manual_setpoint.h	21;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT_LEN	common/mavlink_msg_manual_setpoint.h	16;"	d
MAVLINK_MSG_ID_MANUAL_SETPOINT_MIN_LEN	common/mavlink_msg_manual_setpoint.h	17;"	d
MAVLINK_MSG_ID_MEMORY_VECT	common/mavlink_msg_memory_vect.h	3;"	d
MAVLINK_MSG_ID_MEMORY_VECT_CRC	common/mavlink_msg_memory_vect.h	18;"	d
MAVLINK_MSG_ID_MEMORY_VECT_LEN	common/mavlink_msg_memory_vect.h	13;"	d
MAVLINK_MSG_ID_MEMORY_VECT_MIN_LEN	common/mavlink_msg_memory_vect.h	14;"	d
MAVLINK_MSG_ID_MESSAGE_INTERVAL	common/mavlink_msg_message_interval.h	3;"	d
MAVLINK_MSG_ID_MESSAGE_INTERVAL_CRC	common/mavlink_msg_message_interval.h	16;"	d
MAVLINK_MSG_ID_MESSAGE_INTERVAL_LEN	common/mavlink_msg_message_interval.h	11;"	d
MAVLINK_MSG_ID_MESSAGE_INTERVAL_MIN_LEN	common/mavlink_msg_message_interval.h	12;"	d
MAVLINK_MSG_ID_MISSION_ACK	common/mavlink_msg_mission_ack.h	3;"	d
MAVLINK_MSG_ID_MISSION_ACK_CRC	common/mavlink_msg_mission_ack.h	17;"	d
MAVLINK_MSG_ID_MISSION_ACK_LEN	common/mavlink_msg_mission_ack.h	12;"	d
MAVLINK_MSG_ID_MISSION_ACK_MIN_LEN	common/mavlink_msg_mission_ack.h	13;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL	common/mavlink_msg_mission_clear_all.h	3;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL_CRC	common/mavlink_msg_mission_clear_all.h	16;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL_LEN	common/mavlink_msg_mission_clear_all.h	11;"	d
MAVLINK_MSG_ID_MISSION_CLEAR_ALL_MIN_LEN	common/mavlink_msg_mission_clear_all.h	12;"	d
MAVLINK_MSG_ID_MISSION_COUNT	common/mavlink_msg_mission_count.h	3;"	d
MAVLINK_MSG_ID_MISSION_COUNT_CRC	common/mavlink_msg_mission_count.h	17;"	d
MAVLINK_MSG_ID_MISSION_COUNT_LEN	common/mavlink_msg_mission_count.h	12;"	d
MAVLINK_MSG_ID_MISSION_COUNT_MIN_LEN	common/mavlink_msg_mission_count.h	13;"	d
MAVLINK_MSG_ID_MISSION_CURRENT	common/mavlink_msg_mission_current.h	3;"	d
MAVLINK_MSG_ID_MISSION_CURRENT_CRC	common/mavlink_msg_mission_current.h	15;"	d
MAVLINK_MSG_ID_MISSION_CURRENT_LEN	common/mavlink_msg_mission_current.h	10;"	d
MAVLINK_MSG_ID_MISSION_CURRENT_MIN_LEN	common/mavlink_msg_mission_current.h	11;"	d
MAVLINK_MSG_ID_MISSION_ITEM	common/mavlink_msg_mission_item.h	3;"	d
MAVLINK_MSG_ID_MISSION_ITEM_CRC	common/mavlink_msg_mission_item.h	28;"	d
MAVLINK_MSG_ID_MISSION_ITEM_INT	common/mavlink_msg_mission_item_int.h	3;"	d
MAVLINK_MSG_ID_MISSION_ITEM_INT_CRC	common/mavlink_msg_mission_item_int.h	28;"	d
MAVLINK_MSG_ID_MISSION_ITEM_INT_LEN	common/mavlink_msg_mission_item_int.h	23;"	d
MAVLINK_MSG_ID_MISSION_ITEM_INT_MIN_LEN	common/mavlink_msg_mission_item_int.h	24;"	d
MAVLINK_MSG_ID_MISSION_ITEM_LEN	common/mavlink_msg_mission_item.h	23;"	d
MAVLINK_MSG_ID_MISSION_ITEM_MIN_LEN	common/mavlink_msg_mission_item.h	24;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED	common/mavlink_msg_mission_item_reached.h	3;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED_CRC	common/mavlink_msg_mission_item_reached.h	15;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED_LEN	common/mavlink_msg_mission_item_reached.h	10;"	d
MAVLINK_MSG_ID_MISSION_ITEM_REACHED_MIN_LEN	common/mavlink_msg_mission_item_reached.h	11;"	d
MAVLINK_MSG_ID_MISSION_REQUEST	common/mavlink_msg_mission_request.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_CRC	common/mavlink_msg_mission_request.h	17;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_INT	common/mavlink_msg_mission_request_int.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_INT_CRC	common/mavlink_msg_mission_request_int.h	17;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_INT_LEN	common/mavlink_msg_mission_request_int.h	12;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_INT_MIN_LEN	common/mavlink_msg_mission_request_int.h	13;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LEN	common/mavlink_msg_mission_request.h	12;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST	common/mavlink_msg_mission_request_list.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST_CRC	common/mavlink_msg_mission_request_list.h	16;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST_LEN	common/mavlink_msg_mission_request_list.h	11;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_LIST_MIN_LEN	common/mavlink_msg_mission_request_list.h	12;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_MIN_LEN	common/mavlink_msg_mission_request.h	13;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST	common/mavlink_msg_mission_request_partial_list.h	3;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST_CRC	common/mavlink_msg_mission_request_partial_list.h	18;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST_LEN	common/mavlink_msg_mission_request_partial_list.h	13;"	d
MAVLINK_MSG_ID_MISSION_REQUEST_PARTIAL_LIST_MIN_LEN	common/mavlink_msg_mission_request_partial_list.h	14;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT	common/mavlink_msg_mission_set_current.h	3;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT_CRC	common/mavlink_msg_mission_set_current.h	17;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT_LEN	common/mavlink_msg_mission_set_current.h	12;"	d
MAVLINK_MSG_ID_MISSION_SET_CURRENT_MIN_LEN	common/mavlink_msg_mission_set_current.h	13;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST	common/mavlink_msg_mission_write_partial_list.h	3;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST_CRC	common/mavlink_msg_mission_write_partial_list.h	18;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST_LEN	common/mavlink_msg_mission_write_partial_list.h	13;"	d
MAVLINK_MSG_ID_MISSION_WRITE_PARTIAL_LIST_MIN_LEN	common/mavlink_msg_mission_write_partial_list.h	14;"	d
MAVLINK_MSG_ID_MOUNT_GIMBAL_CONTROL	ntian/mavlink_msg_mount_gimbal_control.h	3;"	d
MAVLINK_MSG_ID_MOUNT_GIMBAL_CONTROL_CRC	ntian/mavlink_msg_mount_gimbal_control.h	20;"	d
MAVLINK_MSG_ID_MOUNT_GIMBAL_CONTROL_LEN	ntian/mavlink_msg_mount_gimbal_control.h	15;"	d
MAVLINK_MSG_ID_MOUNT_GIMBAL_CONTROL_MIN_LEN	ntian/mavlink_msg_mount_gimbal_control.h	16;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT	common/mavlink_msg_named_value_float.h	3;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT_CRC	common/mavlink_msg_named_value_float.h	17;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT_LEN	common/mavlink_msg_named_value_float.h	12;"	d
MAVLINK_MSG_ID_NAMED_VALUE_FLOAT_MIN_LEN	common/mavlink_msg_named_value_float.h	13;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT	common/mavlink_msg_named_value_int.h	3;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT_CRC	common/mavlink_msg_named_value_int.h	17;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT_LEN	common/mavlink_msg_named_value_int.h	12;"	d
MAVLINK_MSG_ID_NAMED_VALUE_INT_MIN_LEN	common/mavlink_msg_named_value_int.h	13;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT	common/mavlink_msg_nav_controller_output.h	3;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT_CRC	common/mavlink_msg_nav_controller_output.h	22;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT_LEN	common/mavlink_msg_nav_controller_output.h	17;"	d
MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT_MIN_LEN	common/mavlink_msg_nav_controller_output.h	18;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW	common/mavlink_msg_optical_flow.h	3;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_CRC	common/mavlink_msg_optical_flow.h	22;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_LEN	common/mavlink_msg_optical_flow.h	17;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_MIN_LEN	common/mavlink_msg_optical_flow.h	18;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_RAD	common/mavlink_msg_optical_flow_rad.h	3;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_RAD_CRC	common/mavlink_msg_optical_flow_rad.h	26;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_RAD_LEN	common/mavlink_msg_optical_flow_rad.h	21;"	d
MAVLINK_MSG_ID_OPTICAL_FLOW_RAD_MIN_LEN	common/mavlink_msg_optical_flow_rad.h	22;"	d
MAVLINK_MSG_ID_PARAM_MAP_RC	common/mavlink_msg_param_map_rc.h	3;"	d
MAVLINK_MSG_ID_PARAM_MAP_RC_CRC	common/mavlink_msg_param_map_rc.h	23;"	d
MAVLINK_MSG_ID_PARAM_MAP_RC_LEN	common/mavlink_msg_param_map_rc.h	18;"	d
MAVLINK_MSG_ID_PARAM_MAP_RC_MIN_LEN	common/mavlink_msg_param_map_rc.h	19;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST	common/mavlink_msg_param_request_list.h	3;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST_CRC	common/mavlink_msg_param_request_list.h	16;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST_LEN	common/mavlink_msg_param_request_list.h	11;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_LIST_MIN_LEN	common/mavlink_msg_param_request_list.h	12;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ	common/mavlink_msg_param_request_read.h	3;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ_CRC	common/mavlink_msg_param_request_read.h	18;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ_LEN	common/mavlink_msg_param_request_read.h	13;"	d
MAVLINK_MSG_ID_PARAM_REQUEST_READ_MIN_LEN	common/mavlink_msg_param_request_read.h	14;"	d
MAVLINK_MSG_ID_PARAM_SET	common/mavlink_msg_param_set.h	3;"	d
MAVLINK_MSG_ID_PARAM_SET_CRC	common/mavlink_msg_param_set.h	19;"	d
MAVLINK_MSG_ID_PARAM_SET_LEN	common/mavlink_msg_param_set.h	14;"	d
MAVLINK_MSG_ID_PARAM_SET_MIN_LEN	common/mavlink_msg_param_set.h	15;"	d
MAVLINK_MSG_ID_PARAM_VALUE	common/mavlink_msg_param_value.h	3;"	d
MAVLINK_MSG_ID_PARAM_VALUE_CRC	common/mavlink_msg_param_value.h	19;"	d
MAVLINK_MSG_ID_PARAM_VALUE_LEN	common/mavlink_msg_param_value.h	14;"	d
MAVLINK_MSG_ID_PARAM_VALUE_MIN_LEN	common/mavlink_msg_param_value.h	15;"	d
MAVLINK_MSG_ID_PING	common/mavlink_msg_ping.h	3;"	d
MAVLINK_MSG_ID_PING_CRC	common/mavlink_msg_ping.h	18;"	d
MAVLINK_MSG_ID_PING_LEN	common/mavlink_msg_ping.h	13;"	d
MAVLINK_MSG_ID_PING_MIN_LEN	common/mavlink_msg_ping.h	14;"	d
MAVLINK_MSG_ID_POSITION_TARGET_GLOBAL_INT	common/mavlink_msg_position_target_global_int.h	3;"	d
MAVLINK_MSG_ID_POSITION_TARGET_GLOBAL_INT_CRC	common/mavlink_msg_position_target_global_int.h	28;"	d
MAVLINK_MSG_ID_POSITION_TARGET_GLOBAL_INT_LEN	common/mavlink_msg_position_target_global_int.h	23;"	d
MAVLINK_MSG_ID_POSITION_TARGET_GLOBAL_INT_MIN_LEN	common/mavlink_msg_position_target_global_int.h	24;"	d
MAVLINK_MSG_ID_POSITION_TARGET_LOCAL_NED	common/mavlink_msg_position_target_local_ned.h	3;"	d
MAVLINK_MSG_ID_POSITION_TARGET_LOCAL_NED_CRC	common/mavlink_msg_position_target_local_ned.h	28;"	d
MAVLINK_MSG_ID_POSITION_TARGET_LOCAL_NED_LEN	common/mavlink_msg_position_target_local_ned.h	23;"	d
MAVLINK_MSG_ID_POSITION_TARGET_LOCAL_NED_MIN_LEN	common/mavlink_msg_position_target_local_ned.h	24;"	d
MAVLINK_MSG_ID_POWER_STATUS	common/mavlink_msg_power_status.h	3;"	d
MAVLINK_MSG_ID_POWER_STATUS_CRC	common/mavlink_msg_power_status.h	17;"	d
MAVLINK_MSG_ID_POWER_STATUS_LEN	common/mavlink_msg_power_status.h	12;"	d
MAVLINK_MSG_ID_POWER_STATUS_MIN_LEN	common/mavlink_msg_power_status.h	13;"	d
MAVLINK_MSG_ID_RADIO_STATUS	common/mavlink_msg_radio_status.h	3;"	d
MAVLINK_MSG_ID_RADIO_STATUS_CRC	common/mavlink_msg_radio_status.h	21;"	d
MAVLINK_MSG_ID_RADIO_STATUS_LEN	common/mavlink_msg_radio_status.h	16;"	d
MAVLINK_MSG_ID_RADIO_STATUS_MIN_LEN	common/mavlink_msg_radio_status.h	17;"	d
MAVLINK_MSG_ID_RAW_IMU	common/mavlink_msg_raw_imu.h	3;"	d
MAVLINK_MSG_ID_RAW_IMU_CRC	common/mavlink_msg_raw_imu.h	24;"	d
MAVLINK_MSG_ID_RAW_IMU_LEN	common/mavlink_msg_raw_imu.h	19;"	d
MAVLINK_MSG_ID_RAW_IMU_MIN_LEN	common/mavlink_msg_raw_imu.h	20;"	d
MAVLINK_MSG_ID_RAW_PRESSURE	common/mavlink_msg_raw_pressure.h	3;"	d
MAVLINK_MSG_ID_RAW_PRESSURE_CRC	common/mavlink_msg_raw_pressure.h	19;"	d
MAVLINK_MSG_ID_RAW_PRESSURE_LEN	common/mavlink_msg_raw_pressure.h	14;"	d
MAVLINK_MSG_ID_RAW_PRESSURE_MIN_LEN	common/mavlink_msg_raw_pressure.h	15;"	d
MAVLINK_MSG_ID_RC_CHANNELS	common/mavlink_msg_rc_channels.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_CRC	common/mavlink_msg_rc_channels.h	35;"	d
MAVLINK_MSG_ID_RC_CHANNELS_LEN	common/mavlink_msg_rc_channels.h	30;"	d
MAVLINK_MSG_ID_RC_CHANNELS_MIN_LEN	common/mavlink_msg_rc_channels.h	31;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE	common/mavlink_msg_rc_channels_override.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE_CRC	common/mavlink_msg_rc_channels_override.h	24;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE_LEN	common/mavlink_msg_rc_channels_override.h	19;"	d
MAVLINK_MSG_ID_RC_CHANNELS_OVERRIDE_MIN_LEN	common/mavlink_msg_rc_channels_override.h	20;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW	common/mavlink_msg_rc_channels_raw.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW_CRC	common/mavlink_msg_rc_channels_raw.h	25;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW_LEN	common/mavlink_msg_rc_channels_raw.h	20;"	d
MAVLINK_MSG_ID_RC_CHANNELS_RAW_MIN_LEN	common/mavlink_msg_rc_channels_raw.h	21;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED	common/mavlink_msg_rc_channels_scaled.h	3;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED_CRC	common/mavlink_msg_rc_channels_scaled.h	25;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED_LEN	common/mavlink_msg_rc_channels_scaled.h	20;"	d
MAVLINK_MSG_ID_RC_CHANNELS_SCALED_MIN_LEN	common/mavlink_msg_rc_channels_scaled.h	21;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM	common/mavlink_msg_request_data_stream.h	3;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM_CRC	common/mavlink_msg_request_data_stream.h	19;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM_LEN	common/mavlink_msg_request_data_stream.h	14;"	d
MAVLINK_MSG_ID_REQUEST_DATA_STREAM_MIN_LEN	common/mavlink_msg_request_data_stream.h	15;"	d
MAVLINK_MSG_ID_RESOURCE_REQUEST	common/mavlink_msg_resource_request.h	3;"	d
MAVLINK_MSG_ID_RESOURCE_REQUEST_CRC	common/mavlink_msg_resource_request.h	19;"	d
MAVLINK_MSG_ID_RESOURCE_REQUEST_LEN	common/mavlink_msg_resource_request.h	14;"	d
MAVLINK_MSG_ID_RESOURCE_REQUEST_MIN_LEN	common/mavlink_msg_resource_request.h	15;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA	common/mavlink_msg_safety_allowed_area.h	3;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA_CRC	common/mavlink_msg_safety_allowed_area.h	21;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA_LEN	common/mavlink_msg_safety_allowed_area.h	16;"	d
MAVLINK_MSG_ID_SAFETY_ALLOWED_AREA_MIN_LEN	common/mavlink_msg_safety_allowed_area.h	17;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA	common/mavlink_msg_safety_set_allowed_area.h	3;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA_CRC	common/mavlink_msg_safety_set_allowed_area.h	23;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA_LEN	common/mavlink_msg_safety_set_allowed_area.h	18;"	d
MAVLINK_MSG_ID_SAFETY_SET_ALLOWED_AREA_MIN_LEN	common/mavlink_msg_safety_set_allowed_area.h	19;"	d
MAVLINK_MSG_ID_SCALED_IMU	common/mavlink_msg_scaled_imu.h	3;"	d
MAVLINK_MSG_ID_SCALED_IMU2	common/mavlink_msg_scaled_imu2.h	3;"	d
MAVLINK_MSG_ID_SCALED_IMU2_CRC	common/mavlink_msg_scaled_imu2.h	24;"	d
MAVLINK_MSG_ID_SCALED_IMU2_LEN	common/mavlink_msg_scaled_imu2.h	19;"	d
MAVLINK_MSG_ID_SCALED_IMU2_MIN_LEN	common/mavlink_msg_scaled_imu2.h	20;"	d
MAVLINK_MSG_ID_SCALED_IMU3	common/mavlink_msg_scaled_imu3.h	3;"	d
MAVLINK_MSG_ID_SCALED_IMU3_CRC	common/mavlink_msg_scaled_imu3.h	24;"	d
MAVLINK_MSG_ID_SCALED_IMU3_LEN	common/mavlink_msg_scaled_imu3.h	19;"	d
MAVLINK_MSG_ID_SCALED_IMU3_MIN_LEN	common/mavlink_msg_scaled_imu3.h	20;"	d
MAVLINK_MSG_ID_SCALED_IMU_CRC	common/mavlink_msg_scaled_imu.h	24;"	d
MAVLINK_MSG_ID_SCALED_IMU_LEN	common/mavlink_msg_scaled_imu.h	19;"	d
MAVLINK_MSG_ID_SCALED_IMU_MIN_LEN	common/mavlink_msg_scaled_imu.h	20;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE	common/mavlink_msg_scaled_pressure.h	3;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE2	common/mavlink_msg_scaled_pressure2.h	3;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE2_CRC	common/mavlink_msg_scaled_pressure2.h	18;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE2_LEN	common/mavlink_msg_scaled_pressure2.h	13;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE2_MIN_LEN	common/mavlink_msg_scaled_pressure2.h	14;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE3	common/mavlink_msg_scaled_pressure3.h	3;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE3_CRC	common/mavlink_msg_scaled_pressure3.h	18;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE3_LEN	common/mavlink_msg_scaled_pressure3.h	13;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE3_MIN_LEN	common/mavlink_msg_scaled_pressure3.h	14;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE_CRC	common/mavlink_msg_scaled_pressure.h	18;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE_LEN	common/mavlink_msg_scaled_pressure.h	13;"	d
MAVLINK_MSG_ID_SCALED_PRESSURE_MIN_LEN	common/mavlink_msg_scaled_pressure.h	14;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL	common/mavlink_msg_serial_control.h	3;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL_CRC	common/mavlink_msg_serial_control.h	20;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL_LEN	common/mavlink_msg_serial_control.h	15;"	d
MAVLINK_MSG_ID_SERIAL_CONTROL_MIN_LEN	common/mavlink_msg_serial_control.h	16;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW	common/mavlink_msg_servo_output_raw.h	3;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW_CRC	common/mavlink_msg_servo_output_raw.h	24;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW_LEN	common/mavlink_msg_servo_output_raw.h	19;"	d
MAVLINK_MSG_ID_SERVO_OUTPUT_RAW_MIN_LEN	common/mavlink_msg_servo_output_raw.h	20;"	d
MAVLINK_MSG_ID_SETUP_SIGNING	common/mavlink_msg_setup_signing.h	3;"	d
MAVLINK_MSG_ID_SETUP_SIGNING_CRC	common/mavlink_msg_setup_signing.h	18;"	d
MAVLINK_MSG_ID_SETUP_SIGNING_LEN	common/mavlink_msg_setup_signing.h	13;"	d
MAVLINK_MSG_ID_SETUP_SIGNING_MIN_LEN	common/mavlink_msg_setup_signing.h	14;"	d
MAVLINK_MSG_ID_SET_ACTUATOR_CONTROL_TARGET	common/mavlink_msg_set_actuator_control_target.h	3;"	d
MAVLINK_MSG_ID_SET_ACTUATOR_CONTROL_TARGET_CRC	common/mavlink_msg_set_actuator_control_target.h	19;"	d
MAVLINK_MSG_ID_SET_ACTUATOR_CONTROL_TARGET_LEN	common/mavlink_msg_set_actuator_control_target.h	14;"	d
MAVLINK_MSG_ID_SET_ACTUATOR_CONTROL_TARGET_MIN_LEN	common/mavlink_msg_set_actuator_control_target.h	15;"	d
MAVLINK_MSG_ID_SET_ATTITUDE_TARGET	common/mavlink_msg_set_attitude_target.h	3;"	d
MAVLINK_MSG_ID_SET_ATTITUDE_TARGET_CRC	common/mavlink_msg_set_attitude_target.h	23;"	d
MAVLINK_MSG_ID_SET_ATTITUDE_TARGET_LEN	common/mavlink_msg_set_attitude_target.h	18;"	d
MAVLINK_MSG_ID_SET_ATTITUDE_TARGET_MIN_LEN	common/mavlink_msg_set_attitude_target.h	19;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN	common/mavlink_msg_set_gps_global_origin.h	3;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN_CRC	common/mavlink_msg_set_gps_global_origin.h	18;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN_LEN	common/mavlink_msg_set_gps_global_origin.h	13;"	d
MAVLINK_MSG_ID_SET_GPS_GLOBAL_ORIGIN_MIN_LEN	common/mavlink_msg_set_gps_global_origin.h	14;"	d
MAVLINK_MSG_ID_SET_HOME_POSITION	common/mavlink_msg_set_home_position.h	3;"	d
MAVLINK_MSG_ID_SET_HOME_POSITION_CRC	common/mavlink_msg_set_home_position.h	25;"	d
MAVLINK_MSG_ID_SET_HOME_POSITION_LEN	common/mavlink_msg_set_home_position.h	20;"	d
MAVLINK_MSG_ID_SET_HOME_POSITION_MIN_LEN	common/mavlink_msg_set_home_position.h	21;"	d
MAVLINK_MSG_ID_SET_MODE	common/mavlink_msg_set_mode.h	3;"	d
MAVLINK_MSG_ID_SET_MODE_CRC	common/mavlink_msg_set_mode.h	17;"	d
MAVLINK_MSG_ID_SET_MODE_LEN	common/mavlink_msg_set_mode.h	12;"	d
MAVLINK_MSG_ID_SET_MODE_MIN_LEN	common/mavlink_msg_set_mode.h	13;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_GLOBAL_INT	common/mavlink_msg_set_position_target_global_int.h	3;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_GLOBAL_INT_CRC	common/mavlink_msg_set_position_target_global_int.h	30;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_GLOBAL_INT_LEN	common/mavlink_msg_set_position_target_global_int.h	25;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_GLOBAL_INT_MIN_LEN	common/mavlink_msg_set_position_target_global_int.h	26;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_LOCAL_NED	common/mavlink_msg_set_position_target_local_ned.h	3;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_LOCAL_NED_CRC	common/mavlink_msg_set_position_target_local_ned.h	30;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_LOCAL_NED_LEN	common/mavlink_msg_set_position_target_local_ned.h	25;"	d
MAVLINK_MSG_ID_SET_POSITION_TARGET_LOCAL_NED_MIN_LEN	common/mavlink_msg_set_position_target_local_ned.h	26;"	d
MAVLINK_MSG_ID_SIM_STATE	common/mavlink_msg_sim_state.h	3;"	d
MAVLINK_MSG_ID_SIM_STATE_CRC	common/mavlink_msg_sim_state.h	35;"	d
MAVLINK_MSG_ID_SIM_STATE_LEN	common/mavlink_msg_sim_state.h	30;"	d
MAVLINK_MSG_ID_SIM_STATE_MIN_LEN	common/mavlink_msg_sim_state.h	31;"	d
MAVLINK_MSG_ID_STATUSTEXT	common/mavlink_msg_statustext.h	3;"	d
MAVLINK_MSG_ID_STATUSTEXT_CRC	common/mavlink_msg_statustext.h	16;"	d
MAVLINK_MSG_ID_STATUSTEXT_LEN	common/mavlink_msg_statustext.h	11;"	d
MAVLINK_MSG_ID_STATUSTEXT_MIN_LEN	common/mavlink_msg_statustext.h	12;"	d
MAVLINK_MSG_ID_SYSTEM_TIME	common/mavlink_msg_system_time.h	3;"	d
MAVLINK_MSG_ID_SYSTEM_TIME_CRC	common/mavlink_msg_system_time.h	16;"	d
MAVLINK_MSG_ID_SYSTEM_TIME_LEN	common/mavlink_msg_system_time.h	11;"	d
MAVLINK_MSG_ID_SYSTEM_TIME_MIN_LEN	common/mavlink_msg_system_time.h	12;"	d
MAVLINK_MSG_ID_SYS_STATUS	common/mavlink_msg_sys_status.h	3;"	d
MAVLINK_MSG_ID_SYS_STATUS_CRC	common/mavlink_msg_sys_status.h	27;"	d
MAVLINK_MSG_ID_SYS_STATUS_LEN	common/mavlink_msg_sys_status.h	22;"	d
MAVLINK_MSG_ID_SYS_STATUS_MIN_LEN	common/mavlink_msg_sys_status.h	23;"	d
MAVLINK_MSG_ID_TERRAIN_CHECK	common/mavlink_msg_terrain_check.h	3;"	d
MAVLINK_MSG_ID_TERRAIN_CHECK_CRC	common/mavlink_msg_terrain_check.h	16;"	d
MAVLINK_MSG_ID_TERRAIN_CHECK_LEN	common/mavlink_msg_terrain_check.h	11;"	d
MAVLINK_MSG_ID_TERRAIN_CHECK_MIN_LEN	common/mavlink_msg_terrain_check.h	12;"	d
MAVLINK_MSG_ID_TERRAIN_DATA	common/mavlink_msg_terrain_data.h	3;"	d
MAVLINK_MSG_ID_TERRAIN_DATA_CRC	common/mavlink_msg_terrain_data.h	19;"	d
MAVLINK_MSG_ID_TERRAIN_DATA_LEN	common/mavlink_msg_terrain_data.h	14;"	d
MAVLINK_MSG_ID_TERRAIN_DATA_MIN_LEN	common/mavlink_msg_terrain_data.h	15;"	d
MAVLINK_MSG_ID_TERRAIN_REPORT	common/mavlink_msg_terrain_report.h	3;"	d
MAVLINK_MSG_ID_TERRAIN_REPORT_CRC	common/mavlink_msg_terrain_report.h	21;"	d
MAVLINK_MSG_ID_TERRAIN_REPORT_LEN	common/mavlink_msg_terrain_report.h	16;"	d
MAVLINK_MSG_ID_TERRAIN_REPORT_MIN_LEN	common/mavlink_msg_terrain_report.h	17;"	d
MAVLINK_MSG_ID_TERRAIN_REQUEST	common/mavlink_msg_terrain_request.h	3;"	d
MAVLINK_MSG_ID_TERRAIN_REQUEST_CRC	common/mavlink_msg_terrain_request.h	18;"	d
MAVLINK_MSG_ID_TERRAIN_REQUEST_LEN	common/mavlink_msg_terrain_request.h	13;"	d
MAVLINK_MSG_ID_TERRAIN_REQUEST_MIN_LEN	common/mavlink_msg_terrain_request.h	14;"	d
MAVLINK_MSG_ID_TIMESYNC	common/mavlink_msg_timesync.h	3;"	d
MAVLINK_MSG_ID_TIMESYNC_CRC	common/mavlink_msg_timesync.h	16;"	d
MAVLINK_MSG_ID_TIMESYNC_LEN	common/mavlink_msg_timesync.h	11;"	d
MAVLINK_MSG_ID_TIMESYNC_MIN_LEN	common/mavlink_msg_timesync.h	12;"	d
MAVLINK_MSG_ID_V2_EXTENSION	common/mavlink_msg_v2_extension.h	3;"	d
MAVLINK_MSG_ID_V2_EXTENSION_CRC	common/mavlink_msg_v2_extension.h	19;"	d
MAVLINK_MSG_ID_V2_EXTENSION_LEN	common/mavlink_msg_v2_extension.h	14;"	d
MAVLINK_MSG_ID_V2_EXTENSION_MIN_LEN	common/mavlink_msg_v2_extension.h	15;"	d
MAVLINK_MSG_ID_VFR_HUD	common/mavlink_msg_vfr_hud.h	3;"	d
MAVLINK_MSG_ID_VFR_HUD_CRC	common/mavlink_msg_vfr_hud.h	20;"	d
MAVLINK_MSG_ID_VFR_HUD_LEN	common/mavlink_msg_vfr_hud.h	15;"	d
MAVLINK_MSG_ID_VFR_HUD_MIN_LEN	common/mavlink_msg_vfr_hud.h	16;"	d
MAVLINK_MSG_ID_VIBRATION	common/mavlink_msg_vibration.h	3;"	d
MAVLINK_MSG_ID_VIBRATION_CRC	common/mavlink_msg_vibration.h	21;"	d
MAVLINK_MSG_ID_VIBRATION_LEN	common/mavlink_msg_vibration.h	16;"	d
MAVLINK_MSG_ID_VIBRATION_MIN_LEN	common/mavlink_msg_vibration.h	17;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE	common/mavlink_msg_vicon_position_estimate.h	3;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE_CRC	common/mavlink_msg_vicon_position_estimate.h	21;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE_LEN	common/mavlink_msg_vicon_position_estimate.h	16;"	d
MAVLINK_MSG_ID_VICON_POSITION_ESTIMATE_MIN_LEN	common/mavlink_msg_vicon_position_estimate.h	17;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE	common/mavlink_msg_vision_position_estimate.h	3;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE_CRC	common/mavlink_msg_vision_position_estimate.h	21;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE_LEN	common/mavlink_msg_vision_position_estimate.h	16;"	d
MAVLINK_MSG_ID_VISION_POSITION_ESTIMATE_MIN_LEN	common/mavlink_msg_vision_position_estimate.h	17;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE	common/mavlink_msg_vision_speed_estimate.h	3;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE_CRC	common/mavlink_msg_vision_speed_estimate.h	18;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE_LEN	common/mavlink_msg_vision_speed_estimate.h	13;"	d
MAVLINK_MSG_ID_VISION_SPEED_ESTIMATE_MIN_LEN	common/mavlink_msg_vision_speed_estimate.h	14;"	d
MAVLINK_MSG_ID_WIND_COV	common/mavlink_msg_wind_cov.h	3;"	d
MAVLINK_MSG_ID_WIND_COV_CRC	common/mavlink_msg_wind_cov.h	23;"	d
MAVLINK_MSG_ID_WIND_COV_LEN	common/mavlink_msg_wind_cov.h	18;"	d
MAVLINK_MSG_ID_WIND_COV_MIN_LEN	common/mavlink_msg_wind_cov.h	19;"	d
MAVLINK_MSG_LOCAL_POSITION_NED_COV_FIELD_COVARIANCE_LEN	common/mavlink_msg_local_position_ned_cov.h	30;"	d
MAVLINK_MSG_LOG_DATA_FIELD_DATA_LEN	common/mavlink_msg_log_data.h	21;"	d
MAVLINK_MSG_MEMORY_VECT_FIELD_VALUE_LEN	common/mavlink_msg_memory_vect.h	21;"	d
MAVLINK_MSG_NAMED_VALUE_FLOAT_FIELD_NAME_LEN	common/mavlink_msg_named_value_float.h	20;"	d
MAVLINK_MSG_NAMED_VALUE_INT_FIELD_NAME_LEN	common/mavlink_msg_named_value_int.h	20;"	d
MAVLINK_MSG_PARAM_MAP_RC_FIELD_PARAM_ID_LEN	common/mavlink_msg_param_map_rc.h	26;"	d
MAVLINK_MSG_PARAM_REQUEST_READ_FIELD_PARAM_ID_LEN	common/mavlink_msg_param_request_read.h	21;"	d
MAVLINK_MSG_PARAM_SET_FIELD_PARAM_ID_LEN	common/mavlink_msg_param_set.h	22;"	d
MAVLINK_MSG_PARAM_VALUE_FIELD_PARAM_ID_LEN	common/mavlink_msg_param_value.h	22;"	d
MAVLINK_MSG_RESOURCE_REQUEST_FIELD_STORAGE_LEN	common/mavlink_msg_resource_request.h	23;"	d
MAVLINK_MSG_RESOURCE_REQUEST_FIELD_URI_LEN	common/mavlink_msg_resource_request.h	22;"	d
MAVLINK_MSG_SERIAL_CONTROL_FIELD_DATA_LEN	common/mavlink_msg_serial_control.h	23;"	d
MAVLINK_MSG_SETUP_SIGNING_FIELD_SECRET_KEY_LEN	common/mavlink_msg_setup_signing.h	21;"	d
MAVLINK_MSG_SET_ACTUATOR_CONTROL_TARGET_FIELD_CONTROLS_LEN	common/mavlink_msg_set_actuator_control_target.h	22;"	d
MAVLINK_MSG_SET_ATTITUDE_TARGET_FIELD_Q_LEN	common/mavlink_msg_set_attitude_target.h	26;"	d
MAVLINK_MSG_SET_HOME_POSITION_FIELD_Q_LEN	common/mavlink_msg_set_home_position.h	28;"	d
MAVLINK_MSG_STATUSTEXT_FIELD_TEXT_LEN	common/mavlink_msg_statustext.h	19;"	d
MAVLINK_MSG_TERRAIN_DATA_FIELD_DATA_LEN	common/mavlink_msg_terrain_data.h	22;"	d
MAVLINK_MSG_V2_EXTENSION_FIELD_PAYLOAD_LEN	common/mavlink_msg_v2_extension.h	22;"	d
MAVLINK_NEED_BYTE_SWAP	protocol.h	12;"	d
MAVLINK_NEED_BYTE_SWAP	protocol.h	14;"	d
MAVLINK_NTIAN_H	ntian/ntian.h	6;"	d
MAVLINK_NUM_CHECKSUM_BYTES	mavlink_types.h	26;"	d
MAVLINK_NUM_HEADER_BYTES	mavlink_types.h	25;"	d
MAVLINK_NUM_NON_PAYLOAD_BYTES	mavlink_types.h	27;"	d
MAVLINK_PARSE_STATE_GOT_BAD_CRC1	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_BAD_CRC1,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_COMPAT_FLAGS	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_COMPAT_FLAGS,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_COMPID	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_COMPID,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_CRC1	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_CRC1,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_INCOMPAT_FLAGS	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_INCOMPAT_FLAGS,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_LENGTH	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_LENGTH,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_MSGID1	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_MSGID1,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_MSGID2	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_MSGID2,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_MSGID3	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_MSGID3,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_PAYLOAD	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_PAYLOAD,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_SEQ	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_SEQ,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_STX	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_STX,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_GOT_SYSID	mavlink_types.h	/^    MAVLINK_PARSE_STATE_GOT_SYSID,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_IDLE	mavlink_types.h	/^    MAVLINK_PARSE_STATE_IDLE,$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_SIGNATURE_WAIT	mavlink_types.h	/^    MAVLINK_PARSE_STATE_SIGNATURE_WAIT$/;"	e	enum:__anon3
MAVLINK_PARSE_STATE_UNINIT	mavlink_types.h	/^    MAVLINK_PARSE_STATE_UNINIT=0,$/;"	e	enum:__anon3
MAVLINK_SIGNATURE_BLOCK_LEN	mavlink_types.h	29;"	d
MAVLINK_SIGNING_FLAG_SIGN_OUTGOING	mavlink_types.h	237;"	d
MAVLINK_STACK_BUFFER	protocol.h	18;"	d
MAVLINK_START_UART_SEND	protocol.h	30;"	d
MAVLINK_STATUS_FLAG_IN_BADSIG	mavlink_types.h	209;"	d
MAVLINK_STATUS_FLAG_IN_MAVLINK1	mavlink_types.h	206;"	d
MAVLINK_STATUS_FLAG_IN_SIGNED	mavlink_types.h	208;"	d
MAVLINK_STATUS_FLAG_OUT_MAVLINK1	mavlink_types.h	207;"	d
MAVLINK_STX	common/mavlink.h	9;"	d
MAVLINK_STX	ntian/mavlink.h	9;"	d
MAVLINK_STX_MAVLINK1	mavlink_types.h	211;"	d
MAVLINK_TEST_ALL	common/testsuite.h	13;"	d
MAVLINK_TEST_ALL	ntian/testsuite.h	13;"	d
MAVLINK_TYPES_H_	mavlink_types.h	2;"	d
MAVLINK_TYPE_CHAR	mavlink_types.h	/^	MAVLINK_TYPE_CHAR     = 0,$/;"	e	enum:__anon1
MAVLINK_TYPE_DOUBLE	mavlink_types.h	/^	MAVLINK_TYPE_DOUBLE   = 10$/;"	e	enum:__anon1
MAVLINK_TYPE_FLOAT	mavlink_types.h	/^	MAVLINK_TYPE_FLOAT    = 9,$/;"	e	enum:__anon1
MAVLINK_TYPE_INT16_T	mavlink_types.h	/^	MAVLINK_TYPE_INT16_T  = 4,$/;"	e	enum:__anon1
MAVLINK_TYPE_INT32_T	mavlink_types.h	/^	MAVLINK_TYPE_INT32_T  = 6,$/;"	e	enum:__anon1
MAVLINK_TYPE_INT64_T	mavlink_types.h	/^	MAVLINK_TYPE_INT64_T  = 8,$/;"	e	enum:__anon1
MAVLINK_TYPE_INT8_T	mavlink_types.h	/^	MAVLINK_TYPE_INT8_T   = 2,$/;"	e	enum:__anon1
MAVLINK_TYPE_UINT16_T	mavlink_types.h	/^	MAVLINK_TYPE_UINT16_T = 3,$/;"	e	enum:__anon1
MAVLINK_TYPE_UINT32_T	mavlink_types.h	/^	MAVLINK_TYPE_UINT32_T = 5,$/;"	e	enum:__anon1
MAVLINK_TYPE_UINT64_T	mavlink_types.h	/^	MAVLINK_TYPE_UINT64_T = 7,$/;"	e	enum:__anon1
MAVLINK_TYPE_UINT8_T	mavlink_types.h	/^	MAVLINK_TYPE_UINT8_T  = 1,$/;"	e	enum:__anon1
MAVLINK_VERSION	common/common.h	898;"	d
MAVLINK_VERSION	common/common.h	902;"	d
MAVLINK_VERSION	common/common.h	903;"	d
MAVLINK_VERSION	ntian/ntian.h	63;"	d
MAVLINK_VERSION	ntian/ntian.h	67;"	d
MAVLINK_VERSION	ntian/ntian.h	68;"	d
MAVLINK_VERSION_H	common/version.h	6;"	d
MAVLINK_VERSION_H	ntian/version.h	6;"	d
MAVLINK_WIRE_PROTOCOL_VERSION	common/version.h	9;"	d
MAVLINK_WIRE_PROTOCOL_VERSION	ntian/version.h	9;"	d
MAVPACKED	mavlink_types.h	13;"	d
MAVPACKED	mavlink_types.h	15;"	d
MAV_AUTOPILOT	common/common.h	/^typedef enum MAV_AUTOPILOT$/;"	g
MAV_AUTOPILOT	common/common.h	/^} MAV_AUTOPILOT;$/;"	t	typeref:enum:MAV_AUTOPILOT
MAV_AUTOPILOT_AEROB	common/common.h	/^	MAV_AUTOPILOT_AEROB=16, \/* Aerob -- http:\/\/aerob.ru | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ARDUPILOTMEGA	common/common.h	/^	MAV_AUTOPILOT_ARDUPILOTMEGA=3, \/* ArduPilotMega \/ ArduCopter, http:\/\/diydrones.com | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ARMAZILA	common/common.h	/^	MAV_AUTOPILOT_ARMAZILA=15, \/* Armazila -- http:\/\/armazila.com | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ASLUAV	common/common.h	/^	MAV_AUTOPILOT_ASLUAV=17, \/* ASLUAV autopilot -- http:\/\/www.asl.ethz.ch | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_AUTOQUAD	common/common.h	/^	MAV_AUTOPILOT_AUTOQUAD=14, \/* AutoQuad -- http:\/\/autoquad.org | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_ENUM_END	common/common.h	/^	MAV_AUTOPILOT_ENUM_END=18, \/*  | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_FP	common/common.h	/^	MAV_AUTOPILOT_FP=11, \/* FlexiPilot | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC	common/common.h	/^	MAV_AUTOPILOT_GENERIC=0, \/* Generic autopilot, full support for everything | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC_MISSION_FULL	common/common.h	/^	MAV_AUTOPILOT_GENERIC_MISSION_FULL=7, \/* Generic autopilot supporting the full mission command set | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY	common/common.h	/^	MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY=6, \/* Generic autopilot supporting waypoints and other simple navigation commands | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY	common/common.h	/^	MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY=5, \/* Generic autopilot only supporting simple waypoints | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_INVALID	common/common.h	/^	MAV_AUTOPILOT_INVALID=8, \/* No valid autopilot, e.g. a GCS or other MAVLink component | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_OPENPILOT	common/common.h	/^	MAV_AUTOPILOT_OPENPILOT=4, \/* OpenPilot, http:\/\/openpilot.org | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_PPZ	common/common.h	/^	MAV_AUTOPILOT_PPZ=9, \/* PPZ UAV - http:\/\/nongnu.org\/paparazzi | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_PX4	common/common.h	/^	MAV_AUTOPILOT_PX4=12, \/* PX4 Autopilot - http:\/\/pixhawk.ethz.ch\/px4\/ | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_RESERVED	common/common.h	/^	MAV_AUTOPILOT_RESERVED=1, \/* Reserved for future use. | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_SLUGS	common/common.h	/^	MAV_AUTOPILOT_SLUGS=2, \/* SLUGS autopilot, http:\/\/slugsuav.soe.ucsc.edu | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_SMACCMPILOT	common/common.h	/^	MAV_AUTOPILOT_SMACCMPILOT=13, \/* SMACCMPilot - http:\/\/smaccmpilot.org | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_AUTOPILOT_UDB	common/common.h	/^	MAV_AUTOPILOT_UDB=10, \/* UAV Dev Board | *\/$/;"	e	enum:MAV_AUTOPILOT
MAV_BATTERY_FUNCTION	common/common.h	/^typedef enum MAV_BATTERY_FUNCTION$/;"	g
MAV_BATTERY_FUNCTION	common/common.h	/^} MAV_BATTERY_FUNCTION;$/;"	t	typeref:enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_FUNCTION_ALL	common/common.h	/^	MAV_BATTERY_FUNCTION_ALL=1, \/* Battery supports all flight systems | *\/$/;"	e	enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_FUNCTION_AVIONICS	common/common.h	/^	MAV_BATTERY_FUNCTION_AVIONICS=3, \/* Avionics battery | *\/$/;"	e	enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_FUNCTION_ENUM_END	common/common.h	/^	MAV_BATTERY_FUNCTION_ENUM_END=5, \/*  | *\/$/;"	e	enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_FUNCTION_PROPULSION	common/common.h	/^	MAV_BATTERY_FUNCTION_PROPULSION=2, \/* Battery for the propulsion system | *\/$/;"	e	enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_FUNCTION_UNKNOWN	common/common.h	/^	MAV_BATTERY_FUNCTION_UNKNOWN=0, \/* Battery function is unknown | *\/$/;"	e	enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_TYPE	common/common.h	/^typedef enum MAV_BATTERY_TYPE$/;"	g
MAV_BATTERY_TYPE	common/common.h	/^} MAV_BATTERY_TYPE;$/;"	t	typeref:enum:MAV_BATTERY_TYPE
MAV_BATTERY_TYPE_ENUM_END	common/common.h	/^	MAV_BATTERY_TYPE_ENUM_END=5, \/*  | *\/$/;"	e	enum:MAV_BATTERY_TYPE
MAV_BATTERY_TYPE_LIFE	common/common.h	/^	MAV_BATTERY_TYPE_LIFE=2, \/* Lithium-iron-phosphate battery | *\/$/;"	e	enum:MAV_BATTERY_TYPE
MAV_BATTERY_TYPE_LION	common/common.h	/^	MAV_BATTERY_TYPE_LION=3, \/* Lithium-ION battery | *\/$/;"	e	enum:MAV_BATTERY_TYPE
MAV_BATTERY_TYPE_LIPO	common/common.h	/^	MAV_BATTERY_TYPE_LIPO=1, \/* Lithium polymer battery | *\/$/;"	e	enum:MAV_BATTERY_TYPE
MAV_BATTERY_TYPE_NIMH	common/common.h	/^	MAV_BATTERY_TYPE_NIMH=4, \/* Nickel metal hydride battery | *\/$/;"	e	enum:MAV_BATTERY_TYPE
MAV_BATTERY_TYPE_PAYLOAD	common/common.h	/^	MAV_BATTERY_TYPE_PAYLOAD=4, \/* Payload battery | *\/$/;"	e	enum:MAV_BATTERY_FUNCTION
MAV_BATTERY_TYPE_UNKNOWN	common/common.h	/^	MAV_BATTERY_TYPE_UNKNOWN=0, \/* Not specified. | *\/$/;"	e	enum:MAV_BATTERY_TYPE
MAV_CMD	common/common.h	/^typedef enum MAV_CMD$/;"	g
MAV_CMD	common/common.h	/^} MAV_CMD;$/;"	t	typeref:enum:MAV_CMD
MAV_CMD_ACK	common/common.h	/^typedef enum MAV_CMD_ACK$/;"	g
MAV_CMD_ACK	common/common.h	/^} MAV_CMD_ACK;$/;"	t	typeref:enum:MAV_CMD_ACK
MAV_CMD_ACK_ENUM_END	common/common.h	/^	MAV_CMD_ACK_ENUM_END=10, \/*  | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_ACCESS_DENIED	common/common.h	/^	MAV_CMD_ACK_ERR_ACCESS_DENIED=3, \/* The system is refusing to accept this command from this source \/ communication partner. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE	common/common.h	/^	MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE=6, \/* The coordinate frame of this command is ok, but he coordinate values exceed the safety limits of this system. This is a generic error, please use the more specific error messages below if possible. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED	common/common.h	/^	MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED=5, \/* The coordinate frame of this command \/ mission item is not supported. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_FAIL	common/common.h	/^	MAV_CMD_ACK_ERR_FAIL=2, \/* Generic error message if none of the other reasons fails or if no detailed error reporting is implemented. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_NOT_SUPPORTED	common/common.h	/^	MAV_CMD_ACK_ERR_NOT_SUPPORTED=4, \/* Command or mission item is not supported, other commands would be accepted. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE	common/common.h	/^	MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE=7, \/* The X or latitude value is out of range. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE	common/common.h	/^	MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE=8, \/* The Y or longitude value is out of range. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE	common/common.h	/^	MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE=9, \/* The Z or altitude value is out of range. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_ACK_OK	common/common.h	/^	MAV_CMD_ACK_OK=1, \/* Command \/ mission item is ok. | *\/$/;"	e	enum:MAV_CMD_ACK
MAV_CMD_COMPONENT_ARM_DISARM	common/common.h	/^	MAV_CMD_COMPONENT_ARM_DISARM=400, \/* Arms \/ Disarms a component |1 to arm, 0 to disarm|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_CHANGE_ALT	common/common.h	/^	MAV_CMD_CONDITION_CHANGE_ALT=113, \/* Ascend\/descend at rate.  Delay mission state machine until desired altitude reached. |Descent \/ Ascend rate (m\/s)| Empty| Empty| Empty| Empty| Empty| Finish Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_DELAY	common/common.h	/^	MAV_CMD_CONDITION_DELAY=112, \/* Delay mission state machine. |Delay in seconds (decimal)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_DISTANCE	common/common.h	/^	MAV_CMD_CONDITION_DISTANCE=114, \/* Delay mission state machine until within desired distance of next NAV point. |Distance (meters)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_LAST	common/common.h	/^	MAV_CMD_CONDITION_LAST=159, \/* NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_CONDITION_YAW	common/common.h	/^	MAV_CMD_CONDITION_YAW=115, \/* Reach a certain target angle. |target angle: [0-360], 0 is north| speed during yaw change:[deg per second]| direction: negative: counter clockwise, positive: clockwise [-1,1]| relative offset or absolute angle: [ 1,0]| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_CHANGE_ALTITUDE	common/common.h	/^	MAV_CMD_DO_CHANGE_ALTITUDE=186, \/* Change altitude set point. |Altitude in meters| Mav frame of new altitude (see MAV_FRAME)| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_CHANGE_SPEED	common/common.h	/^	MAV_CMD_DO_CHANGE_SPEED=178, \/* Change speed and\/or throttle set points. |Speed type (0=Airspeed, 1=Ground Speed)| Speed  (m\/s, -1 indicates no change)| Throttle  ( Percent, -1 indicates no change)| absolute or relative [0,1]| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_CONTROL_VIDEO	common/common.h	/^	MAV_CMD_DO_CONTROL_VIDEO=200, \/* Control onboard camera system. |Camera ID (-1 for all)| Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw| Transmission mode: 0: video stream, >0: single images every n seconds (decimal)| Recording: 0: disabled, 1: enabled compressed, 2: enabled raw| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_DIGICAM_CONFIGURE	common/common.h	/^	MAV_CMD_DO_DIGICAM_CONFIGURE=202, \/* Mission command to configure an on-board camera controller system. |Modes: P, TV, AV, M, Etc| Shutter speed: Divisor number for one second| Aperture: F stop number| ISO number e.g. 80, 100, 200, Etc| Exposure type enumerator| Command Identity| Main engine cut-off time before camera trigger in seconds\/10 (0 means no cut-off)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_DIGICAM_CONTROL	common/common.h	/^	MAV_CMD_DO_DIGICAM_CONTROL=203, \/* Mission command to control an on-board camera controller system. |Session control e.g. show\/hide lens| Zoom's absolute position| Zooming step value to offset zoom from the current position| Focus Locking, Unlocking or Re-locking| Shooting Command| Command Identity| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_FENCE_ENABLE	common/common.h	/^	MAV_CMD_DO_FENCE_ENABLE=207, \/* Mission command to enable the geofence |enable? (0=disable, 1=enable, 2=disable_floor_only)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_FLIGHTTERMINATION	common/common.h	/^	MAV_CMD_DO_FLIGHTTERMINATION=185, \/* Terminate flight immediately |Flight termination activated if > 0.5| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_FOLLOW	common/common.h	/^	MAV_CMD_DO_FOLLOW=32, \/* Being following a target |System ID (the system ID of the FOLLOW_TARGET beacon). Send 0 to disable follow-me and return to the default position hold mode| RESERVED| RESERVED| altitude flag: 0: Keep current altitude, 1: keep altitude difference to target, 2: go to a fixed altitude above home| altitude| RESERVED| TTL in seconds in which the MAV should go to the default position hold mode after a message rx timeout|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_FOLLOW_REPOSITION	common/common.h	/^	MAV_CMD_DO_FOLLOW_REPOSITION=33, \/* Reposition the MAV after a follow target command has been sent |Camera q1 (where 0 is on the ray from the camera to the tracking device)| Camera q2| Camera q3| Camera q4| altitude offset from target (m)| X offset from target (m)| Y offset from target (m)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_GO_AROUND	common/common.h	/^	MAV_CMD_DO_GO_AROUND=191, \/* Mission command to safely abort an autonmous landing. |Altitude (meters)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_GUIDED_LIMITS	common/common.h	/^	MAV_CMD_DO_GUIDED_LIMITS=222, \/* set limits for external control |timeout - maximum time (in seconds) that external controller will be allowed to control vehicle. 0 means no timeout| absolute altitude min (in meters, AMSL) - if vehicle moves below this alt, the command will be aborted and the mission will continue.  0 means no lower altitude limit| absolute altitude max (in meters)- if vehicle moves above this alt, the command will be aborted and the mission will continue.  0 means no upper altitude limit| horizontal move limit (in meters, AMSL) - if vehicle moves more than this distance from it's location at the moment the command was executed, the command will be aborted and the mission will continue. 0 means no horizontal altitude limit| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_GUIDED_MASTER	common/common.h	/^	MAV_CMD_DO_GUIDED_MASTER=221, \/* set id of master controller |System ID| Component ID| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_INVERTED_FLIGHT	common/common.h	/^	MAV_CMD_DO_INVERTED_FLIGHT=210, \/* Change to\/from inverted flight |inverted (0=normal, 1=inverted)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_JUMP	common/common.h	/^	MAV_CMD_DO_JUMP=177, \/* Jump to the desired command in the mission list.  Repeat this action only the specified number of times |Sequence number| Repeat count| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_LAND_START	common/common.h	/^	MAV_CMD_DO_LAND_START=189, \/* Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude\/Longitude is optional, and may be set to 0\/0 if not needed. If specified then it will be used to help find the closest landing sequence. |Empty| Empty| Empty| Empty| Latitude| Longitude| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_LAST	common/common.h	/^	MAV_CMD_DO_LAST=240, \/* NOP - This command is only used to mark the upper limit of the DO commands in the enumeration |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOTOR_TEST	common/common.h	/^	MAV_CMD_DO_MOTOR_TEST=209, \/* Mission command to perform motor test |motor sequence number (a number from 1 to max number of motors on the vehicle)| throttle type (0=throttle percentage, 1=PWM, 2=pilot throttle channel pass-through. See MOTOR_TEST_THROTTLE_TYPE enum)| throttle| timeout (in seconds)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOUNT_CONFIGURE	common/common.h	/^	MAV_CMD_DO_MOUNT_CONFIGURE=204, \/* Mission command to configure a camera or antenna mount |Mount operation mode (see MAV_MOUNT_MODE enum)| stabilize roll? (1 = yes, 0 = no)| stabilize pitch? (1 = yes, 0 = no)| stabilize yaw? (1 = yes, 0 = no)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOUNT_CONTROL	common/common.h	/^	MAV_CMD_DO_MOUNT_CONTROL=205, \/* Mission command to control a camera or antenna mount |pitch or lat in degrees, depending on mount mode.| roll or lon in degrees depending on mount mode| yaw or alt (in meters) depending on mount mode| reserved| reserved| reserved| MAV_MOUNT_MODE enum value|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_MOUNT_CONTROL_QUAT	common/common.h	/^	MAV_CMD_DO_MOUNT_CONTROL_QUAT=220, \/* Mission command to control a camera or antenna mount, using a quaternion as reference. |q1 - quaternion param #1, w (1 in null-rotation)| q2 - quaternion param #2, x (0 in null-rotation)| q3 - quaternion param #3, y (0 in null-rotation)| q4 - quaternion param #4, z (0 in null-rotation)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_PARACHUTE	common/common.h	/^	MAV_CMD_DO_PARACHUTE=208, \/* Mission command to trigger a parachute |action (0=disable, 1=enable, 2=release, for some systems see PARACHUTE_ACTION enum, not in general message set.)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_PAUSE_CONTINUE	common/common.h	/^	MAV_CMD_DO_PAUSE_CONTINUE=193, \/* If in a GPS controlled position mode, hold the current position or continue. |0: Pause current mission or reposition command, hold current position. 1: Continue mission. A VTOL capable vehicle should enter hover mode (multicopter and VTOL planes). A plane should loiter with the default loiter radius.| Reserved| Reserved| Reserved| Reserved| Reserved| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_RALLY_LAND	common/common.h	/^	MAV_CMD_DO_RALLY_LAND=190, \/* Mission command to perform a landing from a rally point. |Break altitude (meters)| Landing speed (m\/s)| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_REPEAT_RELAY	common/common.h	/^	MAV_CMD_DO_REPEAT_RELAY=182, \/* Cycle a relay on and off for a desired number of cyles with a desired period. |Relay number| Cycle count| Cycle time (seconds, decimal)| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_REPEAT_SERVO	common/common.h	/^	MAV_CMD_DO_REPEAT_SERVO=184, \/* Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period. |Servo number| PWM (microseconds, 1000 to 2000 typical)| Cycle count| Cycle time (seconds)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_REPOSITION	common/common.h	/^	MAV_CMD_DO_REPOSITION=192, \/* Reposition the vehicle to a specific WGS84 global position. |Ground speed, less than 0 (-1) for default| Bitmask of option flags, see the MAV_DO_REPOSITION_FLAGS enum.| Reserved| Yaw heading, NaN for unchanged. For planes indicates loiter direction (0: clockwise, 1: counter clockwise)| Latitude (deg * 1E7)| Longitude (deg * 1E7)| Altitude (meters)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_CAM_TRIGG_DIST	common/common.h	/^	MAV_CMD_DO_SET_CAM_TRIGG_DIST=206, \/* Mission command to set CAM_TRIGG_DIST for this flight |Camera trigger distance (meters)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_HOME	common/common.h	/^	MAV_CMD_DO_SET_HOME=179, \/* Changes the home location either to the current location or a specified location. |Use current (1=use current location, 0=use specified location)| Empty| Empty| Empty| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_MODE	common/common.h	/^	MAV_CMD_DO_SET_MODE=176, \/* Set system mode. |Mode, as defined by ENUM MAV_MODE| Custom mode - this is system specific, please refer to the individual autopilot specifications for details.| Custom sub mode - this is system specific, please refer to the individual autopilot specifications for details.| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_PARAMETER	common/common.h	/^	MAV_CMD_DO_SET_PARAMETER=180, \/* Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter. |Parameter number| Parameter value| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_RELAY	common/common.h	/^	MAV_CMD_DO_SET_RELAY=181, \/* Set a relay to a condition. |Relay number| Setting (1=on, 0=off, others possible depending on system hardware)| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_ROI	common/common.h	/^	MAV_CMD_DO_SET_ROI=201, \/* Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras. |Region of intereset mode. (see MAV_ROI enum)| MISSION index\/ target ID. (see MAV_ROI enum)| ROI index (allows a vehicle to manage multiple ROI's)| Empty| x the location of the fixed ROI (see MAV_FRAME)| y| z|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_SET_SERVO	common/common.h	/^	MAV_CMD_DO_SET_SERVO=183, \/* Set a servo to a desired PWM value. |Servo number| PWM (microseconds, 1000 to 2000 typical)| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_TRIGGER_CONTROL	common/common.h	/^	MAV_CMD_DO_TRIGGER_CONTROL=2003, \/* Enable or disable on-board camera triggering system. |Trigger enable\/disable (0 for disable, 1 for start)| Shutter integration time (in ms)| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_DO_VTOL_TRANSITION	common/common.h	/^	MAV_CMD_DO_VTOL_TRANSITION=3000, \/* Request VTOL transition |The target VTOL state, as defined by ENUM MAV_VTOL_STATE. Only MAV_VTOL_STATE_MC and MAV_VTOL_STATE_FW can be used.|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_ENUM_END	common/common.h	/^	MAV_CMD_ENUM_END=31015, \/*  | *\/$/;"	e	enum:MAV_CMD
MAV_CMD_GET_HOME_POSITION	common/common.h	/^	MAV_CMD_GET_HOME_POSITION=410, \/* Request the home position from the vehicle. |Reserved| Reserved| Reserved| Reserved| Reserved| Reserved| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_GET_MESSAGE_INTERVAL	common/common.h	/^	MAV_CMD_GET_MESSAGE_INTERVAL=510, \/* Request the interval between messages for a particular MAVLink message ID |The MAVLink message ID|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_IMAGE_START_CAPTURE	common/common.h	/^	MAV_CMD_IMAGE_START_CAPTURE=2000, \/* Start image capture sequence |Duration between two consecutive pictures (in seconds)| Number of images to capture total - 0 for unlimited capture| Resolution in megapixels (0.3 for 640x480, 1.3 for 1280x720, etc)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_IMAGE_STOP_CAPTURE	common/common.h	/^	MAV_CMD_IMAGE_STOP_CAPTURE=2001, \/* Stop image capture sequence |Reserved| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_MISSION_START	common/common.h	/^	MAV_CMD_MISSION_START=300, \/* start running a mission |first_item: the first mission item to run| last_item:  the last mission item to run (after this item is run, the mission ends)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT	common/common.h	/^	MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT=30, \/* Continue on the current course and climb\/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached. |Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude. | Empty| Empty| Empty| Empty| Empty| Desired altitude in meters|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_DELAY	common/common.h	/^	MAV_CMD_NAV_DELAY=93, \/* Delay the next navigation command a number of seconds or until a specified time |Delay in seconds (decimal, -1 to enable time-of-day fields)| hour (24h format, UTC, -1 to ignore)| minute (24h format, UTC, -1 to ignore)| second (24h format, UTC)| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_FOLLOW	common/common.h	/^	MAV_CMD_NAV_FOLLOW=25, \/* Vehicle following, i.e. this waypoint represents the position of a moving vehicle |Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation| Ground speed of vehicle to be followed| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_GUIDED_ENABLE	common/common.h	/^	MAV_CMD_NAV_GUIDED_ENABLE=92, \/* hand control over to an external controller |On \/ Off (> 0.5f on)| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LAND	common/common.h	/^	MAV_CMD_NAV_LAND=21, \/* Land at location |Abort Alt| Empty| Empty| Desired yaw angle| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LAND_LOCAL	common/common.h	/^	MAV_CMD_NAV_LAND_LOCAL=23, \/* Land at local position (local frame only) |Landing target number (if available)| Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land| Landing descend rate [ms^-1]| Desired yaw angle [rad]| Y-axis position [m]| X-axis position [m]| Z-axis \/ ground level position [m]|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LAST	common/common.h	/^	MAV_CMD_NAV_LAST=95, \/* NOP - This command is only used to mark the upper limit of the NAV\/ACTION commands in the enumeration |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_TIME	common/common.h	/^	MAV_CMD_NAV_LOITER_TIME=19, \/* Loiter around this MISSION for X seconds |Seconds (decimal)| Empty| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location. Else, this is desired yaw angle| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_TO_ALT	common/common.h	/^	MAV_CMD_NAV_LOITER_TO_ALT=31, \/* Begin loiter at the specified Latitude and Longitude.  If Lat=Lon=0, then loiter at the current position.  Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached.  Additionally, if the Heading Required parameter is non-zero the  aircraft will not leave the loiter until heading toward the next waypoint.  |Heading Required (0 = False)| Radius in meters. If positive loiter clockwise, negative counter-clockwise, 0 means no change to standard loiter.| Empty| Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_TURNS	common/common.h	/^	MAV_CMD_NAV_LOITER_TURNS=18, \/* Loiter around this MISSION for X turns |Turns| Empty| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location. Else, this is desired yaw angle| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_LOITER_UNLIM	common/common.h	/^	MAV_CMD_NAV_LOITER_UNLIM=17, \/* Loiter around this MISSION an unlimited amount of time |Empty| Empty| Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise| Desired yaw angle.| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_PATHPLANNING	common/common.h	/^	MAV_CMD_NAV_PATHPLANNING=81, \/* Control autonomous path planning on the MAV. |0: Disable local obstacle avoidance \/ local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning| 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map\/occupancy grid, 3: Enable and reset planned route, but not occupancy grid| Empty| Yaw angle at goal, in compass degrees, [0..360]| Latitude\/X of goal| Longitude\/Y of goal| Altitude\/Z of goal|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_RETURN_TO_LAUNCH	common/common.h	/^	MAV_CMD_NAV_RETURN_TO_LAUNCH=20, \/* Return to launch location |Empty| Empty| Empty| Empty| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_ROI	common/common.h	/^	MAV_CMD_NAV_ROI=80, \/* Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras. |Region of intereset mode. (see MAV_ROI enum)| MISSION index\/ target ID. (see MAV_ROI enum)| ROI index (allows a vehicle to manage multiple ROI's)| Empty| x the location of the fixed ROI (see MAV_FRAME)| y| z|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_SPLINE_WAYPOINT	common/common.h	/^	MAV_CMD_NAV_SPLINE_WAYPOINT=82, \/* Navigate to MISSION using a spline path. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Empty| Empty| Empty| Latitude\/X of goal| Longitude\/Y of goal| Altitude\/Z of goal|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_TAKEOFF	common/common.h	/^	MAV_CMD_NAV_TAKEOFF=22, \/* Takeoff from ground \/ hand |Minimum pitch (if airspeed sensor present), desired pitch without sensor| Empty| Empty| Yaw angle (if magnetometer present), ignored without magnetometer| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_TAKEOFF_LOCAL	common/common.h	/^	MAV_CMD_NAV_TAKEOFF_LOCAL=24, \/* Takeoff from local position (local frame only) |Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]| Empty| Takeoff ascend rate [ms^-1]| Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these| Y-axis position [m]| X-axis position [m]| Z-axis position [m]|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_VTOL_LAND	common/common.h	/^	MAV_CMD_NAV_VTOL_LAND=85, \/* Land using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_VTOL_TAKEOFF	common/common.h	/^	MAV_CMD_NAV_VTOL_TAKEOFF=84, \/* Takeoff from ground using VTOL mode |Empty| Empty| Empty| Yaw angle in degrees| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_NAV_WAYPOINT	common/common.h	/^	MAV_CMD_NAV_WAYPOINT=16, \/* Navigate to MISSION. |Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)| Acceptance radius in meters (if the sphere with this radius is hit, the MISSION counts as reached)| 0 to pass through the WP, if > 0 radius in meters to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.| Desired yaw angle at MISSION (rotary wing)| Latitude| Longitude| Altitude|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_OVERRIDE_GOTO	common/common.h	/^	MAV_CMD_OVERRIDE_GOTO=252, \/* Hold \/ continue the current action |MAV_GOTO_DO_HOLD: hold MAV_GOTO_DO_CONTINUE: continue with next item in mission plan| MAV_GOTO_HOLD_AT_CURRENT_POSITION: Hold at current position MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position| MAV_FRAME coordinate frame of hold point| Desired yaw angle in degrees| Latitude \/ X position| Longitude \/ Y position| Altitude \/ Z position|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PANORAMA_CREATE	common/common.h	/^	MAV_CMD_PANORAMA_CREATE=2800, \/* Create a panorama at the current position |Viewing angle horizontal of the panorama (in degrees, +- 0.5 the total angle)| Viewing angle vertical of panorama (in degrees)| Speed of the horizontal rotation (in degrees per second)| Speed of the vertical rotation (in degrees per second)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PAYLOAD_CONTROL_DEPLOY	common/common.h	/^	MAV_CMD_PAYLOAD_CONTROL_DEPLOY=30002, \/* Control the payload deployment. |Operation mode. 0: Abort deployment, continue normal mission. 1: switch to payload deploment mode. 100: delete first payload deployment request. 101: delete all payload deployment requests.| Reserved| Reserved| Reserved| Reserved| Reserved| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PAYLOAD_PREPARE_DEPLOY	common/common.h	/^	MAV_CMD_PAYLOAD_PREPARE_DEPLOY=30001, \/* Deploy payload on a Lat \/ Lon \/ Alt position. This includes the navigation to reach the required release position and velocity. |Operation mode. 0: prepare single payload deploy (overwriting previous requests), but do not execute it. 1: execute payload deploy immediately (rejecting further deploy commands during execution, but allowing abort). 2: add payload deploy to existing deployment list.| Desired approach vector in degrees compass heading (0..360). A negative value indicates the system can define the approach vector at will.| Desired ground speed at release time. This can be overriden by the airframe in case it needs to meet minimum airspeed. A negative value indicates the system can define the ground speed at will.| Minimum altitude clearance to the release position in meters. A negative value indicates the system can define the clearance at will.| Latitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT| Longitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_CALIBRATION	common/common.h	/^	MAV_CMD_PREFLIGHT_CALIBRATION=241, \/* Trigger calibration. This command will be only accepted if in pre-flight mode. |Gyro calibration: 0: no, 1: yes| Magnetometer calibration: 0: no, 1: yes| Ground pressure: 0: no, 1: yes| Radio calibration: 0: no, 1: yes| Accelerometer calibration: 0: no, 1: yes| Compass\/Motor interference calibration: 0: no, 1: yes| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN	common/common.h	/^	MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN=246, \/* Request the reboot or shutdown of system components. |0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot, 3: Reboot autopilot and keep it in the bootloader until upgraded.| 0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer, 3: Reboot onboard computer and keep it in the bootloader until upgraded.| Reserved, send 0| Reserved, send 0| Reserved, send 0| Reserved, send 0| Reserved, send 0|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS	common/common.h	/^	MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS=242, \/* Set sensor offsets. This command will be only accepted if in pre-flight mode. |Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow, 5: second magnetometer, 6: third magnetometer| X axis offset (or generic dimension 1), in the sensor's raw units| Y axis offset (or generic dimension 2), in the sensor's raw units| Z axis offset (or generic dimension 3), in the sensor's raw units| Generic dimension 4, in the sensor's raw units| Generic dimension 5, in the sensor's raw units| Generic dimension 6, in the sensor's raw units|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_STORAGE	common/common.h	/^	MAV_CMD_PREFLIGHT_STORAGE=245, \/* Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode. |Parameter storage: 0: READ FROM FLASH\/EEPROM, 1: WRITE CURRENT TO FLASH\/EEPROM, 2: Reset to defaults| Mission storage: 0: READ FROM FLASH\/EEPROM, 1: WRITE CURRENT TO FLASH\/EEPROM, 2: Reset to defaults| Onboard logging: 0: Ignore, 1: Start default rate logging, -1: Stop logging, > 1: start logging with rate of param 3 in Hz (e.g. set to 1000 for 1000 Hz logging)| Reserved| Empty| Empty| Empty|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_PREFLIGHT_UAVCAN	common/common.h	/^	MAV_CMD_PREFLIGHT_UAVCAN=243, \/* Trigger UAVCAN config. This command will be only accepted if in pre-flight mode. |1: Trigger actuator ID assignment and direction mapping.| Reserved| Reserved| Reserved| Reserved| Reserved| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES	common/common.h	/^	MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES=520, \/* Request autopilot capabilities |1: Request autopilot version| Reserved (all remaining params)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_SET_GUIDED_SUBMODE_CIRCLE	common/common.h	/^	MAV_CMD_SET_GUIDED_SUBMODE_CIRCLE=4001, \/* This command sets submode circle when vehicle is in guided mode. Vehicle flies along a circle facing the center of the circle. The user can input the velocity along the circle and change the radius. If no input is given the vehicle will hold position.$/;"	e	enum:MAV_CMD
MAV_CMD_SET_GUIDED_SUBMODE_STANDARD	common/common.h	/^	MAV_CMD_SET_GUIDED_SUBMODE_STANDARD=4000, \/* This command sets the submode to standard guided when vehicle is in guided mode. The vehicle holds position and altitude and the user can input the desired velocites along all three axes.$/;"	e	enum:MAV_CMD
MAV_CMD_SET_MESSAGE_INTERVAL	common/common.h	/^	MAV_CMD_SET_MESSAGE_INTERVAL=511, \/* Request the interval between messages for a particular MAVLink message ID. This interface replaces REQUEST_DATA_STREAM |The MAVLink message ID| The interval between two messages, in microseconds. Set to -1 to disable and 0 to request default rate.|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_SPATIAL_USER_1	common/common.h	/^	MAV_CMD_SPATIAL_USER_1=31005, \/* User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_SPATIAL_USER_2	common/common.h	/^	MAV_CMD_SPATIAL_USER_2=31006, \/* User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_SPATIAL_USER_3	common/common.h	/^	MAV_CMD_SPATIAL_USER_3=31007, \/* User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_SPATIAL_USER_4	common/common.h	/^	MAV_CMD_SPATIAL_USER_4=31008, \/* User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_SPATIAL_USER_5	common/common.h	/^	MAV_CMD_SPATIAL_USER_5=31009, \/* User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_START_RX_PAIR	common/common.h	/^	MAV_CMD_START_RX_PAIR=500, \/* Starts receiver pairing |0:Spektrum| 0:Spektrum DSM2, 1:Spektrum DSMX|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_USER_1	common/common.h	/^	MAV_CMD_USER_1=31010, \/* User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item. |User defined| User defined| User defined| User defined| User defined| User defined| User defined|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_USER_2	common/common.h	/^	MAV_CMD_USER_2=31011, \/* User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item. |User defined| User defined| User defined| User defined| User defined| User defined| User defined|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_USER_3	common/common.h	/^	MAV_CMD_USER_3=31012, \/* User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item. |User defined| User defined| User defined| User defined| User defined| User defined| User defined|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_USER_4	common/common.h	/^	MAV_CMD_USER_4=31013, \/* User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item. |User defined| User defined| User defined| User defined| User defined| User defined| User defined|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_USER_5	common/common.h	/^	MAV_CMD_USER_5=31014, \/* User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item. |User defined| User defined| User defined| User defined| User defined| User defined| User defined|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_VIDEO_START_CAPTURE	common/common.h	/^	MAV_CMD_VIDEO_START_CAPTURE=2500, \/* Starts video capture |Camera ID (0 for all cameras), 1 for first, 2 for second, etc.| Frames per second| Resolution in megapixels (0.3 for 640x480, 1.3 for 1280x720, etc)|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_VIDEO_STOP_CAPTURE	common/common.h	/^	MAV_CMD_VIDEO_STOP_CAPTURE=2501, \/* Stop the current video capture |Reserved| Reserved|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_WAYPOINT_USER_1	common/common.h	/^	MAV_CMD_WAYPOINT_USER_1=31000, \/* User defined waypoint item. Ground Station will show the Vehicle as flying through this item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_WAYPOINT_USER_2	common/common.h	/^	MAV_CMD_WAYPOINT_USER_2=31001, \/* User defined waypoint item. Ground Station will show the Vehicle as flying through this item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_WAYPOINT_USER_3	common/common.h	/^	MAV_CMD_WAYPOINT_USER_3=31002, \/* User defined waypoint item. Ground Station will show the Vehicle as flying through this item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_WAYPOINT_USER_4	common/common.h	/^	MAV_CMD_WAYPOINT_USER_4=31003, \/* User defined waypoint item. Ground Station will show the Vehicle as flying through this item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_CMD_WAYPOINT_USER_5	common/common.h	/^	MAV_CMD_WAYPOINT_USER_5=31004, \/* User defined waypoint item. Ground Station will show the Vehicle as flying through this item. |User defined| User defined| User defined| User defined| Latitude unscaled| Longitude unscaled| Altitude, in meters AMSL|  *\/$/;"	e	enum:MAV_CMD
MAV_COMPONENT	common/common.h	/^typedef enum MAV_COMPONENT$/;"	g
MAV_COMPONENT	common/common.h	/^} MAV_COMPONENT;$/;"	t	typeref:enum:MAV_COMPONENT
MAV_COMPONENT_ENUM_END	common/common.h	/^	MAV_COMPONENT_ENUM_END=251, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_ADSB	common/common.h	/^	MAV_COMP_ID_ADSB=156, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_ALL	common/common.h	/^	MAV_COMP_ID_ALL=0, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_CAMERA	common/common.h	/^	MAV_COMP_ID_CAMERA=100, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_GIMBAL	common/common.h	/^	MAV_COMP_ID_GIMBAL=154, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_GPS	common/common.h	/^	MAV_COMP_ID_GPS=220, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_IMU	common/common.h	/^	MAV_COMP_ID_IMU=200, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_IMU_2	common/common.h	/^	MAV_COMP_ID_IMU_2=201, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_IMU_3	common/common.h	/^	MAV_COMP_ID_IMU_3=202, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_LOG	common/common.h	/^	MAV_COMP_ID_LOG=155, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_MAPPER	common/common.h	/^	MAV_COMP_ID_MAPPER=180, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_MISSIONPLANNER	common/common.h	/^	MAV_COMP_ID_MISSIONPLANNER=190, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_OSD	common/common.h	/^	MAV_COMP_ID_OSD=157, \/* On Screen Display (OSD) devices for video links | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_PATHPLANNER	common/common.h	/^	MAV_COMP_ID_PATHPLANNER=195, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_PERIPHERAL	common/common.h	/^	MAV_COMP_ID_PERIPHERAL=158, \/* Generic autopilot peripheral component ID. Meant for devices that do not implement the parameter sub-protocol | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_QX1_GIMBAL	common/common.h	/^	MAV_COMP_ID_QX1_GIMBAL=159, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO1	common/common.h	/^	MAV_COMP_ID_SERVO1=140, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO10	common/common.h	/^	MAV_COMP_ID_SERVO10=149, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO11	common/common.h	/^	MAV_COMP_ID_SERVO11=150, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO12	common/common.h	/^	MAV_COMP_ID_SERVO12=151, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO13	common/common.h	/^	MAV_COMP_ID_SERVO13=152, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO14	common/common.h	/^	MAV_COMP_ID_SERVO14=153, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO2	common/common.h	/^	MAV_COMP_ID_SERVO2=141, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO3	common/common.h	/^	MAV_COMP_ID_SERVO3=142, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO4	common/common.h	/^	MAV_COMP_ID_SERVO4=143, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO5	common/common.h	/^	MAV_COMP_ID_SERVO5=144, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO6	common/common.h	/^	MAV_COMP_ID_SERVO6=145, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO7	common/common.h	/^	MAV_COMP_ID_SERVO7=146, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO8	common/common.h	/^	MAV_COMP_ID_SERVO8=147, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SERVO9	common/common.h	/^	MAV_COMP_ID_SERVO9=148, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_SYSTEM_CONTROL	common/common.h	/^	MAV_COMP_ID_SYSTEM_CONTROL=250, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_UART_BRIDGE	common/common.h	/^	MAV_COMP_ID_UART_BRIDGE=241, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_COMP_ID_UDP_BRIDGE	common/common.h	/^	MAV_COMP_ID_UDP_BRIDGE=240, \/*  | *\/$/;"	e	enum:MAV_COMPONENT
MAV_DATA_STREAM	common/common.h	/^typedef enum MAV_DATA_STREAM$/;"	g
MAV_DATA_STREAM	common/common.h	/^} MAV_DATA_STREAM;$/;"	t	typeref:enum:MAV_DATA_STREAM
MAV_DATA_STREAM_ALL	common/common.h	/^	MAV_DATA_STREAM_ALL=0, \/* Enable all data streams | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_ENUM_END	common/common.h	/^	MAV_DATA_STREAM_ENUM_END=13, \/*  | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTENDED_STATUS	common/common.h	/^	MAV_DATA_STREAM_EXTENDED_STATUS=2, \/* Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTRA1	common/common.h	/^	MAV_DATA_STREAM_EXTRA1=10, \/* Dependent on the autopilot | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTRA2	common/common.h	/^	MAV_DATA_STREAM_EXTRA2=11, \/* Dependent on the autopilot | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_EXTRA3	common/common.h	/^	MAV_DATA_STREAM_EXTRA3=12, \/* Dependent on the autopilot | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_POSITION	common/common.h	/^	MAV_DATA_STREAM_POSITION=6, \/* Enable LOCAL_POSITION, GLOBAL_POSITION\/GLOBAL_POSITION_INT messages. | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_RAW_CONTROLLER	common/common.h	/^	MAV_DATA_STREAM_RAW_CONTROLLER=4, \/* Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT. | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_RAW_SENSORS	common/common.h	/^	MAV_DATA_STREAM_RAW_SENSORS=1, \/* Enable IMU_RAW, GPS_RAW, GPS_STATUS packets. | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DATA_STREAM_RC_CHANNELS	common/common.h	/^	MAV_DATA_STREAM_RC_CHANNELS=3, \/* Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW | *\/$/;"	e	enum:MAV_DATA_STREAM
MAV_DISTANCE_SENSOR	common/common.h	/^typedef enum MAV_DISTANCE_SENSOR$/;"	g
MAV_DISTANCE_SENSOR	common/common.h	/^} MAV_DISTANCE_SENSOR;$/;"	t	typeref:enum:MAV_DISTANCE_SENSOR
MAV_DISTANCE_SENSOR_ENUM_END	common/common.h	/^	MAV_DISTANCE_SENSOR_ENUM_END=3, \/*  | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_DISTANCE_SENSOR_INFRARED	common/common.h	/^	MAV_DISTANCE_SENSOR_INFRARED=2, \/* Infrared rangefinder, e.g. Sharp units | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_DISTANCE_SENSOR_LASER	common/common.h	/^	MAV_DISTANCE_SENSOR_LASER=0, \/* Laser rangefinder, e.g. LightWare SF02\/F or PulsedLight units | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_DISTANCE_SENSOR_ULTRASOUND	common/common.h	/^	MAV_DISTANCE_SENSOR_ULTRASOUND=1, \/* Ultrasound rangefinder, e.g. MaxBotix units | *\/$/;"	e	enum:MAV_DISTANCE_SENSOR
MAV_DO_REPOSITION_FLAGS	common/common.h	/^typedef enum MAV_DO_REPOSITION_FLAGS$/;"	g
MAV_DO_REPOSITION_FLAGS	common/common.h	/^} MAV_DO_REPOSITION_FLAGS;$/;"	t	typeref:enum:MAV_DO_REPOSITION_FLAGS
MAV_DO_REPOSITION_FLAGS_CHANGE_MODE	common/common.h	/^	MAV_DO_REPOSITION_FLAGS_CHANGE_MODE=1, \/* The aircraft should immediately transition into guided. This should not be set for follow me applications | *\/$/;"	e	enum:MAV_DO_REPOSITION_FLAGS
MAV_DO_REPOSITION_FLAGS_ENUM_END	common/common.h	/^	MAV_DO_REPOSITION_FLAGS_ENUM_END=2, \/*  | *\/$/;"	e	enum:MAV_DO_REPOSITION_FLAGS
MAV_ESTIMATOR_TYPE	common/common.h	/^typedef enum MAV_ESTIMATOR_TYPE$/;"	g
MAV_ESTIMATOR_TYPE	common/common.h	/^} MAV_ESTIMATOR_TYPE;$/;"	t	typeref:enum:MAV_ESTIMATOR_TYPE
MAV_ESTIMATOR_TYPE_ENUM_END	common/common.h	/^	MAV_ESTIMATOR_TYPE_ENUM_END=6, \/*  | *\/$/;"	e	enum:MAV_ESTIMATOR_TYPE
MAV_ESTIMATOR_TYPE_GPS	common/common.h	/^	MAV_ESTIMATOR_TYPE_GPS=4, \/* Plain GPS estimate. | *\/$/;"	e	enum:MAV_ESTIMATOR_TYPE
MAV_ESTIMATOR_TYPE_GPS_INS	common/common.h	/^	MAV_ESTIMATOR_TYPE_GPS_INS=5, \/* Estimator integrating GPS and inertial sensing. | *\/$/;"	e	enum:MAV_ESTIMATOR_TYPE
MAV_ESTIMATOR_TYPE_NAIVE	common/common.h	/^	MAV_ESTIMATOR_TYPE_NAIVE=1, \/* This is a naive estimator without any real covariance feedback. | *\/$/;"	e	enum:MAV_ESTIMATOR_TYPE
MAV_ESTIMATOR_TYPE_VIO	common/common.h	/^	MAV_ESTIMATOR_TYPE_VIO=3, \/* Visual-inertial estimate. | *\/$/;"	e	enum:MAV_ESTIMATOR_TYPE
MAV_ESTIMATOR_TYPE_VISION	common/common.h	/^	MAV_ESTIMATOR_TYPE_VISION=2, \/* Computer vision based estimate. Might be up to scale. | *\/$/;"	e	enum:MAV_ESTIMATOR_TYPE
MAV_FRAME	common/common.h	/^typedef enum MAV_FRAME$/;"	g
MAV_FRAME	common/common.h	/^} MAV_FRAME;$/;"	t	typeref:enum:MAV_FRAME
MAV_FRAME_BODY_NED	common/common.h	/^	MAV_FRAME_BODY_NED=8, \/* Setpoint in body NED frame. This makes sense if all position control is externalized - e.g. useful to command 2 m\/s^2 acceleration to the right. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_BODY_OFFSET_NED	common/common.h	/^	MAV_FRAME_BODY_OFFSET_NED=9, \/* Offset in body NED frame. This makes sense if adding setpoints to the current flight path, to avoid an obstacle - e.g. useful to command 2 m\/s^2 acceleration to the east. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_ENUM_END	common/common.h	/^	MAV_FRAME_ENUM_END=12, \/*  | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL	common/common.h	/^	MAV_FRAME_GLOBAL=0, \/* Global coordinate frame, WGS84 coordinate system. First value \/ x: latitude, second value \/ y: longitude, third value \/ z: positive altitude over mean sea level (MSL) | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_INT	common/common.h	/^	MAV_FRAME_GLOBAL_INT=5, \/* Global coordinate frame, WGS84 coordinate system. First value \/ x: latitude in degrees*1.0e-7, second value \/ y: longitude in degrees*1.0e-7, third value \/ z: positive altitude over mean sea level (MSL) | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_RELATIVE_ALT	common/common.h	/^	MAV_FRAME_GLOBAL_RELATIVE_ALT=3, \/* Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value \/ x: latitude, second value \/ y: longitude, third value \/ z: positive altitude with 0 being at the altitude of the home location. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_RELATIVE_ALT_INT	common/common.h	/^	MAV_FRAME_GLOBAL_RELATIVE_ALT_INT=6, \/* Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value \/ x: latitude in degrees*10e-7, second value \/ y: longitude in degrees*10e-7, third value \/ z: positive altitude with 0 being at the altitude of the home location. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_TERRAIN_ALT	common/common.h	/^	MAV_FRAME_GLOBAL_TERRAIN_ALT=10, \/* Global coordinate frame with above terrain level altitude. WGS84 coordinate system, relative altitude over terrain with respect to the waypoint coordinate. First value \/ x: latitude in degrees, second value \/ y: longitude in degrees, third value \/ z: positive altitude in meters with 0 being at ground level in terrain model. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_GLOBAL_TERRAIN_ALT_INT	common/common.h	/^	MAV_FRAME_GLOBAL_TERRAIN_ALT_INT=11, \/* Global coordinate frame with above terrain level altitude. WGS84 coordinate system, relative altitude over terrain with respect to the waypoint coordinate. First value \/ x: latitude in degrees*10e-7, second value \/ y: longitude in degrees*10e-7, third value \/ z: positive altitude in meters with 0 being at ground level in terrain model. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_LOCAL_ENU	common/common.h	/^	MAV_FRAME_LOCAL_ENU=4, \/* Local coordinate frame, Z-down (x: east, y: north, z: up) | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_LOCAL_NED	common/common.h	/^	MAV_FRAME_LOCAL_NED=1, \/* Local coordinate frame, Z-up (x: north, y: east, z: down). | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_LOCAL_OFFSET_NED	common/common.h	/^	MAV_FRAME_LOCAL_OFFSET_NED=7, \/* Offset to the current local frame. Anything expressed in this frame should be added to the current local frame position. | *\/$/;"	e	enum:MAV_FRAME
MAV_FRAME_MISSION	common/common.h	/^	MAV_FRAME_MISSION=2, \/* NOT a coordinate frame, indicates a mission command. | *\/$/;"	e	enum:MAV_FRAME
MAV_GOTO	common/common.h	/^typedef enum MAV_GOTO$/;"	g
MAV_GOTO	common/common.h	/^} MAV_GOTO;$/;"	t	typeref:enum:MAV_GOTO
MAV_GOTO_DO_CONTINUE	common/common.h	/^	MAV_GOTO_DO_CONTINUE=1, \/* Continue with the next item in mission execution. | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_DO_HOLD	common/common.h	/^	MAV_GOTO_DO_HOLD=0, \/* Hold at the current position. | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_ENUM_END	common/common.h	/^	MAV_GOTO_ENUM_END=4, \/*  | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_HOLD_AT_CURRENT_POSITION	common/common.h	/^	MAV_GOTO_HOLD_AT_CURRENT_POSITION=2, \/* Hold at the current position of the system | *\/$/;"	e	enum:MAV_GOTO
MAV_GOTO_HOLD_AT_SPECIFIED_POSITION	common/common.h	/^	MAV_GOTO_HOLD_AT_SPECIFIED_POSITION=3, \/* Hold at the position specified in the parameters of the DO_HOLD action | *\/$/;"	e	enum:MAV_GOTO
MAV_LANDED_STATE	common/common.h	/^typedef enum MAV_LANDED_STATE$/;"	g
MAV_LANDED_STATE	common/common.h	/^} MAV_LANDED_STATE;$/;"	t	typeref:enum:MAV_LANDED_STATE
MAV_LANDED_STATE_ENUM_END	common/common.h	/^	MAV_LANDED_STATE_ENUM_END=3, \/*  | *\/$/;"	e	enum:MAV_LANDED_STATE
MAV_LANDED_STATE_IN_AIR	common/common.h	/^	MAV_LANDED_STATE_IN_AIR=2, \/* MAV is in air | *\/$/;"	e	enum:MAV_LANDED_STATE
MAV_LANDED_STATE_ON_GROUND	common/common.h	/^	MAV_LANDED_STATE_ON_GROUND=1, \/* MAV is landed (on ground) | *\/$/;"	e	enum:MAV_LANDED_STATE
MAV_LANDED_STATE_UNDEFINED	common/common.h	/^	MAV_LANDED_STATE_UNDEFINED=0, \/* MAV landed state is unknown | *\/$/;"	e	enum:MAV_LANDED_STATE
MAV_MISSION_ACCEPTED	common/common.h	/^	MAV_MISSION_ACCEPTED=0, \/* mission accepted OK | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_DENIED	common/common.h	/^	MAV_MISSION_DENIED=14, \/* not accepting any mission commands from this communication partner | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_ERROR	common/common.h	/^	MAV_MISSION_ERROR=1, \/* generic error \/ not accepting mission commands at all right now | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID	common/common.h	/^	MAV_MISSION_INVALID=5, \/* one of the parameters has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM1	common/common.h	/^	MAV_MISSION_INVALID_PARAM1=6, \/* param1 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM2	common/common.h	/^	MAV_MISSION_INVALID_PARAM2=7, \/* param2 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM3	common/common.h	/^	MAV_MISSION_INVALID_PARAM3=8, \/* param3 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM4	common/common.h	/^	MAV_MISSION_INVALID_PARAM4=9, \/* param4 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM5_X	common/common.h	/^	MAV_MISSION_INVALID_PARAM5_X=10, \/* x\/param5 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM6_Y	common/common.h	/^	MAV_MISSION_INVALID_PARAM6_Y=11, \/* y\/param6 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_PARAM7	common/common.h	/^	MAV_MISSION_INVALID_PARAM7=12, \/* param7 has an invalid value | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_INVALID_SEQUENCE	common/common.h	/^	MAV_MISSION_INVALID_SEQUENCE=13, \/* received waypoint out of sequence | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_NO_SPACE	common/common.h	/^	MAV_MISSION_NO_SPACE=4, \/* mission item exceeds storage space | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_RESULT	common/common.h	/^typedef enum MAV_MISSION_RESULT$/;"	g
MAV_MISSION_RESULT	common/common.h	/^} MAV_MISSION_RESULT;$/;"	t	typeref:enum:MAV_MISSION_RESULT
MAV_MISSION_RESULT_ENUM_END	common/common.h	/^	MAV_MISSION_RESULT_ENUM_END=15, \/*  | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_UNSUPPORTED	common/common.h	/^	MAV_MISSION_UNSUPPORTED=3, \/* command is not supported | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MISSION_UNSUPPORTED_FRAME	common/common.h	/^	MAV_MISSION_UNSUPPORTED_FRAME=2, \/* coordinate frame is not supported | *\/$/;"	e	enum:MAV_MISSION_RESULT
MAV_MODE	common/common.h	/^typedef enum MAV_MODE$/;"	g
MAV_MODE	common/common.h	/^} MAV_MODE;$/;"	t	typeref:enum:MAV_MODE
MAV_MODE_AUTO_ARMED	common/common.h	/^	MAV_MODE_AUTO_ARMED=220, \/* System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs) | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_AUTO_DISARMED	common/common.h	/^	MAV_MODE_AUTO_DISARMED=92, \/* System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs) | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_ENUM_END	common/common.h	/^	MAV_MODE_ENUM_END=221, \/*  | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_FLAG	common/common.h	/^typedef enum MAV_MODE_FLAG$/;"	g
MAV_MODE_FLAG	common/common.h	/^} MAV_MODE_FLAG;$/;"	t	typeref:enum:MAV_MODE_FLAG
MAV_MODE_FLAG_AUTO_ENABLED	common/common.h	/^	MAV_MODE_FLAG_AUTO_ENABLED=4, \/* 0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_CUSTOM_MODE_ENABLED	common/common.h	/^	MAV_MODE_FLAG_CUSTOM_MODE_ENABLED=1, \/* 0b00000001 Reserved for future use. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_DECODE_POSITION	common/common.h	/^typedef enum MAV_MODE_FLAG_DECODE_POSITION$/;"	g
MAV_MODE_FLAG_DECODE_POSITION	common/common.h	/^} MAV_MODE_FLAG_DECODE_POSITION;$/;"	t	typeref:enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_AUTO	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_AUTO=4, \/* Sixt bit:   00000100 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE=1, \/* Eighth bit: 00000001 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_ENUM_END	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_ENUM_END=129, \/*  | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_GUIDED	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_GUIDED=8, \/* Fifth bit:  00001000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_HIL	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_HIL=32, \/* Third bit:  00100000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_MANUAL	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_MANUAL=64, \/* Second bit: 01000000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_SAFETY	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_SAFETY=128, \/* First bit:  10000000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_STABILIZE	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_STABILIZE=16, \/* Fourth bit: 00010000 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_DECODE_POSITION_TEST	common/common.h	/^	MAV_MODE_FLAG_DECODE_POSITION_TEST=2, \/* Seventh bit: 00000010 | *\/$/;"	e	enum:MAV_MODE_FLAG_DECODE_POSITION
MAV_MODE_FLAG_ENUM_END	common/common.h	/^	MAV_MODE_FLAG_ENUM_END=129, \/*  | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_GUIDED_ENABLED	common/common.h	/^	MAV_MODE_FLAG_GUIDED_ENABLED=8, \/* 0b00001000 guided mode enabled, system flies MISSIONs \/ mission items. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_HIL_ENABLED	common/common.h	/^	MAV_MODE_FLAG_HIL_ENABLED=32, \/* 0b00100000 hardware in the loop simulation. All motors \/ actuators are blocked, but internal software is full operational. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_MANUAL_INPUT_ENABLED	common/common.h	/^	MAV_MODE_FLAG_MANUAL_INPUT_ENABLED=64, \/* 0b01000000 remote control input is enabled. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_SAFETY_ARMED	common/common.h	/^	MAV_MODE_FLAG_SAFETY_ARMED=128, \/* 0b10000000 MAV safety set to armed. Motors are enabled \/ running \/ can start. Ready to fly. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_STABILIZE_ENABLED	common/common.h	/^	MAV_MODE_FLAG_STABILIZE_ENABLED=16, \/* 0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_FLAG_TEST_ENABLED	common/common.h	/^	MAV_MODE_FLAG_TEST_ENABLED=2, \/* 0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations. | *\/$/;"	e	enum:MAV_MODE_FLAG
MAV_MODE_GUIDED_ARMED	common/common.h	/^	MAV_MODE_GUIDED_ARMED=216, \/* System is allowed to be active, under autonomous control, manual setpoint | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_GUIDED_DISARMED	common/common.h	/^	MAV_MODE_GUIDED_DISARMED=88, \/* System is allowed to be active, under autonomous control, manual setpoint | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_MANUAL_ARMED	common/common.h	/^	MAV_MODE_MANUAL_ARMED=192, \/* System is allowed to be active, under manual (RC) control, no stabilization | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_MANUAL_DISARMED	common/common.h	/^	MAV_MODE_MANUAL_DISARMED=64, \/* System is allowed to be active, under manual (RC) control, no stabilization | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_PREFLIGHT	common/common.h	/^	MAV_MODE_PREFLIGHT=0, \/* System is not ready to fly, booting, calibrating, etc. No flag is set. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_STABILIZE_ARMED	common/common.h	/^	MAV_MODE_STABILIZE_ARMED=208, \/* System is allowed to be active, under assisted RC control. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_STABILIZE_DISARMED	common/common.h	/^	MAV_MODE_STABILIZE_DISARMED=80, \/* System is allowed to be active, under assisted RC control. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_TEST_ARMED	common/common.h	/^	MAV_MODE_TEST_ARMED=194, \/* UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only. | *\/$/;"	e	enum:MAV_MODE
MAV_MODE_TEST_DISARMED	common/common.h	/^	MAV_MODE_TEST_DISARMED=66, \/* UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only. | *\/$/;"	e	enum:MAV_MODE
MAV_MOUNT_MODE	common/common.h	/^typedef enum MAV_MOUNT_MODE$/;"	g
MAV_MOUNT_MODE	common/common.h	/^} MAV_MOUNT_MODE;$/;"	t	typeref:enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_ENUM_END	common/common.h	/^	MAV_MOUNT_MODE_ENUM_END=5, \/*  | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_GPS_POINT	common/common.h	/^	MAV_MOUNT_MODE_GPS_POINT=4, \/* Load neutral position and start to point to Lat,Lon,Alt | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_MAVLINK_TARGETING	common/common.h	/^	MAV_MOUNT_MODE_MAVLINK_TARGETING=2, \/* Load neutral position and start MAVLink Roll,Pitch,Yaw control with stabilization | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_NEUTRAL	common/common.h	/^	MAV_MOUNT_MODE_NEUTRAL=1, \/* Load and keep neutral position (Roll,Pitch,Yaw) from permanent memory. | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_RC_TARGETING	common/common.h	/^	MAV_MOUNT_MODE_RC_TARGETING=3, \/* Load neutral position and start RC Roll,Pitch,Yaw control with stabilization | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MOUNT_MODE_RETRACT	common/common.h	/^	MAV_MOUNT_MODE_RETRACT=0, \/* Load and keep safe position (Roll,Pitch,Yaw) from permant memory and stop stabilization | *\/$/;"	e	enum:MAV_MOUNT_MODE
MAV_MSG_ENTRY_FLAG_HAVE_TARGET_COMPONENT	mavlink_types.h	272;"	d
MAV_MSG_ENTRY_FLAG_HAVE_TARGET_SYSTEM	mavlink_types.h	271;"	d
MAV_PARAM_TYPE	common/common.h	/^typedef enum MAV_PARAM_TYPE$/;"	g
MAV_PARAM_TYPE	common/common.h	/^} MAV_PARAM_TYPE;$/;"	t	typeref:enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_ENUM_END	common/common.h	/^	MAV_PARAM_TYPE_ENUM_END=11, \/*  | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT16	common/common.h	/^	MAV_PARAM_TYPE_INT16=4, \/* 16-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT32	common/common.h	/^	MAV_PARAM_TYPE_INT32=6, \/* 32-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT64	common/common.h	/^	MAV_PARAM_TYPE_INT64=8, \/* 64-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_INT8	common/common.h	/^	MAV_PARAM_TYPE_INT8=2, \/* 8-bit signed integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_REAL32	common/common.h	/^	MAV_PARAM_TYPE_REAL32=9, \/* 32-bit floating-point | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_REAL64	common/common.h	/^	MAV_PARAM_TYPE_REAL64=10, \/* 64-bit floating-point | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT16	common/common.h	/^	MAV_PARAM_TYPE_UINT16=3, \/* 16-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT32	common/common.h	/^	MAV_PARAM_TYPE_UINT32=5, \/* 32-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT64	common/common.h	/^	MAV_PARAM_TYPE_UINT64=7, \/* 64-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_PARAM_TYPE_UINT8	common/common.h	/^	MAV_PARAM_TYPE_UINT8=1, \/* 8-bit unsigned integer | *\/$/;"	e	enum:MAV_PARAM_TYPE
MAV_POWER_STATUS	common/common.h	/^typedef enum MAV_POWER_STATUS$/;"	g
MAV_POWER_STATUS	common/common.h	/^} MAV_POWER_STATUS;$/;"	t	typeref:enum:MAV_POWER_STATUS
MAV_POWER_STATUS_BRICK_VALID	common/common.h	/^	MAV_POWER_STATUS_BRICK_VALID=1, \/* main brick power supply valid | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_CHANGED	common/common.h	/^	MAV_POWER_STATUS_CHANGED=32, \/* Power status has changed since boot | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_ENUM_END	common/common.h	/^	MAV_POWER_STATUS_ENUM_END=33, \/*  | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_PERIPH_HIPOWER_OVERCURRENT	common/common.h	/^	MAV_POWER_STATUS_PERIPH_HIPOWER_OVERCURRENT=16, \/* hi-power peripheral supply is in over-current state | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_PERIPH_OVERCURRENT	common/common.h	/^	MAV_POWER_STATUS_PERIPH_OVERCURRENT=8, \/* peripheral supply is in over-current state | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_SERVO_VALID	common/common.h	/^	MAV_POWER_STATUS_SERVO_VALID=2, \/* main servo power supply valid for FMU | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_POWER_STATUS_USB_CONNECTED	common/common.h	/^	MAV_POWER_STATUS_USB_CONNECTED=4, \/* USB power is connected | *\/$/;"	e	enum:MAV_POWER_STATUS
MAV_PROTOCOL_CAPABILITY	common/common.h	/^typedef enum MAV_PROTOCOL_CAPABILITY$/;"	g
MAV_PROTOCOL_CAPABILITY	common/common.h	/^} MAV_PROTOCOL_CAPABILITY;$/;"	t	typeref:enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_COMMAND_INT	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_COMMAND_INT=8, \/* Autopilot supports COMMAND_INT scaled integer message type. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_COMPASS_CALIBRATION	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_COMPASS_CALIBRATION=4096, \/* Autopilot supports onboard compass calibration. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_ENUM_END	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_ENUM_END=4097, \/*  | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_FLIGHT_TERMINATION	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_FLIGHT_TERMINATION=2048, \/* Autopilot supports the flight termination command. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_FTP	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_FTP=32, \/* Autopilot supports the new FILE_TRANSFER_PROTOCOL message type. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_MISSION_FLOAT	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_MISSION_FLOAT=1, \/* Autopilot supports MISSION float message type. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_MISSION_INT	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_MISSION_INT=4, \/* Autopilot supports MISSION_INT scaled integer message type. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_PARAM_FLOAT	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_PARAM_FLOAT=2, \/* Autopilot supports the new param float message type. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_PARAM_UNION	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_PARAM_UNION=16, \/* Autopilot supports the new param union message type. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_SET_ACTUATOR_TARGET	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_SET_ACTUATOR_TARGET=1024, \/* Autopilot supports direct actuator control. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_SET_ATTITUDE_TARGET	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_SET_ATTITUDE_TARGET=64, \/* Autopilot supports commanding attitude offboard. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_GLOBAL_INT	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_GLOBAL_INT=256, \/* Autopilot supports commanding position and velocity targets in global scaled integers. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_LOCAL_NED	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_SET_POSITION_TARGET_LOCAL_NED=128, \/* Autopilot supports commanding position and velocity targets in local NED frame. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_PROTOCOL_CAPABILITY_TERRAIN	common/common.h	/^	MAV_PROTOCOL_CAPABILITY_TERRAIN=512, \/* Autopilot supports terrain protocol \/ data handling. | *\/$/;"	e	enum:MAV_PROTOCOL_CAPABILITY
MAV_RESULT	common/common.h	/^typedef enum MAV_RESULT$/;"	g
MAV_RESULT	common/common.h	/^} MAV_RESULT;$/;"	t	typeref:enum:MAV_RESULT
MAV_RESULT_ACCEPTED	common/common.h	/^	MAV_RESULT_ACCEPTED=0, \/* Command ACCEPTED and EXECUTED | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_DENIED	common/common.h	/^	MAV_RESULT_DENIED=2, \/* Command PERMANENTLY DENIED | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_ENUM_END	common/common.h	/^	MAV_RESULT_ENUM_END=5, \/*  | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_FAILED	common/common.h	/^	MAV_RESULT_FAILED=4, \/* Command executed, but failed | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_TEMPORARILY_REJECTED	common/common.h	/^	MAV_RESULT_TEMPORARILY_REJECTED=1, \/* Command TEMPORARY REJECTED\/DENIED | *\/$/;"	e	enum:MAV_RESULT
MAV_RESULT_UNSUPPORTED	common/common.h	/^	MAV_RESULT_UNSUPPORTED=3, \/* Command UNKNOWN\/UNSUPPORTED | *\/$/;"	e	enum:MAV_RESULT
MAV_ROI	common/common.h	/^typedef enum MAV_ROI$/;"	g
MAV_ROI	common/common.h	/^} MAV_ROI;$/;"	t	typeref:enum:MAV_ROI
MAV_ROI_ENUM_END	common/common.h	/^	MAV_ROI_ENUM_END=5, \/*  | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_LOCATION	common/common.h	/^	MAV_ROI_LOCATION=3, \/* Point toward fixed location. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_NONE	common/common.h	/^	MAV_ROI_NONE=0, \/* No region of interest. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_TARGET	common/common.h	/^	MAV_ROI_TARGET=4, \/* Point toward of given id. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_WPINDEX	common/common.h	/^	MAV_ROI_WPINDEX=2, \/* Point toward given MISSION. | *\/$/;"	e	enum:MAV_ROI
MAV_ROI_WPNEXT	common/common.h	/^	MAV_ROI_WPNEXT=1, \/* Point toward next MISSION. | *\/$/;"	e	enum:MAV_ROI
MAV_SENSOR_ORIENTATION	common/common.h	/^typedef enum MAV_SENSOR_ORIENTATION$/;"	g
MAV_SENSOR_ORIENTATION	common/common.h	/^} MAV_SENSOR_ORIENTATION;$/;"	t	typeref:enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ORIENTATION_ENUM_END	common/common.h	/^	MAV_SENSOR_ORIENTATION_ENUM_END=39, \/*  | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_NONE	common/common.h	/^	MAV_SENSOR_ROTATION_NONE=0, \/* Roll: 0, Pitch: 0, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_PITCH_180	common/common.h	/^	MAV_SENSOR_ROTATION_PITCH_180=12, \/* Roll: 0, Pitch: 180, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_PITCH_180_YAW_270	common/common.h	/^	MAV_SENSOR_ROTATION_PITCH_180_YAW_270=27, \/* Roll: 0, Pitch: 180, Yaw: 270 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_PITCH_180_YAW_90	common/common.h	/^	MAV_SENSOR_ROTATION_PITCH_180_YAW_90=26, \/* Roll: 0, Pitch: 180, Yaw: 90 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_PITCH_270	common/common.h	/^	MAV_SENSOR_ROTATION_PITCH_270=25, \/* Roll: 0, Pitch: 270, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_PITCH_90	common/common.h	/^	MAV_SENSOR_ROTATION_PITCH_90=24, \/* Roll: 0, Pitch: 90, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180=8, \/* Roll: 180, Pitch: 0, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_PITCH_270	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_PITCH_270=34, \/* Roll: 180, Pitch: 270, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_PITCH_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_PITCH_90=29, \/* Roll: 180, Pitch: 90, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_YAW_135	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_YAW_135=11, \/* Roll: 180, Pitch: 0, Yaw: 135 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_YAW_225	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_YAW_225=13, \/* Roll: 180, Pitch: 0, Yaw: 225 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_YAW_270	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_YAW_270=14, \/* Roll: 180, Pitch: 0, Yaw: 270 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_YAW_315	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_YAW_315=15, \/* Roll: 180, Pitch: 0, Yaw: 315 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_YAW_45	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_YAW_45=9, \/* Roll: 180, Pitch: 0, Yaw: 45 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_180_YAW_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_180_YAW_90=10, \/* Roll: 180, Pitch: 0, Yaw: 90 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270=20, \/* Roll: 270, Pitch: 0, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270_PITCH_180	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270_PITCH_180=32, \/* Roll: 270, Pitch: 180, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270_PITCH_270	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270_PITCH_270=35, \/* Roll: 270, Pitch: 270, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270_PITCH_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270_PITCH_90=30, \/* Roll: 270, Pitch: 90, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270_YAW_135	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270_YAW_135=23, \/* Roll: 270, Pitch: 0, Yaw: 135 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270_YAW_45	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270_YAW_45=21, \/* Roll: 270, Pitch: 0, Yaw: 45 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_270_YAW_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_270_YAW_90=22, \/* Roll: 270, Pitch: 0, Yaw: 90 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_315_PITCH_315_YAW_315	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_315_PITCH_315_YAW_315=38, \/* Roll: 315, Pitch: 315, Yaw: 315 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90=16, \/* Roll: 90, Pitch: 0, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_PITCH_180	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_PITCH_180=31, \/* Roll: 90, Pitch: 180, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_PITCH_180_YAW_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_PITCH_180_YAW_90=36, \/* Roll: 90, Pitch: 180, Yaw: 90 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_PITCH_270	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_PITCH_270=33, \/* Roll: 90, Pitch: 270, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_PITCH_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_PITCH_90=28, \/* Roll: 90, Pitch: 90, Yaw: 0 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_YAW_135	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_YAW_135=19, \/* Roll: 90, Pitch: 0, Yaw: 135 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_YAW_270	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_YAW_270=37, \/* Roll: 90, Pitch: 0, Yaw: 270 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_YAW_45	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_YAW_45=17, \/* Roll: 90, Pitch: 0, Yaw: 45 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_ROLL_90_YAW_90	common/common.h	/^	MAV_SENSOR_ROTATION_ROLL_90_YAW_90=18, \/* Roll: 90, Pitch: 0, Yaw: 90 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_135	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_135=3, \/* Roll: 0, Pitch: 0, Yaw: 135 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_180	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_180=4, \/* Roll: 0, Pitch: 0, Yaw: 180 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_225	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_225=5, \/* Roll: 0, Pitch: 0, Yaw: 225 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_270	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_270=6, \/* Roll: 0, Pitch: 0, Yaw: 270 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_315	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_315=7, \/* Roll: 0, Pitch: 0, Yaw: 315 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_45	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_45=1, \/* Roll: 0, Pitch: 0, Yaw: 45 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SENSOR_ROTATION_YAW_90	common/common.h	/^	MAV_SENSOR_ROTATION_YAW_90=2, \/* Roll: 0, Pitch: 0, Yaw: 90 | *\/$/;"	e	enum:MAV_SENSOR_ORIENTATION
MAV_SEVERITY	common/common.h	/^typedef enum MAV_SEVERITY$/;"	g
MAV_SEVERITY	common/common.h	/^} MAV_SEVERITY;$/;"	t	typeref:enum:MAV_SEVERITY
MAV_SEVERITY_ALERT	common/common.h	/^	MAV_SEVERITY_ALERT=1, \/* Action should be taken immediately. Indicates error in non-critical systems. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_CRITICAL	common/common.h	/^	MAV_SEVERITY_CRITICAL=2, \/* Action must be taken immediately. Indicates failure in a primary system. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_DEBUG	common/common.h	/^	MAV_SEVERITY_DEBUG=7, \/* Useful non-operational messages that can assist in debugging. These should not occur during normal operation. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_EMERGENCY	common/common.h	/^	MAV_SEVERITY_EMERGENCY=0, \/* System is unusable. This is a "panic" condition. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_ENUM_END	common/common.h	/^	MAV_SEVERITY_ENUM_END=8, \/*  | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_ERROR	common/common.h	/^	MAV_SEVERITY_ERROR=3, \/* Indicates an error in secondary\/redundant systems. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_INFO	common/common.h	/^	MAV_SEVERITY_INFO=6, \/* Normal operational messages. Useful for logging. No action is required for these messages. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_NOTICE	common/common.h	/^	MAV_SEVERITY_NOTICE=5, \/* An unusual event has occured, though not an error condition. This should be investigated for the root cause. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_SEVERITY_WARNING	common/common.h	/^	MAV_SEVERITY_WARNING=4, \/* Indicates about a possible future error if this is not resolved within a given timeframe. Example would be a low battery warning. | *\/$/;"	e	enum:MAV_SEVERITY
MAV_STATE	common/common.h	/^typedef enum MAV_STATE$/;"	g
MAV_STATE	common/common.h	/^} MAV_STATE;$/;"	t	typeref:enum:MAV_STATE
MAV_STATE_ACTIVE	common/common.h	/^	MAV_STATE_ACTIVE=4, \/* System is active and might be already airborne. Motors are engaged. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_BOOT	common/common.h	/^	MAV_STATE_BOOT=1, \/* System is booting up. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_CALIBRATING	common/common.h	/^	MAV_STATE_CALIBRATING=2, \/* System is calibrating and not flight-ready. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_CRITICAL	common/common.h	/^	MAV_STATE_CRITICAL=5, \/* System is in a non-normal flight mode. It can however still navigate. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_EMERGENCY	common/common.h	/^	MAV_STATE_EMERGENCY=6, \/* System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_ENUM_END	common/common.h	/^	MAV_STATE_ENUM_END=8, \/*  | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_POWEROFF	common/common.h	/^	MAV_STATE_POWEROFF=7, \/* System just initialized its power-down sequence, will shut down now. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_STANDBY	common/common.h	/^	MAV_STATE_STANDBY=3, \/* System is grounded and on standby. It can be launched any time. | *\/$/;"	e	enum:MAV_STATE
MAV_STATE_UNINIT	common/common.h	/^	MAV_STATE_UNINIT=0, \/* Uninitialized system, state is unknown. | *\/$/;"	e	enum:MAV_STATE
MAV_SYS_STATUS_AHRS	common/common.h	/^	MAV_SYS_STATUS_AHRS=2097152, \/* 0x200000 AHRS subsystem health | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_GEOFENCE	common/common.h	/^	MAV_SYS_STATUS_GEOFENCE=1048576, \/* 0x100000 geofence | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_REVERSE_MOTOR	common/common.h	/^	MAV_SYS_STATUS_REVERSE_MOTOR=8388608, \/* 0x800000 Motors are reversed | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR	common/common.h	/^typedef enum MAV_SYS_STATUS_SENSOR$/;"	g
MAV_SYS_STATUS_SENSOR	common/common.h	/^} MAV_SYS_STATUS_SENSOR;$/;"	t	typeref:enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_ACCEL	common/common.h	/^	MAV_SYS_STATUS_SENSOR_3D_ACCEL=2, \/* 0x02 3D accelerometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_ACCEL2	common/common.h	/^	MAV_SYS_STATUS_SENSOR_3D_ACCEL2=262144, \/* 0x40000 2nd 3D accelerometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_GYRO	common/common.h	/^	MAV_SYS_STATUS_SENSOR_3D_GYRO=1, \/* 0x01 3D gyro | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_GYRO2	common/common.h	/^	MAV_SYS_STATUS_SENSOR_3D_GYRO2=131072, \/* 0x20000 2nd 3D gyro | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_MAG	common/common.h	/^	MAV_SYS_STATUS_SENSOR_3D_MAG=4, \/* 0x04 3D magnetometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_3D_MAG2	common/common.h	/^	MAV_SYS_STATUS_SENSOR_3D_MAG2=524288, \/* 0x80000 2nd 3D magnetometer | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE	common/common.h	/^	MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE=8, \/* 0x08 absolute pressure | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL	common/common.h	/^	MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL=1024, \/* 0x400 3D angular rate control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION	common/common.h	/^	MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION=2048, \/* 0x800 attitude stabilization | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE	common/common.h	/^	MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE=16, \/* 0x10 differential pressure | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_ENUM_END	common/common.h	/^	MAV_SYS_STATUS_SENSOR_ENUM_END=8388609, \/*  | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH	common/common.h	/^	MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH=512, \/* 0x200 external ground truth (Vicon or Leica) | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_GPS	common/common.h	/^	MAV_SYS_STATUS_SENSOR_GPS=32, \/* 0x20 GPS | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_LASER_POSITION	common/common.h	/^	MAV_SYS_STATUS_SENSOR_LASER_POSITION=256, \/* 0x100 laser based position | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS	common/common.h	/^	MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS=32768, \/* 0x8000 motor outputs \/ control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW	common/common.h	/^	MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW=64, \/* 0x40 optical flow | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_RC_RECEIVER	common/common.h	/^	MAV_SYS_STATUS_SENSOR_RC_RECEIVER=65536, \/* 0x10000 rc receiver | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_VISION_POSITION	common/common.h	/^	MAV_SYS_STATUS_SENSOR_VISION_POSITION=128, \/* 0x80 computer vision position | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL	common/common.h	/^	MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL=16384, \/* 0x4000 x\/y position control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_YAW_POSITION	common/common.h	/^	MAV_SYS_STATUS_SENSOR_YAW_POSITION=4096, \/* 0x1000 yaw position | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL	common/common.h	/^	MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL=8192, \/* 0x2000 z\/altitude control | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_SYS_STATUS_TERRAIN	common/common.h	/^	MAV_SYS_STATUS_TERRAIN=4194304, \/* 0x400000 Terrain subsystem health | *\/$/;"	e	enum:MAV_SYS_STATUS_SENSOR
MAV_TYPE	common/common.h	/^typedef enum MAV_TYPE$/;"	g
MAV_TYPE	common/common.h	/^} MAV_TYPE;$/;"	t	typeref:enum:MAV_TYPE
MAV_TYPE_ADSB	common/common.h	/^	MAV_TYPE_ADSB=27, \/* Onboard ADSB peripheral | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_AIRSHIP	common/common.h	/^	MAV_TYPE_AIRSHIP=7, \/* Airship, controlled | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ANTENNA_TRACKER	common/common.h	/^	MAV_TYPE_ANTENNA_TRACKER=5, \/* Ground installation | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_COAXIAL	common/common.h	/^	MAV_TYPE_COAXIAL=3, \/* Coaxial helicopter | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ENUM_END	common/common.h	/^	MAV_TYPE_ENUM_END=28, \/*  | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_FIXED_WING	common/common.h	/^	MAV_TYPE_FIXED_WING=1, \/* Fixed wing aircraft. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_FLAPPING_WING	common/common.h	/^	MAV_TYPE_FLAPPING_WING=16, \/* Flapping wing | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_FREE_BALLOON	common/common.h	/^	MAV_TYPE_FREE_BALLOON=8, \/* Free balloon, uncontrolled | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GCS	common/common.h	/^	MAV_TYPE_GCS=6, \/* Operator control unit \/ ground control station | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GENERIC	common/common.h	/^	MAV_TYPE_GENERIC=0, \/* Generic micro air vehicle. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GIMBAL	common/common.h	/^	MAV_TYPE_GIMBAL=26, \/* Onboard gimbal | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_GROUND_ROVER	common/common.h	/^	MAV_TYPE_GROUND_ROVER=10, \/* Ground rover | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_HELICOPTER	common/common.h	/^	MAV_TYPE_HELICOPTER=4, \/* Normal helicopter with tail rotor. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_HEXAROTOR	common/common.h	/^	MAV_TYPE_HEXAROTOR=13, \/* Hexarotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_KITE	common/common.h	/^	MAV_TYPE_KITE=17, \/* Flapping wing | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_OCTOROTOR	common/common.h	/^	MAV_TYPE_OCTOROTOR=14, \/* Octorotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ONBOARD_CONTROLLER	common/common.h	/^	MAV_TYPE_ONBOARD_CONTROLLER=18, \/* Onboard companion controller | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_QUADROTOR	common/common.h	/^	MAV_TYPE_QUADROTOR=2, \/* Quadrotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_ROCKET	common/common.h	/^	MAV_TYPE_ROCKET=9, \/* Rocket | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_SUBMARINE	common/common.h	/^	MAV_TYPE_SUBMARINE=12, \/* Submarine | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_SURFACE_BOAT	common/common.h	/^	MAV_TYPE_SURFACE_BOAT=11, \/* Surface vessel, boat, ship | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_TRICOPTER	common/common.h	/^	MAV_TYPE_TRICOPTER=15, \/* Octorotor | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_DUOROTOR	common/common.h	/^	MAV_TYPE_VTOL_DUOROTOR=19, \/* Two-rotor VTOL using control surfaces in vertical operation in addition. Tailsitter. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_QUADROTOR	common/common.h	/^	MAV_TYPE_VTOL_QUADROTOR=20, \/* Quad-rotor VTOL using a V-shaped quad config in vertical operation. Tailsitter. | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_RESERVED2	common/common.h	/^	MAV_TYPE_VTOL_RESERVED2=22, \/* VTOL reserved 2 | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_RESERVED3	common/common.h	/^	MAV_TYPE_VTOL_RESERVED3=23, \/* VTOL reserved 3 | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_RESERVED4	common/common.h	/^	MAV_TYPE_VTOL_RESERVED4=24, \/* VTOL reserved 4 | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_RESERVED5	common/common.h	/^	MAV_TYPE_VTOL_RESERVED5=25, \/* VTOL reserved 5 | *\/$/;"	e	enum:MAV_TYPE
MAV_TYPE_VTOL_TILTROTOR	common/common.h	/^	MAV_TYPE_VTOL_TILTROTOR=21, \/* Tiltrotor VTOL | *\/$/;"	e	enum:MAV_TYPE
MAV_VTOL_STATE	common/common.h	/^typedef enum MAV_VTOL_STATE$/;"	g
MAV_VTOL_STATE	common/common.h	/^} MAV_VTOL_STATE;$/;"	t	typeref:enum:MAV_VTOL_STATE
MAV_VTOL_STATE_ENUM_END	common/common.h	/^	MAV_VTOL_STATE_ENUM_END=5, \/*  | *\/$/;"	e	enum:MAV_VTOL_STATE
MAV_VTOL_STATE_FW	common/common.h	/^	MAV_VTOL_STATE_FW=4, \/* VTOL is in fixed-wing state | *\/$/;"	e	enum:MAV_VTOL_STATE
MAV_VTOL_STATE_MC	common/common.h	/^	MAV_VTOL_STATE_MC=3, \/* VTOL is in multicopter state | *\/$/;"	e	enum:MAV_VTOL_STATE
MAV_VTOL_STATE_TRANSITION_TO_FW	common/common.h	/^	MAV_VTOL_STATE_TRANSITION_TO_FW=1, \/* VTOL is in transition from multicopter to fixed-wing | *\/$/;"	e	enum:MAV_VTOL_STATE
MAV_VTOL_STATE_TRANSITION_TO_MC	common/common.h	/^	MAV_VTOL_STATE_TRANSITION_TO_MC=2, \/* VTOL is in transition from fixed-wing to multicopter | *\/$/;"	e	enum:MAV_VTOL_STATE
MAV_VTOL_STATE_UNDEFINED	common/common.h	/^	MAV_VTOL_STATE_UNDEFINED=0, \/* MAV is not configured as VTOL | *\/$/;"	e	enum:MAV_VTOL_STATE
MOTOR_TEST_THROTTLE_PERCENT	common/common.h	/^	MOTOR_TEST_THROTTLE_PERCENT=0, \/* throttle as a percentage from 0 ~ 100 | *\/$/;"	e	enum:MOTOR_TEST_THROTTLE_TYPE
MOTOR_TEST_THROTTLE_PILOT	common/common.h	/^	MOTOR_TEST_THROTTLE_PILOT=2, \/* throttle pass-through from pilot's transmitter | *\/$/;"	e	enum:MOTOR_TEST_THROTTLE_TYPE
MOTOR_TEST_THROTTLE_PWM	common/common.h	/^	MOTOR_TEST_THROTTLE_PWM=1, \/* throttle as an absolute PWM value (normally in range of 1000~2000) | *\/$/;"	e	enum:MOTOR_TEST_THROTTLE_TYPE
MOTOR_TEST_THROTTLE_TYPE	common/common.h	/^typedef enum MOTOR_TEST_THROTTLE_TYPE$/;"	g
MOTOR_TEST_THROTTLE_TYPE	common/common.h	/^} MOTOR_TEST_THROTTLE_TYPE;$/;"	t	typeref:enum:MOTOR_TEST_THROTTLE_TYPE
MOTOR_TEST_THROTTLE_TYPE_ENUM_END	common/common.h	/^	MOTOR_TEST_THROTTLE_TYPE_ENUM_END=3, \/*  | *\/$/;"	e	enum:MOTOR_TEST_THROTTLE_TYPE
M_PI_2	mavlink_conversions.h	13;"	d
Maj	mavlink_sha256.h	59;"	d
NTIAN_GIMBAL_CONTROL_MODE	ntian/ntian.h	/^	NTIAN_GIMBAL_CONTROL_MODE=2, \/* CONTROL mode for gimbal (pitch roll yaw) | *\/$/;"	e	enum:NTIAN_GIMBAL_STATUS
NTIAN_GIMBAL_FPV	ntian/ntian.h	/^	NTIAN_GIMBAL_FPV=0, \/* FPV mode for gimbal to like a bird perspectives | *\/$/;"	e	enum:NTIAN_GIMBAL_STATUS
NTIAN_GIMBAL_ROI	ntian/ntian.h	/^	NTIAN_GIMBAL_ROI=1, \/* ROI mode for gimbal to keep the level and look at me | *\/$/;"	e	enum:NTIAN_GIMBAL_STATUS
NTIAN_GIMBAL_STATUS	ntian/ntian.h	/^typedef enum NTIAN_GIMBAL_STATUS$/;"	g
NTIAN_GIMBAL_STATUS	ntian/ntian.h	/^} NTIAN_GIMBAL_STATUS;$/;"	t	typeref:enum:NTIAN_GIMBAL_STATUS
NTIAN_GIMBAL_STATUS_ENUM_END	ntian/ntian.h	/^	NTIAN_GIMBAL_STATUS_ENUM_END=257, \/*  | *\/$/;"	e	enum:NTIAN_GIMBAL_STATUS
NTIAN_GIMBAL_UNKNOW	ntian/ntian.h	/^	NTIAN_GIMBAL_UNKNOW=256, \/* Unknow mode for gimbal control | *\/$/;"	e	enum:NTIAN_GIMBAL_STATUS
NTIAN_MAVLINK_GIMBAL_VERSION	ntian/ntian.h	/^typedef enum NTIAN_MAVLINK_GIMBAL_VERSION$/;"	g
NTIAN_MAVLINK_GIMBAL_VERSION	ntian/ntian.h	/^} NTIAN_MAVLINK_GIMBAL_VERSION;$/;"	t	typeref:enum:NTIAN_MAVLINK_GIMBAL_VERSION
NTIAN_MAVLINK_GIMBAL_VERSION_1	ntian/ntian.h	/^	NTIAN_MAVLINK_GIMBAL_VERSION_1=1, \/*  | *\/$/;"	e	enum:NTIAN_MAVLINK_GIMBAL_VERSION
NTIAN_MAVLINK_GIMBAL_VERSION_ENUM_END	ntian/ntian.h	/^	NTIAN_MAVLINK_GIMBAL_VERSION_ENUM_END=2, \/*  | *\/$/;"	e	enum:NTIAN_MAVLINK_GIMBAL_VERSION
NTIAN_TESTSUITE_H	ntian/testsuite.h	6;"	d
ROTR	mavlink_sha256.h	238;"	d
ROTR	mavlink_sha256.h	61;"	d
SERIAL_CONTROL_DEV	common/common.h	/^typedef enum SERIAL_CONTROL_DEV$/;"	g
SERIAL_CONTROL_DEV	common/common.h	/^} SERIAL_CONTROL_DEV;$/;"	t	typeref:enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_ENUM_END	common/common.h	/^	SERIAL_CONTROL_DEV_ENUM_END=11, \/*  | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_GPS1	common/common.h	/^	SERIAL_CONTROL_DEV_GPS1=2, \/* First GPS port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_GPS2	common/common.h	/^	SERIAL_CONTROL_DEV_GPS2=3, \/* Second GPS port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_SHELL	common/common.h	/^	SERIAL_CONTROL_DEV_SHELL=10, \/* system shell | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_TELEM1	common/common.h	/^	SERIAL_CONTROL_DEV_TELEM1=0, \/* First telemetry port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_DEV_TELEM2	common/common.h	/^	SERIAL_CONTROL_DEV_TELEM2=1, \/* Second telemetry port | *\/$/;"	e	enum:SERIAL_CONTROL_DEV
SERIAL_CONTROL_FLAG	common/common.h	/^typedef enum SERIAL_CONTROL_FLAG$/;"	g
SERIAL_CONTROL_FLAG	common/common.h	/^} SERIAL_CONTROL_FLAG;$/;"	t	typeref:enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_BLOCKING	common/common.h	/^	SERIAL_CONTROL_FLAG_BLOCKING=8, \/* Block on writes to the serial port | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_ENUM_END	common/common.h	/^	SERIAL_CONTROL_FLAG_ENUM_END=17, \/*  | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_EXCLUSIVE	common/common.h	/^	SERIAL_CONTROL_FLAG_EXCLUSIVE=4, \/* Set if access to the serial port should be removed from whatever driver is currently using it, giving exclusive access to the SERIAL_CONTROL protocol. The port can be handed back by sending a request without this flag set | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_MULTI	common/common.h	/^	SERIAL_CONTROL_FLAG_MULTI=16, \/* Send multiple replies until port is drained | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_REPLY	common/common.h	/^	SERIAL_CONTROL_FLAG_REPLY=1, \/* Set if this is a reply | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
SERIAL_CONTROL_FLAG_RESPOND	common/common.h	/^	SERIAL_CONTROL_FLAG_RESPOND=2, \/* Set if the sender wants the receiver to send a response as another SERIAL_CONTROL message | *\/$/;"	e	enum:SERIAL_CONTROL_FLAG
Sigma0	mavlink_sha256.h	239;"	d
Sigma0	mavlink_sha256.h	63;"	d
Sigma1	mavlink_sha256.h	240;"	d
Sigma1	mavlink_sha256.h	64;"	d
X25_INIT_CRC	checksum.h	21;"	d
X25_VALIDATE_CRC	checksum.h	22;"	d
_CHECKSUM_H_	checksum.h	6;"	d
_MAVLINK_CONVERSIONS_H_	mavlink_conversions.h	2;"	d
_MAVLINK_GET_INFO_H_	mavlink_get_info.h	2;"	d
_MAVLINK_HELPERS_H_	mavlink_helpers.h	2;"	d
_MAVLINK_PROTOCOL_H_	protocol.h	2;"	d
_MAV_MSG_RETURN_TYPE	protocol.h	243;"	d
_MAV_PAYLOAD	mavlink_types.h	153;"	d
_MAV_PAYLOAD_NON_CONST	mavlink_types.h	154;"	d
_MAV_PUT_ARRAY	protocol.h	209;"	d
_MAV_PUT_ARRAY	protocol.h	222;"	d
_MAV_RETURN_ARRAY	protocol.h	306;"	d
_MAV_RETURN_ARRAY	protocol.h	317;"	d
_MAV_RETURN_char	protocol.h	238;"	d
_MAV_RETURN_char_array	protocol.h	/^static inline uint16_t _MAV_RETURN_char_array(const mavlink_message_t *msg, char *value, $/;"	f
_MAV_RETURN_int8_t	protocol.h	239;"	d
_MAV_RETURN_int8_t_array	protocol.h	/^static inline uint16_t _MAV_RETURN_int8_t_array(const mavlink_message_t *msg, int8_t *value, $/;"	f
_MAV_RETURN_uint8_t	protocol.h	240;"	d
_MAV_RETURN_uint8_t_array	protocol.h	/^static inline uint16_t _MAV_RETURN_uint8_t_array(const mavlink_message_t *msg, uint8_t *value, $/;"	f
_USE_MATH_DEFINES	mavlink_conversions.h	7;"	d
__mavlink_bitfield	mavlink_helpers.h	/^union __mavlink_bitfield {$/;"	u
__mavlink_field_info	mavlink_types.h	/^typedef struct __mavlink_field_info {$/;"	s
__mavlink_message_info	mavlink_types.h	/^typedef struct __mavlink_message_info {$/;"	s
__mavlink_msg_entry	mavlink_types.h	/^typedef struct __mavlink_msg_entry {$/;"	s
__mavlink_signing	mavlink_types.h	/^typedef struct __mavlink_signing {$/;"	s
__mavlink_signing_stream	mavlink_types.h	/^    struct __mavlink_signing_stream {$/;"	s	struct:__mavlink_signing_streams
__mavlink_signing_streams	mavlink_types.h	/^typedef struct __mavlink_signing_streams {$/;"	s
__mavlink_status	mavlink_types.h	/^typedef struct __mavlink_status {$/;"	s
_mav_finalize_message_chan_send	mavlink_helpers.h	/^MAVLINK_HELPER void _mav_finalize_message_chan_send(mavlink_channel_t chan, uint32_t msgid,$/;"	f
_mav_parse_error	mavlink_helpers.h	/^static inline void _mav_parse_error(mavlink_status_t *status)$/;"	f
_mav_put_char	protocol.h	138;"	d
_mav_put_char_array	protocol.h	/^static inline void _mav_put_char_array(char *buf, uint8_t wire_offset, const char *b, uint8_t array_length)$/;"	f
_mav_put_double	protocol.h	148;"	d
_mav_put_double	protocol.h	157;"	d
_mav_put_double	protocol.h	166;"	d
_mav_put_float	protocol.h	147;"	d
_mav_put_float	protocol.h	156;"	d
_mav_put_float	protocol.h	165;"	d
_mav_put_int16_t	protocol.h	142;"	d
_mav_put_int16_t	protocol.h	151;"	d
_mav_put_int16_t	protocol.h	160;"	d
_mav_put_int32_t	protocol.h	144;"	d
_mav_put_int32_t	protocol.h	153;"	d
_mav_put_int32_t	protocol.h	162;"	d
_mav_put_int64_t	protocol.h	146;"	d
_mav_put_int64_t	protocol.h	155;"	d
_mav_put_int64_t	protocol.h	164;"	d
_mav_put_int8_t	protocol.h	137;"	d
_mav_put_int8_t_array	protocol.h	/^static inline void _mav_put_int8_t_array(char *buf, uint8_t wire_offset, const int8_t *b, uint8_t array_length)$/;"	f
_mav_put_uint16_t	protocol.h	141;"	d
_mav_put_uint16_t	protocol.h	150;"	d
_mav_put_uint16_t	protocol.h	159;"	d
_mav_put_uint32_t	protocol.h	143;"	d
_mav_put_uint32_t	protocol.h	152;"	d
_mav_put_uint32_t	protocol.h	161;"	d
_mav_put_uint64_t	protocol.h	145;"	d
_mav_put_uint64_t	protocol.h	154;"	d
_mav_put_uint64_t	protocol.h	163;"	d
_mav_put_uint8_t	protocol.h	136;"	d
_mav_put_uint8_t_array	protocol.h	/^static inline void _mav_put_uint8_t_array(char *buf, uint8_t wire_offset, const uint8_t *b, uint8_t array_length)$/;"	f
_mav_trim_payload	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t _mav_trim_payload(const char *payload, uint8_t length)$/;"	f
_mavlink_resend_uart	mavlink_helpers.h	/^MAVLINK_HELPER void _mavlink_resend_uart(mavlink_channel_t chan, const mavlink_message_t *msg)$/;"	f
_mavlink_send_uart	mavlink_helpers.h	/^MAVLINK_HELPER void _mavlink_send_uart(mavlink_channel_t chan, const char *buf, uint16_t len)$/;"	f
accept_unsigned_callback	mavlink_types.h	/^    mavlink_accept_unsigned_t accept_unsigned_callback;$/;"	m	struct:__mavlink_signing
array_length	mavlink_types.h	/^        unsigned int array_length;        \/\/ if non-zero, field is an array$/;"	m	struct:__mavlink_field_info
buffer_overrun	mavlink_types.h	/^    uint8_t buffer_overrun;             \/\/\/< Number of buffer overruns$/;"	m	struct:__mavlink_status
byte_copy_2	protocol.h	/^static inline void byte_copy_2(char *dst, const char *src)$/;"	f
byte_copy_4	protocol.h	/^static inline void byte_copy_4(char *dst, const char *src)$/;"	f
byte_copy_8	protocol.h	/^static inline void byte_copy_8(char *dst, const char *src)$/;"	f
byte_swap_2	protocol.h	/^static inline void byte_swap_2(char *dst, const char *src)$/;"	f
byte_swap_4	protocol.h	/^static inline void byte_swap_4(char *dst, const char *src)$/;"	f
byte_swap_8	protocol.h	/^static inline void byte_swap_8(char *dst, const char *src)$/;"	f
compid	mavlink_types.h	/^        uint8_t compid;$/;"	m	struct:__mavlink_signing_streams::__mavlink_signing_stream
counter	mavlink_sha256.h	/^  uint32_t counter[8];$/;"	m	struct:__anon5
crc_accumulate	checksum.h	/^static inline void crc_accumulate(uint8_t data, uint16_t *crcAccum)$/;"	f
crc_accumulate_buffer	checksum.h	/^static inline void crc_accumulate_buffer(uint16_t *crcAccum, const char *pBuffer, uint16_t length)$/;"	f
crc_calculate	checksum.h	/^static inline uint16_t crc_calculate(const uint8_t* pBuffer, uint16_t length)$/;"	f
crc_extra	mavlink_types.h	/^	uint8_t crc_extra;$/;"	m	struct:__mavlink_msg_entry
crc_init	checksum.h	/^static inline void crc_init(uint16_t* crcAccum)$/;"	f
current_rx_seq	mavlink_types.h	/^    uint8_t current_rx_seq;             \/\/\/< Sequence number of last packet received$/;"	m	struct:__mavlink_status
current_tx_seq	mavlink_types.h	/^    uint8_t current_tx_seq;             \/\/\/< Sequence number of last packet sent$/;"	m	struct:__mavlink_status
fields	mavlink_types.h	/^	mavlink_field_info_t fields[MAVLINK_MAX_FIELDS];       \/\/ field information$/;"	m	struct:__mavlink_message_info
flags	mavlink_types.h	/^	uint8_t flags;             \/\/ MAV_MSG_ENTRY_FLAG_*$/;"	m	struct:__mavlink_msg_entry
flags	mavlink_types.h	/^    uint8_t flags;                      \/\/\/< MAVLINK_STATUS_FLAG_*$/;"	m	struct:__mavlink_status
flags	mavlink_types.h	/^    uint8_t flags;                     \/\/\/< MAVLINK_SIGNING_FLAG_*$/;"	m	struct:__mavlink_signing
int16	mavlink_helpers.h	/^	int16_t int16;$/;"	m	union:__mavlink_bitfield
int32	mavlink_helpers.h	/^	int32_t int32;$/;"	m	union:__mavlink_bitfield
int8	mavlink_helpers.h	/^	int8_t int8;$/;"	m	union:__mavlink_bitfield
link_id	mavlink_types.h	/^        uint8_t link_id;$/;"	m	struct:__mavlink_signing_streams::__mavlink_signing_stream
link_id	mavlink_types.h	/^    uint8_t link_id;$/;"	m	struct:__mavlink_signing
mav_array_memcpy	protocol.h	/^static inline void mav_array_memcpy(void *dest, const void *src, size_t n)$/;"	f
mavlink_accept_unsigned_t	mavlink_types.h	/^typedef bool (*mavlink_accept_unsigned_t)(const mavlink_status_t *status, uint32_t msgid);$/;"	t
mavlink_channel_t	mavlink_types.h	/^} mavlink_channel_t;$/;"	t	typeref:enum:__anon2
mavlink_ck_a	mavlink_types.h	157;"	d
mavlink_ck_b	mavlink_types.h	158;"	d
mavlink_dcm_to_euler	mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_dcm_to_euler(const float dcm[3][3], float* roll, float* pitch, float* yaw)$/;"	f
mavlink_dcm_to_quaternion	mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_dcm_to_quaternion(const float dcm[3][3], float quaternion[4])$/;"	f
mavlink_euler_to_dcm	mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_euler_to_dcm(float roll, float pitch, float yaw, float dcm[3][3])$/;"	f
mavlink_euler_to_quaternion	mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_euler_to_quaternion(float roll, float pitch, float yaw, float quaternion[4])$/;"	f
mavlink_expected_message_length	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_expected_message_length(const mavlink_message_t *msg)$/;"	f
mavlink_field_info_t	mavlink_types.h	/^} mavlink_field_info_t;$/;"	t	typeref:struct:__mavlink_field_info
mavlink_finalize_message	mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_finalize_message(mavlink_message_t* msg, uint8_t system_id, uint8_t component_id, $/;"	f
mavlink_finalize_message_chan	mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_finalize_message_chan(mavlink_message_t* msg, uint8_t system_id, uint8_t component_id, $/;"	f
mavlink_frame_char	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_frame_char(uint8_t chan, uint8_t c, mavlink_message_t* r_message, mavlink_status_t* r_mavlink_status)$/;"	f
mavlink_frame_char_buffer	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_frame_char_buffer(mavlink_message_t* rxmsg, $/;"	f
mavlink_framing_t	mavlink_types.h	/^} mavlink_framing_t;$/;"	t	typeref:enum:__anon4
mavlink_get_channel_buffer	mavlink_helpers.h	/^MAVLINK_HELPER mavlink_message_t* mavlink_get_channel_buffer(uint8_t chan)$/;"	f
mavlink_get_channel_status	mavlink_helpers.h	/^MAVLINK_HELPER mavlink_status_t* mavlink_get_channel_status(uint8_t chan)$/;"	f
mavlink_get_crc_extra	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_get_crc_extra(const mavlink_message_t *msg)$/;"	f
mavlink_get_message_info	mavlink_get_info.h	/^MAVLINK_HELPER const mavlink_message_info_t *mavlink_get_message_info(const mavlink_message_t *msg)$/;"	f
mavlink_get_msg_entry	mavlink_helpers.h	/^MAVLINK_HELPER const mavlink_msg_entry_t *mavlink_get_msg_entry(uint32_t msgid)$/;"	f
mavlink_get_proto_version	mavlink_helpers.h	/^MAVLINK_HELPER unsigned int mavlink_get_proto_version(uint8_t chan, unsigned int version)$/;"	f
mavlink_message_info_t	mavlink_types.h	/^} mavlink_message_info_t;$/;"	t	typeref:struct:__mavlink_message_info
mavlink_message_type_t	mavlink_types.h	/^} mavlink_message_type_t;$/;"	t	typeref:enum:__anon1
mavlink_msg_actuator_control_target_decode	common/mavlink_msg_actuator_control_target.h	/^static inline void mavlink_msg_actuator_control_target_decode(const mavlink_message_t* msg, mavlink_actuator_control_target_t* actuator_control_target)$/;"	f
mavlink_msg_actuator_control_target_encode	common/mavlink_msg_actuator_control_target.h	/^static inline uint16_t mavlink_msg_actuator_control_target_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_actuator_control_target_t* actuator_control_target)$/;"	f
mavlink_msg_actuator_control_target_encode_chan	common/mavlink_msg_actuator_control_target.h	/^static inline uint16_t mavlink_msg_actuator_control_target_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_actuator_control_target_t* actuator_control_target)$/;"	f
mavlink_msg_actuator_control_target_get_controls	common/mavlink_msg_actuator_control_target.h	/^static inline uint16_t mavlink_msg_actuator_control_target_get_controls(const mavlink_message_t* msg, float *controls)$/;"	f
mavlink_msg_actuator_control_target_get_group_mlx	common/mavlink_msg_actuator_control_target.h	/^static inline uint8_t mavlink_msg_actuator_control_target_get_group_mlx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_actuator_control_target_get_time_usec	common/mavlink_msg_actuator_control_target.h	/^static inline uint64_t mavlink_msg_actuator_control_target_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_actuator_control_target_pack	common/mavlink_msg_actuator_control_target.h	/^static inline uint16_t mavlink_msg_actuator_control_target_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_actuator_control_target_pack_chan	common/mavlink_msg_actuator_control_target.h	/^static inline uint16_t mavlink_msg_actuator_control_target_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_actuator_control_target_send	common/mavlink_msg_actuator_control_target.h	/^static inline void mavlink_msg_actuator_control_target_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t group_mlx, const float *controls)$/;"	f
mavlink_msg_actuator_control_target_send_buf	common/mavlink_msg_actuator_control_target.h	/^static inline void mavlink_msg_actuator_control_target_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t group_mlx, const float *controls)$/;"	f
mavlink_msg_actuator_control_target_send_struct	common/mavlink_msg_actuator_control_target.h	/^static inline void mavlink_msg_actuator_control_target_send_struct(mavlink_channel_t chan, const mavlink_actuator_control_target_t* actuator_control_target)$/;"	f
mavlink_msg_adsb_vehicle_decode	common/mavlink_msg_adsb_vehicle.h	/^static inline void mavlink_msg_adsb_vehicle_decode(const mavlink_message_t* msg, mavlink_adsb_vehicle_t* adsb_vehicle)$/;"	f
mavlink_msg_adsb_vehicle_encode	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_adsb_vehicle_t* adsb_vehicle)$/;"	f
mavlink_msg_adsb_vehicle_encode_chan	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_adsb_vehicle_t* adsb_vehicle)$/;"	f
mavlink_msg_adsb_vehicle_get_ICAO_address	common/mavlink_msg_adsb_vehicle.h	/^static inline uint32_t mavlink_msg_adsb_vehicle_get_ICAO_address(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_altitude	common/mavlink_msg_adsb_vehicle.h	/^static inline int32_t mavlink_msg_adsb_vehicle_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_altitude_type	common/mavlink_msg_adsb_vehicle.h	/^static inline uint8_t mavlink_msg_adsb_vehicle_get_altitude_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_callsign	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_get_callsign(const mavlink_message_t* msg, char *callsign)$/;"	f
mavlink_msg_adsb_vehicle_get_emitter_type	common/mavlink_msg_adsb_vehicle.h	/^static inline uint8_t mavlink_msg_adsb_vehicle_get_emitter_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_flags	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_heading	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_get_heading(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_hor_velocity	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_get_hor_velocity(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_lat	common/mavlink_msg_adsb_vehicle.h	/^static inline int32_t mavlink_msg_adsb_vehicle_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_lon	common/mavlink_msg_adsb_vehicle.h	/^static inline int32_t mavlink_msg_adsb_vehicle_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_squawk	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_get_squawk(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_tslc	common/mavlink_msg_adsb_vehicle.h	/^static inline uint8_t mavlink_msg_adsb_vehicle_get_tslc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_get_ver_velocity	common/mavlink_msg_adsb_vehicle.h	/^static inline int16_t mavlink_msg_adsb_vehicle_get_ver_velocity(const mavlink_message_t* msg)$/;"	f
mavlink_msg_adsb_vehicle_pack	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_adsb_vehicle_pack_chan	common/mavlink_msg_adsb_vehicle.h	/^static inline uint16_t mavlink_msg_adsb_vehicle_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_adsb_vehicle_send	common/mavlink_msg_adsb_vehicle.h	/^static inline void mavlink_msg_adsb_vehicle_send(mavlink_channel_t chan, uint32_t ICAO_address, int32_t lat, int32_t lon, uint8_t altitude_type, int32_t altitude, uint16_t heading, uint16_t hor_velocity, int16_t ver_velocity, const char *callsign, uint8_t emitter_type, uint8_t tslc, uint16_t flags, uint16_t squawk)$/;"	f
mavlink_msg_adsb_vehicle_send_buf	common/mavlink_msg_adsb_vehicle.h	/^static inline void mavlink_msg_adsb_vehicle_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t ICAO_address, int32_t lat, int32_t lon, uint8_t altitude_type, int32_t altitude, uint16_t heading, uint16_t hor_velocity, int16_t ver_velocity, const char *callsign, uint8_t emitter_type, uint8_t tslc, uint16_t flags, uint16_t squawk)$/;"	f
mavlink_msg_adsb_vehicle_send_struct	common/mavlink_msg_adsb_vehicle.h	/^static inline void mavlink_msg_adsb_vehicle_send_struct(mavlink_channel_t chan, const mavlink_adsb_vehicle_t* adsb_vehicle)$/;"	f
mavlink_msg_altitude_decode	common/mavlink_msg_altitude.h	/^static inline void mavlink_msg_altitude_decode(const mavlink_message_t* msg, mavlink_altitude_t* altitude)$/;"	f
mavlink_msg_altitude_encode	common/mavlink_msg_altitude.h	/^static inline uint16_t mavlink_msg_altitude_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_altitude_t* altitude)$/;"	f
mavlink_msg_altitude_encode_chan	common/mavlink_msg_altitude.h	/^static inline uint16_t mavlink_msg_altitude_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_altitude_t* altitude)$/;"	f
mavlink_msg_altitude_get_altitude_amsl	common/mavlink_msg_altitude.h	/^static inline float mavlink_msg_altitude_get_altitude_amsl(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_get_altitude_local	common/mavlink_msg_altitude.h	/^static inline float mavlink_msg_altitude_get_altitude_local(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_get_altitude_monotonic	common/mavlink_msg_altitude.h	/^static inline float mavlink_msg_altitude_get_altitude_monotonic(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_get_altitude_relative	common/mavlink_msg_altitude.h	/^static inline float mavlink_msg_altitude_get_altitude_relative(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_get_altitude_terrain	common/mavlink_msg_altitude.h	/^static inline float mavlink_msg_altitude_get_altitude_terrain(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_get_bottom_clearance	common/mavlink_msg_altitude.h	/^static inline float mavlink_msg_altitude_get_bottom_clearance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_get_time_usec	common/mavlink_msg_altitude.h	/^static inline uint64_t mavlink_msg_altitude_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_altitude_pack	common/mavlink_msg_altitude.h	/^static inline uint16_t mavlink_msg_altitude_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_altitude_pack_chan	common/mavlink_msg_altitude.h	/^static inline uint16_t mavlink_msg_altitude_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_altitude_send	common/mavlink_msg_altitude.h	/^static inline void mavlink_msg_altitude_send(mavlink_channel_t chan, uint64_t time_usec, float altitude_monotonic, float altitude_amsl, float altitude_local, float altitude_relative, float altitude_terrain, float bottom_clearance)$/;"	f
mavlink_msg_altitude_send_buf	common/mavlink_msg_altitude.h	/^static inline void mavlink_msg_altitude_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float altitude_monotonic, float altitude_amsl, float altitude_local, float altitude_relative, float altitude_terrain, float bottom_clearance)$/;"	f
mavlink_msg_altitude_send_struct	common/mavlink_msg_altitude.h	/^static inline void mavlink_msg_altitude_send_struct(mavlink_channel_t chan, const mavlink_altitude_t* altitude)$/;"	f
mavlink_msg_att_pos_mocap_decode	common/mavlink_msg_att_pos_mocap.h	/^static inline void mavlink_msg_att_pos_mocap_decode(const mavlink_message_t* msg, mavlink_att_pos_mocap_t* att_pos_mocap)$/;"	f
mavlink_msg_att_pos_mocap_encode	common/mavlink_msg_att_pos_mocap.h	/^static inline uint16_t mavlink_msg_att_pos_mocap_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_att_pos_mocap_t* att_pos_mocap)$/;"	f
mavlink_msg_att_pos_mocap_encode_chan	common/mavlink_msg_att_pos_mocap.h	/^static inline uint16_t mavlink_msg_att_pos_mocap_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_att_pos_mocap_t* att_pos_mocap)$/;"	f
mavlink_msg_att_pos_mocap_get_q	common/mavlink_msg_att_pos_mocap.h	/^static inline uint16_t mavlink_msg_att_pos_mocap_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_att_pos_mocap_get_time_usec	common/mavlink_msg_att_pos_mocap.h	/^static inline uint64_t mavlink_msg_att_pos_mocap_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_att_pos_mocap_get_x	common/mavlink_msg_att_pos_mocap.h	/^static inline float mavlink_msg_att_pos_mocap_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_att_pos_mocap_get_y	common/mavlink_msg_att_pos_mocap.h	/^static inline float mavlink_msg_att_pos_mocap_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_att_pos_mocap_get_z	common/mavlink_msg_att_pos_mocap.h	/^static inline float mavlink_msg_att_pos_mocap_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_att_pos_mocap_pack	common/mavlink_msg_att_pos_mocap.h	/^static inline uint16_t mavlink_msg_att_pos_mocap_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_att_pos_mocap_pack_chan	common/mavlink_msg_att_pos_mocap.h	/^static inline uint16_t mavlink_msg_att_pos_mocap_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_att_pos_mocap_send	common/mavlink_msg_att_pos_mocap.h	/^static inline void mavlink_msg_att_pos_mocap_send(mavlink_channel_t chan, uint64_t time_usec, const float *q, float x, float y, float z)$/;"	f
mavlink_msg_att_pos_mocap_send_buf	common/mavlink_msg_att_pos_mocap.h	/^static inline void mavlink_msg_att_pos_mocap_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, const float *q, float x, float y, float z)$/;"	f
mavlink_msg_att_pos_mocap_send_struct	common/mavlink_msg_att_pos_mocap.h	/^static inline void mavlink_msg_att_pos_mocap_send_struct(mavlink_channel_t chan, const mavlink_att_pos_mocap_t* att_pos_mocap)$/;"	f
mavlink_msg_attitude_decode	common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_decode(const mavlink_message_t* msg, mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_encode	common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_encode_chan	common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_get_pitch	common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_pitchspeed	common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_roll	common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_rollspeed	common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_time_boot_ms	common/mavlink_msg_attitude.h	/^static inline uint32_t mavlink_msg_attitude_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_yaw	common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_get_yawspeed	common/mavlink_msg_attitude.h	/^static inline float mavlink_msg_attitude_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_pack	common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_attitude_pack_chan	common/mavlink_msg_attitude.h	/^static inline uint16_t mavlink_msg_attitude_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_attitude_quaternion_cov_decode	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline void mavlink_msg_attitude_quaternion_cov_decode(const mavlink_message_t* msg, mavlink_attitude_quaternion_cov_t* attitude_quaternion_cov)$/;"	f
mavlink_msg_attitude_quaternion_cov_encode	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_cov_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_attitude_quaternion_cov_t* attitude_quaternion_cov)$/;"	f
mavlink_msg_attitude_quaternion_cov_encode_chan	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_cov_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_attitude_quaternion_cov_t* attitude_quaternion_cov)$/;"	f
mavlink_msg_attitude_quaternion_cov_get_covariance	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_cov_get_covariance(const mavlink_message_t* msg, float *covariance)$/;"	f
mavlink_msg_attitude_quaternion_cov_get_pitchspeed	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline float mavlink_msg_attitude_quaternion_cov_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_cov_get_q	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_cov_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_attitude_quaternion_cov_get_rollspeed	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline float mavlink_msg_attitude_quaternion_cov_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_cov_get_time_boot_ms	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint32_t mavlink_msg_attitude_quaternion_cov_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_cov_get_yawspeed	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline float mavlink_msg_attitude_quaternion_cov_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_cov_pack	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_cov_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_attitude_quaternion_cov_pack_chan	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_cov_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_attitude_quaternion_cov_send	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline void mavlink_msg_attitude_quaternion_cov_send(mavlink_channel_t chan, uint32_t time_boot_ms, const float *q, float rollspeed, float pitchspeed, float yawspeed, const float *covariance)$/;"	f
mavlink_msg_attitude_quaternion_cov_send_buf	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline void mavlink_msg_attitude_quaternion_cov_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, const float *q, float rollspeed, float pitchspeed, float yawspeed, const float *covariance)$/;"	f
mavlink_msg_attitude_quaternion_cov_send_struct	common/mavlink_msg_attitude_quaternion_cov.h	/^static inline void mavlink_msg_attitude_quaternion_cov_send_struct(mavlink_channel_t chan, const mavlink_attitude_quaternion_cov_t* attitude_quaternion_cov)$/;"	f
mavlink_msg_attitude_quaternion_decode	common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_decode(const mavlink_message_t* msg, mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_quaternion_encode	common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_quaternion_encode_chan	common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_quaternion_get_pitchspeed	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q1	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q2	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q3	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_q4	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_q4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_rollspeed	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_time_boot_ms	common/mavlink_msg_attitude_quaternion.h	/^static inline uint32_t mavlink_msg_attitude_quaternion_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_get_yawspeed	common/mavlink_msg_attitude_quaternion.h	/^static inline float mavlink_msg_attitude_quaternion_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_quaternion_pack	common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_attitude_quaternion_pack_chan	common/mavlink_msg_attitude_quaternion.h	/^static inline uint16_t mavlink_msg_attitude_quaternion_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_attitude_quaternion_send	common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_send(mavlink_channel_t chan, uint32_t time_boot_ms, float q1, float q2, float q3, float q4, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_quaternion_send_buf	common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float q1, float q2, float q3, float q4, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_quaternion_send_struct	common/mavlink_msg_attitude_quaternion.h	/^static inline void mavlink_msg_attitude_quaternion_send_struct(mavlink_channel_t chan, const mavlink_attitude_quaternion_t* attitude_quaternion)$/;"	f
mavlink_msg_attitude_send	common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_send_buf	common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed)$/;"	f
mavlink_msg_attitude_send_struct	common/mavlink_msg_attitude.h	/^static inline void mavlink_msg_attitude_send_struct(mavlink_channel_t chan, const mavlink_attitude_t* attitude)$/;"	f
mavlink_msg_attitude_target_decode	common/mavlink_msg_attitude_target.h	/^static inline void mavlink_msg_attitude_target_decode(const mavlink_message_t* msg, mavlink_attitude_target_t* attitude_target)$/;"	f
mavlink_msg_attitude_target_encode	common/mavlink_msg_attitude_target.h	/^static inline uint16_t mavlink_msg_attitude_target_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_attitude_target_t* attitude_target)$/;"	f
mavlink_msg_attitude_target_encode_chan	common/mavlink_msg_attitude_target.h	/^static inline uint16_t mavlink_msg_attitude_target_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_attitude_target_t* attitude_target)$/;"	f
mavlink_msg_attitude_target_get_body_pitch_rate	common/mavlink_msg_attitude_target.h	/^static inline float mavlink_msg_attitude_target_get_body_pitch_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_target_get_body_roll_rate	common/mavlink_msg_attitude_target.h	/^static inline float mavlink_msg_attitude_target_get_body_roll_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_target_get_body_yaw_rate	common/mavlink_msg_attitude_target.h	/^static inline float mavlink_msg_attitude_target_get_body_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_target_get_q	common/mavlink_msg_attitude_target.h	/^static inline uint16_t mavlink_msg_attitude_target_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_attitude_target_get_thrust	common/mavlink_msg_attitude_target.h	/^static inline float mavlink_msg_attitude_target_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_target_get_time_boot_ms	common/mavlink_msg_attitude_target.h	/^static inline uint32_t mavlink_msg_attitude_target_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_target_get_type_mask	common/mavlink_msg_attitude_target.h	/^static inline uint8_t mavlink_msg_attitude_target_get_type_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_attitude_target_pack	common/mavlink_msg_attitude_target.h	/^static inline uint16_t mavlink_msg_attitude_target_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_attitude_target_pack_chan	common/mavlink_msg_attitude_target.h	/^static inline uint16_t mavlink_msg_attitude_target_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_attitude_target_send	common/mavlink_msg_attitude_target.h	/^static inline void mavlink_msg_attitude_target_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t type_mask, const float *q, float body_roll_rate, float body_pitch_rate, float body_yaw_rate, float thrust)$/;"	f
mavlink_msg_attitude_target_send_buf	common/mavlink_msg_attitude_target.h	/^static inline void mavlink_msg_attitude_target_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t type_mask, const float *q, float body_roll_rate, float body_pitch_rate, float body_yaw_rate, float thrust)$/;"	f
mavlink_msg_attitude_target_send_struct	common/mavlink_msg_attitude_target.h	/^static inline void mavlink_msg_attitude_target_send_struct(mavlink_channel_t chan, const mavlink_attitude_target_t* attitude_target)$/;"	f
mavlink_msg_auth_key_decode	common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_decode(const mavlink_message_t* msg, mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_auth_key_encode	common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_auth_key_encode_chan	common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_auth_key_get_key	common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_get_key(const mavlink_message_t* msg, char *key)$/;"	f
mavlink_msg_auth_key_pack	common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_auth_key_pack_chan	common/mavlink_msg_auth_key.h	/^static inline uint16_t mavlink_msg_auth_key_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_auth_key_send	common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_send(mavlink_channel_t chan, const char *key)$/;"	f
mavlink_msg_auth_key_send_buf	common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  const char *key)$/;"	f
mavlink_msg_auth_key_send_struct	common/mavlink_msg_auth_key.h	/^static inline void mavlink_msg_auth_key_send_struct(mavlink_channel_t chan, const mavlink_auth_key_t* auth_key)$/;"	f
mavlink_msg_autopilot_version_decode	common/mavlink_msg_autopilot_version.h	/^static inline void mavlink_msg_autopilot_version_decode(const mavlink_message_t* msg, mavlink_autopilot_version_t* autopilot_version)$/;"	f
mavlink_msg_autopilot_version_encode	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_autopilot_version_t* autopilot_version)$/;"	f
mavlink_msg_autopilot_version_encode_chan	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_autopilot_version_t* autopilot_version)$/;"	f
mavlink_msg_autopilot_version_get_board_version	common/mavlink_msg_autopilot_version.h	/^static inline uint32_t mavlink_msg_autopilot_version_get_board_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_capabilities	common/mavlink_msg_autopilot_version.h	/^static inline uint64_t mavlink_msg_autopilot_version_get_capabilities(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_flight_custom_version	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_get_flight_custom_version(const mavlink_message_t* msg, uint8_t *flight_custom_version)$/;"	f
mavlink_msg_autopilot_version_get_flight_sw_version	common/mavlink_msg_autopilot_version.h	/^static inline uint32_t mavlink_msg_autopilot_version_get_flight_sw_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_middleware_custom_version	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_get_middleware_custom_version(const mavlink_message_t* msg, uint8_t *middleware_custom_version)$/;"	f
mavlink_msg_autopilot_version_get_middleware_sw_version	common/mavlink_msg_autopilot_version.h	/^static inline uint32_t mavlink_msg_autopilot_version_get_middleware_sw_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_os_custom_version	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_get_os_custom_version(const mavlink_message_t* msg, uint8_t *os_custom_version)$/;"	f
mavlink_msg_autopilot_version_get_os_sw_version	common/mavlink_msg_autopilot_version.h	/^static inline uint32_t mavlink_msg_autopilot_version_get_os_sw_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_product_id	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_get_product_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_uid	common/mavlink_msg_autopilot_version.h	/^static inline uint64_t mavlink_msg_autopilot_version_get_uid(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_get_vendor_id	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_get_vendor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_autopilot_version_pack	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_autopilot_version_pack_chan	common/mavlink_msg_autopilot_version.h	/^static inline uint16_t mavlink_msg_autopilot_version_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_autopilot_version_send	common/mavlink_msg_autopilot_version.h	/^static inline void mavlink_msg_autopilot_version_send(mavlink_channel_t chan, uint64_t capabilities, uint32_t flight_sw_version, uint32_t middleware_sw_version, uint32_t os_sw_version, uint32_t board_version, const uint8_t *flight_custom_version, const uint8_t *middleware_custom_version, const uint8_t *os_custom_version, uint16_t vendor_id, uint16_t product_id, uint64_t uid)$/;"	f
mavlink_msg_autopilot_version_send_buf	common/mavlink_msg_autopilot_version.h	/^static inline void mavlink_msg_autopilot_version_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t capabilities, uint32_t flight_sw_version, uint32_t middleware_sw_version, uint32_t os_sw_version, uint32_t board_version, const uint8_t *flight_custom_version, const uint8_t *middleware_custom_version, const uint8_t *os_custom_version, uint16_t vendor_id, uint16_t product_id, uint64_t uid)$/;"	f
mavlink_msg_autopilot_version_send_struct	common/mavlink_msg_autopilot_version.h	/^static inline void mavlink_msg_autopilot_version_send_struct(mavlink_channel_t chan, const mavlink_autopilot_version_t* autopilot_version)$/;"	f
mavlink_msg_battery_status_decode	common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_decode(const mavlink_message_t* msg, mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_battery_status_encode	common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_battery_status_encode_chan	common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_battery_status_get_battery_function	common/mavlink_msg_battery_status.h	/^static inline uint8_t mavlink_msg_battery_status_get_battery_function(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_battery_remaining	common/mavlink_msg_battery_status.h	/^static inline int8_t mavlink_msg_battery_status_get_battery_remaining(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_current_battery	common/mavlink_msg_battery_status.h	/^static inline int16_t mavlink_msg_battery_status_get_current_battery(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_current_consumed	common/mavlink_msg_battery_status.h	/^static inline int32_t mavlink_msg_battery_status_get_current_consumed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_energy_consumed	common/mavlink_msg_battery_status.h	/^static inline int32_t mavlink_msg_battery_status_get_energy_consumed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_id	common/mavlink_msg_battery_status.h	/^static inline uint8_t mavlink_msg_battery_status_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_temperature	common/mavlink_msg_battery_status.h	/^static inline int16_t mavlink_msg_battery_status_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_type	common/mavlink_msg_battery_status.h	/^static inline uint8_t mavlink_msg_battery_status_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_battery_status_get_voltages	common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_get_voltages(const mavlink_message_t* msg, uint16_t *voltages)$/;"	f
mavlink_msg_battery_status_pack	common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_battery_status_pack_chan	common/mavlink_msg_battery_status.h	/^static inline uint16_t mavlink_msg_battery_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_battery_status_send	common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_send(mavlink_channel_t chan, uint8_t id, uint8_t battery_function, uint8_t type, int16_t temperature, const uint16_t *voltages, int16_t current_battery, int32_t current_consumed, int32_t energy_consumed, int8_t battery_remaining)$/;"	f
mavlink_msg_battery_status_send_buf	common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t id, uint8_t battery_function, uint8_t type, int16_t temperature, const uint16_t *voltages, int16_t current_battery, int32_t current_consumed, int32_t energy_consumed, int8_t battery_remaining)$/;"	f
mavlink_msg_battery_status_send_struct	common/mavlink_msg_battery_status.h	/^static inline void mavlink_msg_battery_status_send_struct(mavlink_channel_t chan, const mavlink_battery_status_t* battery_status)$/;"	f
mavlink_msg_camera_trigger_decode	common/mavlink_msg_camera_trigger.h	/^static inline void mavlink_msg_camera_trigger_decode(const mavlink_message_t* msg, mavlink_camera_trigger_t* camera_trigger)$/;"	f
mavlink_msg_camera_trigger_encode	common/mavlink_msg_camera_trigger.h	/^static inline uint16_t mavlink_msg_camera_trigger_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_camera_trigger_t* camera_trigger)$/;"	f
mavlink_msg_camera_trigger_encode_chan	common/mavlink_msg_camera_trigger.h	/^static inline uint16_t mavlink_msg_camera_trigger_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_camera_trigger_t* camera_trigger)$/;"	f
mavlink_msg_camera_trigger_get_seq	common/mavlink_msg_camera_trigger.h	/^static inline uint32_t mavlink_msg_camera_trigger_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_camera_trigger_get_time_usec	common/mavlink_msg_camera_trigger.h	/^static inline uint64_t mavlink_msg_camera_trigger_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_camera_trigger_pack	common/mavlink_msg_camera_trigger.h	/^static inline uint16_t mavlink_msg_camera_trigger_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_camera_trigger_pack_chan	common/mavlink_msg_camera_trigger.h	/^static inline uint16_t mavlink_msg_camera_trigger_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_camera_trigger_send	common/mavlink_msg_camera_trigger.h	/^static inline void mavlink_msg_camera_trigger_send(mavlink_channel_t chan, uint64_t time_usec, uint32_t seq)$/;"	f
mavlink_msg_camera_trigger_send_buf	common/mavlink_msg_camera_trigger.h	/^static inline void mavlink_msg_camera_trigger_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint32_t seq)$/;"	f
mavlink_msg_camera_trigger_send_struct	common/mavlink_msg_camera_trigger.h	/^static inline void mavlink_msg_camera_trigger_send_struct(mavlink_channel_t chan, const mavlink_camera_trigger_t* camera_trigger)$/;"	f
mavlink_msg_change_operator_control_ack_decode	common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_decode(const mavlink_message_t* msg, mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_ack_encode	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_ack_encode_chan	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_ack_get_ack	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint8_t mavlink_msg_change_operator_control_ack_get_ack(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_ack_get_control_request	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint8_t mavlink_msg_change_operator_control_ack_get_control_request(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_ack_get_gcs_system_id	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint8_t mavlink_msg_change_operator_control_ack_get_gcs_system_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_ack_pack	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_change_operator_control_ack_pack_chan	common/mavlink_msg_change_operator_control_ack.h	/^static inline uint16_t mavlink_msg_change_operator_control_ack_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_change_operator_control_ack_send	common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_send(mavlink_channel_t chan, uint8_t gcs_system_id, uint8_t control_request, uint8_t ack)$/;"	f
mavlink_msg_change_operator_control_ack_send_buf	common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t gcs_system_id, uint8_t control_request, uint8_t ack)$/;"	f
mavlink_msg_change_operator_control_ack_send_struct	common/mavlink_msg_change_operator_control_ack.h	/^static inline void mavlink_msg_change_operator_control_ack_send_struct(mavlink_channel_t chan, const mavlink_change_operator_control_ack_t* change_operator_control_ack)$/;"	f
mavlink_msg_change_operator_control_decode	common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_decode(const mavlink_message_t* msg, mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_change_operator_control_encode	common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_change_operator_control_encode_chan	common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_change_operator_control_get_control_request	common/mavlink_msg_change_operator_control.h	/^static inline uint8_t mavlink_msg_change_operator_control_get_control_request(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_get_passkey	common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_get_passkey(const mavlink_message_t* msg, char *passkey)$/;"	f
mavlink_msg_change_operator_control_get_target_system	common/mavlink_msg_change_operator_control.h	/^static inline uint8_t mavlink_msg_change_operator_control_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_get_version	common/mavlink_msg_change_operator_control.h	/^static inline uint8_t mavlink_msg_change_operator_control_get_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_change_operator_control_pack	common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_change_operator_control_pack_chan	common/mavlink_msg_change_operator_control.h	/^static inline uint16_t mavlink_msg_change_operator_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_change_operator_control_send	common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_send(mavlink_channel_t chan, uint8_t target_system, uint8_t control_request, uint8_t version, const char *passkey)$/;"	f
mavlink_msg_change_operator_control_send_buf	common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t control_request, uint8_t version, const char *passkey)$/;"	f
mavlink_msg_change_operator_control_send_struct	common/mavlink_msg_change_operator_control.h	/^static inline void mavlink_msg_change_operator_control_send_struct(mavlink_channel_t chan, const mavlink_change_operator_control_t* change_operator_control)$/;"	f
mavlink_msg_command_ack_decode	common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_decode(const mavlink_message_t* msg, mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_ack_encode	common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_ack_encode_chan	common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_ack_get_command	common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_ack_get_result	common/mavlink_msg_command_ack.h	/^static inline uint8_t mavlink_msg_command_ack_get_result(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_ack_pack	common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_command_ack_pack_chan	common/mavlink_msg_command_ack.h	/^static inline uint16_t mavlink_msg_command_ack_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_command_ack_send	common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_send(mavlink_channel_t chan, uint16_t command, uint8_t result)$/;"	f
mavlink_msg_command_ack_send_buf	common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t command, uint8_t result)$/;"	f
mavlink_msg_command_ack_send_struct	common/mavlink_msg_command_ack.h	/^static inline void mavlink_msg_command_ack_send_struct(mavlink_channel_t chan, const mavlink_command_ack_t* command_ack)$/;"	f
mavlink_msg_command_int_decode	common/mavlink_msg_command_int.h	/^static inline void mavlink_msg_command_int_decode(const mavlink_message_t* msg, mavlink_command_int_t* command_int)$/;"	f
mavlink_msg_command_int_encode	common/mavlink_msg_command_int.h	/^static inline uint16_t mavlink_msg_command_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_command_int_t* command_int)$/;"	f
mavlink_msg_command_int_encode_chan	common/mavlink_msg_command_int.h	/^static inline uint16_t mavlink_msg_command_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_command_int_t* command_int)$/;"	f
mavlink_msg_command_int_get_autocontinue	common/mavlink_msg_command_int.h	/^static inline uint8_t mavlink_msg_command_int_get_autocontinue(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_command	common/mavlink_msg_command_int.h	/^static inline uint16_t mavlink_msg_command_int_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_current	common/mavlink_msg_command_int.h	/^static inline uint8_t mavlink_msg_command_int_get_current(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_frame	common/mavlink_msg_command_int.h	/^static inline uint8_t mavlink_msg_command_int_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_param1	common/mavlink_msg_command_int.h	/^static inline float mavlink_msg_command_int_get_param1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_param2	common/mavlink_msg_command_int.h	/^static inline float mavlink_msg_command_int_get_param2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_param3	common/mavlink_msg_command_int.h	/^static inline float mavlink_msg_command_int_get_param3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_param4	common/mavlink_msg_command_int.h	/^static inline float mavlink_msg_command_int_get_param4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_target_component	common/mavlink_msg_command_int.h	/^static inline uint8_t mavlink_msg_command_int_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_target_system	common/mavlink_msg_command_int.h	/^static inline uint8_t mavlink_msg_command_int_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_x	common/mavlink_msg_command_int.h	/^static inline int32_t mavlink_msg_command_int_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_y	common/mavlink_msg_command_int.h	/^static inline int32_t mavlink_msg_command_int_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_get_z	common/mavlink_msg_command_int.h	/^static inline float mavlink_msg_command_int_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_int_pack	common/mavlink_msg_command_int.h	/^static inline uint16_t mavlink_msg_command_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_command_int_pack_chan	common/mavlink_msg_command_int.h	/^static inline uint16_t mavlink_msg_command_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_command_int_send	common/mavlink_msg_command_int.h	/^static inline void mavlink_msg_command_int_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, int32_t x, int32_t y, float z)$/;"	f
mavlink_msg_command_int_send_buf	common/mavlink_msg_command_int.h	/^static inline void mavlink_msg_command_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, int32_t x, int32_t y, float z)$/;"	f
mavlink_msg_command_int_send_struct	common/mavlink_msg_command_int.h	/^static inline void mavlink_msg_command_int_send_struct(mavlink_channel_t chan, const mavlink_command_int_t* command_int)$/;"	f
mavlink_msg_command_long_decode	common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_decode(const mavlink_message_t* msg, mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_command_long_encode	common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_command_long_encode_chan	common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_command_long_get_command	common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_confirmation	common/mavlink_msg_command_long.h	/^static inline uint8_t mavlink_msg_command_long_get_confirmation(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param1	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param2	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param3	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param4	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param5	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param5(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param6	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param6(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_param7	common/mavlink_msg_command_long.h	/^static inline float mavlink_msg_command_long_get_param7(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_target_component	common/mavlink_msg_command_long.h	/^static inline uint8_t mavlink_msg_command_long_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_get_target_system	common/mavlink_msg_command_long.h	/^static inline uint8_t mavlink_msg_command_long_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_command_long_pack	common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_command_long_pack_chan	common/mavlink_msg_command_long.h	/^static inline uint16_t mavlink_msg_command_long_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_command_long_send	common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t command, uint8_t confirmation, float param1, float param2, float param3, float param4, float param5, float param6, float param7)$/;"	f
mavlink_msg_command_long_send_buf	common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t command, uint8_t confirmation, float param1, float param2, float param3, float param4, float param5, float param6, float param7)$/;"	f
mavlink_msg_command_long_send_struct	common/mavlink_msg_command_long.h	/^static inline void mavlink_msg_command_long_send_struct(mavlink_channel_t chan, const mavlink_command_long_t* command_long)$/;"	f
mavlink_msg_control_system_state_decode	common/mavlink_msg_control_system_state.h	/^static inline void mavlink_msg_control_system_state_decode(const mavlink_message_t* msg, mavlink_control_system_state_t* control_system_state)$/;"	f
mavlink_msg_control_system_state_encode	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_control_system_state_t* control_system_state)$/;"	f
mavlink_msg_control_system_state_encode_chan	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_control_system_state_t* control_system_state)$/;"	f
mavlink_msg_control_system_state_get_airspeed	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_pitch_rate	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_pitch_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_pos_variance	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_get_pos_variance(const mavlink_message_t* msg, float *pos_variance)$/;"	f
mavlink_msg_control_system_state_get_q	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_control_system_state_get_roll_rate	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_roll_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_time_usec	common/mavlink_msg_control_system_state.h	/^static inline uint64_t mavlink_msg_control_system_state_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_vel_variance	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_get_vel_variance(const mavlink_message_t* msg, float *vel_variance)$/;"	f
mavlink_msg_control_system_state_get_x_acc	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_x_acc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_x_pos	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_x_pos(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_x_vel	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_x_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_y_acc	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_y_acc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_y_pos	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_y_pos(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_y_vel	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_y_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_yaw_rate	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_z_acc	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_z_acc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_z_pos	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_z_pos(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_get_z_vel	common/mavlink_msg_control_system_state.h	/^static inline float mavlink_msg_control_system_state_get_z_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_control_system_state_pack	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_control_system_state_pack_chan	common/mavlink_msg_control_system_state.h	/^static inline uint16_t mavlink_msg_control_system_state_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_control_system_state_send	common/mavlink_msg_control_system_state.h	/^static inline void mavlink_msg_control_system_state_send(mavlink_channel_t chan, uint64_t time_usec, float x_acc, float y_acc, float z_acc, float x_vel, float y_vel, float z_vel, float x_pos, float y_pos, float z_pos, float airspeed, const float *vel_variance, const float *pos_variance, const float *q, float roll_rate, float pitch_rate, float yaw_rate)$/;"	f
mavlink_msg_control_system_state_send_buf	common/mavlink_msg_control_system_state.h	/^static inline void mavlink_msg_control_system_state_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float x_acc, float y_acc, float z_acc, float x_vel, float y_vel, float z_vel, float x_pos, float y_pos, float z_pos, float airspeed, const float *vel_variance, const float *pos_variance, const float *q, float roll_rate, float pitch_rate, float yaw_rate)$/;"	f
mavlink_msg_control_system_state_send_struct	common/mavlink_msg_control_system_state.h	/^static inline void mavlink_msg_control_system_state_send_struct(mavlink_channel_t chan, const mavlink_control_system_state_t* control_system_state)$/;"	f
mavlink_msg_data_stream_decode	common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_decode(const mavlink_message_t* msg, mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_stream_encode	common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_stream_encode_chan	common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_stream_get_message_rate	common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_get_message_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_stream_get_on_off	common/mavlink_msg_data_stream.h	/^static inline uint8_t mavlink_msg_data_stream_get_on_off(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_stream_get_stream_id	common/mavlink_msg_data_stream.h	/^static inline uint8_t mavlink_msg_data_stream_get_stream_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_stream_pack	common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_data_stream_pack_chan	common/mavlink_msg_data_stream.h	/^static inline uint16_t mavlink_msg_data_stream_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_data_stream_send	common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_send(mavlink_channel_t chan, uint8_t stream_id, uint16_t message_rate, uint8_t on_off)$/;"	f
mavlink_msg_data_stream_send_buf	common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t stream_id, uint16_t message_rate, uint8_t on_off)$/;"	f
mavlink_msg_data_stream_send_struct	common/mavlink_msg_data_stream.h	/^static inline void mavlink_msg_data_stream_send_struct(mavlink_channel_t chan, const mavlink_data_stream_t* data_stream)$/;"	f
mavlink_msg_data_transmission_handshake_decode	common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_decode(const mavlink_message_t* msg, mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_data_transmission_handshake_encode	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_data_transmission_handshake_encode_chan	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_data_transmission_handshake_get_height	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_get_height(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_jpg_quality	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint8_t mavlink_msg_data_transmission_handshake_get_jpg_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_packets	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_get_packets(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_payload	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint8_t mavlink_msg_data_transmission_handshake_get_payload(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_size	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint32_t mavlink_msg_data_transmission_handshake_get_size(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_type	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint8_t mavlink_msg_data_transmission_handshake_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_get_width	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_get_width(const mavlink_message_t* msg)$/;"	f
mavlink_msg_data_transmission_handshake_pack	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_data_transmission_handshake_pack_chan	common/mavlink_msg_data_transmission_handshake.h	/^static inline uint16_t mavlink_msg_data_transmission_handshake_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_data_transmission_handshake_send	common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_send(mavlink_channel_t chan, uint8_t type, uint32_t size, uint16_t width, uint16_t height, uint16_t packets, uint8_t payload, uint8_t jpg_quality)$/;"	f
mavlink_msg_data_transmission_handshake_send_buf	common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t type, uint32_t size, uint16_t width, uint16_t height, uint16_t packets, uint8_t payload, uint8_t jpg_quality)$/;"	f
mavlink_msg_data_transmission_handshake_send_struct	common/mavlink_msg_data_transmission_handshake.h	/^static inline void mavlink_msg_data_transmission_handshake_send_struct(mavlink_channel_t chan, const mavlink_data_transmission_handshake_t* data_transmission_handshake)$/;"	f
mavlink_msg_debug_decode	common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_decode(const mavlink_message_t* msg, mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_encode	common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_encode_chan	common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_get_ind	common/mavlink_msg_debug.h	/^static inline uint8_t mavlink_msg_debug_get_ind(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_get_time_boot_ms	common/mavlink_msg_debug.h	/^static inline uint32_t mavlink_msg_debug_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_get_value	common/mavlink_msg_debug.h	/^static inline float mavlink_msg_debug_get_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_pack	common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_debug_pack_chan	common/mavlink_msg_debug.h	/^static inline uint16_t mavlink_msg_debug_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_debug_send	common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t ind, float value)$/;"	f
mavlink_msg_debug_send_buf	common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t ind, float value)$/;"	f
mavlink_msg_debug_send_struct	common/mavlink_msg_debug.h	/^static inline void mavlink_msg_debug_send_struct(mavlink_channel_t chan, const mavlink_debug_t* debug)$/;"	f
mavlink_msg_debug_vect_decode	common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_decode(const mavlink_message_t* msg, mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_debug_vect_encode	common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_debug_vect_encode_chan	common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_debug_vect_get_name	common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_get_name(const mavlink_message_t* msg, char *name)$/;"	f
mavlink_msg_debug_vect_get_time_usec	common/mavlink_msg_debug_vect.h	/^static inline uint64_t mavlink_msg_debug_vect_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_get_x	common/mavlink_msg_debug_vect.h	/^static inline float mavlink_msg_debug_vect_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_get_y	common/mavlink_msg_debug_vect.h	/^static inline float mavlink_msg_debug_vect_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_get_z	common/mavlink_msg_debug_vect.h	/^static inline float mavlink_msg_debug_vect_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_debug_vect_pack	common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_debug_vect_pack_chan	common/mavlink_msg_debug_vect.h	/^static inline uint16_t mavlink_msg_debug_vect_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_debug_vect_send	common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_send(mavlink_channel_t chan, const char *name, uint64_t time_usec, float x, float y, float z)$/;"	f
mavlink_msg_debug_vect_send_buf	common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  const char *name, uint64_t time_usec, float x, float y, float z)$/;"	f
mavlink_msg_debug_vect_send_struct	common/mavlink_msg_debug_vect.h	/^static inline void mavlink_msg_debug_vect_send_struct(mavlink_channel_t chan, const mavlink_debug_vect_t* debug_vect)$/;"	f
mavlink_msg_distance_sensor_decode	common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_decode(const mavlink_message_t* msg, mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_distance_sensor_encode	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_distance_sensor_encode_chan	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_distance_sensor_get_covariance	common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_covariance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_current_distance	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_get_current_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_id	common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_max_distance	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_get_max_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_min_distance	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_get_min_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_orientation	common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_orientation(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_time_boot_ms	common/mavlink_msg_distance_sensor.h	/^static inline uint32_t mavlink_msg_distance_sensor_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_get_type	common/mavlink_msg_distance_sensor.h	/^static inline uint8_t mavlink_msg_distance_sensor_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_distance_sensor_pack	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_distance_sensor_pack_chan	common/mavlink_msg_distance_sensor.h	/^static inline uint16_t mavlink_msg_distance_sensor_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_distance_sensor_send	common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint16_t min_distance, uint16_t max_distance, uint16_t current_distance, uint8_t type, uint8_t id, uint8_t orientation, uint8_t covariance)$/;"	f
mavlink_msg_distance_sensor_send_buf	common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint16_t min_distance, uint16_t max_distance, uint16_t current_distance, uint8_t type, uint8_t id, uint8_t orientation, uint8_t covariance)$/;"	f
mavlink_msg_distance_sensor_send_struct	common/mavlink_msg_distance_sensor.h	/^static inline void mavlink_msg_distance_sensor_send_struct(mavlink_channel_t chan, const mavlink_distance_sensor_t* distance_sensor)$/;"	f
mavlink_msg_encapsulated_data_decode	common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_decode(const mavlink_message_t* msg, mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_encapsulated_data_encode	common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_encapsulated_data_encode_chan	common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_encapsulated_data_get_data	common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_get_seqnr	common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_get_seqnr(const mavlink_message_t* msg)$/;"	f
mavlink_msg_encapsulated_data_pack	common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_encapsulated_data_pack_chan	common/mavlink_msg_encapsulated_data.h	/^static inline uint16_t mavlink_msg_encapsulated_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_encapsulated_data_send	common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_send(mavlink_channel_t chan, uint16_t seqnr, const uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_send_buf	common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t seqnr, const uint8_t *data)$/;"	f
mavlink_msg_encapsulated_data_send_struct	common/mavlink_msg_encapsulated_data.h	/^static inline void mavlink_msg_encapsulated_data_send_struct(mavlink_channel_t chan, const mavlink_encapsulated_data_t* encapsulated_data)$/;"	f
mavlink_msg_entry_t	mavlink_types.h	/^} mavlink_msg_entry_t;$/;"	t	typeref:struct:__mavlink_msg_entry
mavlink_msg_estimator_status_decode	common/mavlink_msg_estimator_status.h	/^static inline void mavlink_msg_estimator_status_decode(const mavlink_message_t* msg, mavlink_estimator_status_t* estimator_status)$/;"	f
mavlink_msg_estimator_status_encode	common/mavlink_msg_estimator_status.h	/^static inline uint16_t mavlink_msg_estimator_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_estimator_status_t* estimator_status)$/;"	f
mavlink_msg_estimator_status_encode_chan	common/mavlink_msg_estimator_status.h	/^static inline uint16_t mavlink_msg_estimator_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_estimator_status_t* estimator_status)$/;"	f
mavlink_msg_estimator_status_get_flags	common/mavlink_msg_estimator_status.h	/^static inline uint16_t mavlink_msg_estimator_status_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_hagl_ratio	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_hagl_ratio(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_mag_ratio	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_mag_ratio(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_pos_horiz_accuracy	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_pos_horiz_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_pos_horiz_ratio	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_pos_horiz_ratio(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_pos_vert_accuracy	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_pos_vert_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_pos_vert_ratio	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_pos_vert_ratio(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_tas_ratio	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_tas_ratio(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_time_usec	common/mavlink_msg_estimator_status.h	/^static inline uint64_t mavlink_msg_estimator_status_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_get_vel_ratio	common/mavlink_msg_estimator_status.h	/^static inline float mavlink_msg_estimator_status_get_vel_ratio(const mavlink_message_t* msg)$/;"	f
mavlink_msg_estimator_status_pack	common/mavlink_msg_estimator_status.h	/^static inline uint16_t mavlink_msg_estimator_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_estimator_status_pack_chan	common/mavlink_msg_estimator_status.h	/^static inline uint16_t mavlink_msg_estimator_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_estimator_status_send	common/mavlink_msg_estimator_status.h	/^static inline void mavlink_msg_estimator_status_send(mavlink_channel_t chan, uint64_t time_usec, uint16_t flags, float vel_ratio, float pos_horiz_ratio, float pos_vert_ratio, float mag_ratio, float hagl_ratio, float tas_ratio, float pos_horiz_accuracy, float pos_vert_accuracy)$/;"	f
mavlink_msg_estimator_status_send_buf	common/mavlink_msg_estimator_status.h	/^static inline void mavlink_msg_estimator_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint16_t flags, float vel_ratio, float pos_horiz_ratio, float pos_vert_ratio, float mag_ratio, float hagl_ratio, float tas_ratio, float pos_horiz_accuracy, float pos_vert_accuracy)$/;"	f
mavlink_msg_estimator_status_send_struct	common/mavlink_msg_estimator_status.h	/^static inline void mavlink_msg_estimator_status_send_struct(mavlink_channel_t chan, const mavlink_estimator_status_t* estimator_status)$/;"	f
mavlink_msg_extended_sys_state_decode	common/mavlink_msg_extended_sys_state.h	/^static inline void mavlink_msg_extended_sys_state_decode(const mavlink_message_t* msg, mavlink_extended_sys_state_t* extended_sys_state)$/;"	f
mavlink_msg_extended_sys_state_encode	common/mavlink_msg_extended_sys_state.h	/^static inline uint16_t mavlink_msg_extended_sys_state_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_extended_sys_state_t* extended_sys_state)$/;"	f
mavlink_msg_extended_sys_state_encode_chan	common/mavlink_msg_extended_sys_state.h	/^static inline uint16_t mavlink_msg_extended_sys_state_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_extended_sys_state_t* extended_sys_state)$/;"	f
mavlink_msg_extended_sys_state_get_landed_state	common/mavlink_msg_extended_sys_state.h	/^static inline uint8_t mavlink_msg_extended_sys_state_get_landed_state(const mavlink_message_t* msg)$/;"	f
mavlink_msg_extended_sys_state_get_vtol_state	common/mavlink_msg_extended_sys_state.h	/^static inline uint8_t mavlink_msg_extended_sys_state_get_vtol_state(const mavlink_message_t* msg)$/;"	f
mavlink_msg_extended_sys_state_pack	common/mavlink_msg_extended_sys_state.h	/^static inline uint16_t mavlink_msg_extended_sys_state_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_extended_sys_state_pack_chan	common/mavlink_msg_extended_sys_state.h	/^static inline uint16_t mavlink_msg_extended_sys_state_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_extended_sys_state_send	common/mavlink_msg_extended_sys_state.h	/^static inline void mavlink_msg_extended_sys_state_send(mavlink_channel_t chan, uint8_t vtol_state, uint8_t landed_state)$/;"	f
mavlink_msg_extended_sys_state_send_buf	common/mavlink_msg_extended_sys_state.h	/^static inline void mavlink_msg_extended_sys_state_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t vtol_state, uint8_t landed_state)$/;"	f
mavlink_msg_extended_sys_state_send_struct	common/mavlink_msg_extended_sys_state.h	/^static inline void mavlink_msg_extended_sys_state_send_struct(mavlink_channel_t chan, const mavlink_extended_sys_state_t* extended_sys_state)$/;"	f
mavlink_msg_file_transfer_protocol_decode	common/mavlink_msg_file_transfer_protocol.h	/^static inline void mavlink_msg_file_transfer_protocol_decode(const mavlink_message_t* msg, mavlink_file_transfer_protocol_t* file_transfer_protocol)$/;"	f
mavlink_msg_file_transfer_protocol_encode	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint16_t mavlink_msg_file_transfer_protocol_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_file_transfer_protocol_t* file_transfer_protocol)$/;"	f
mavlink_msg_file_transfer_protocol_encode_chan	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint16_t mavlink_msg_file_transfer_protocol_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_file_transfer_protocol_t* file_transfer_protocol)$/;"	f
mavlink_msg_file_transfer_protocol_get_payload	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint16_t mavlink_msg_file_transfer_protocol_get_payload(const mavlink_message_t* msg, uint8_t *payload)$/;"	f
mavlink_msg_file_transfer_protocol_get_target_component	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint8_t mavlink_msg_file_transfer_protocol_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_protocol_get_target_network	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint8_t mavlink_msg_file_transfer_protocol_get_target_network(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_protocol_get_target_system	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint8_t mavlink_msg_file_transfer_protocol_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_file_transfer_protocol_pack	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint16_t mavlink_msg_file_transfer_protocol_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_file_transfer_protocol_pack_chan	common/mavlink_msg_file_transfer_protocol.h	/^static inline uint16_t mavlink_msg_file_transfer_protocol_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_file_transfer_protocol_send	common/mavlink_msg_file_transfer_protocol.h	/^static inline void mavlink_msg_file_transfer_protocol_send(mavlink_channel_t chan, uint8_t target_network, uint8_t target_system, uint8_t target_component, const uint8_t *payload)$/;"	f
mavlink_msg_file_transfer_protocol_send_buf	common/mavlink_msg_file_transfer_protocol.h	/^static inline void mavlink_msg_file_transfer_protocol_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_network, uint8_t target_system, uint8_t target_component, const uint8_t *payload)$/;"	f
mavlink_msg_file_transfer_protocol_send_struct	common/mavlink_msg_file_transfer_protocol.h	/^static inline void mavlink_msg_file_transfer_protocol_send_struct(mavlink_channel_t chan, const mavlink_file_transfer_protocol_t* file_transfer_protocol)$/;"	f
mavlink_msg_follow_target_decode	common/mavlink_msg_follow_target.h	/^static inline void mavlink_msg_follow_target_decode(const mavlink_message_t* msg, mavlink_follow_target_t* follow_target)$/;"	f
mavlink_msg_follow_target_encode	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_follow_target_t* follow_target)$/;"	f
mavlink_msg_follow_target_encode_chan	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_follow_target_t* follow_target)$/;"	f
mavlink_msg_follow_target_get_acc	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_get_acc(const mavlink_message_t* msg, float *acc)$/;"	f
mavlink_msg_follow_target_get_alt	common/mavlink_msg_follow_target.h	/^static inline float mavlink_msg_follow_target_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_follow_target_get_attitude_q	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_get_attitude_q(const mavlink_message_t* msg, float *attitude_q)$/;"	f
mavlink_msg_follow_target_get_custom_state	common/mavlink_msg_follow_target.h	/^static inline uint64_t mavlink_msg_follow_target_get_custom_state(const mavlink_message_t* msg)$/;"	f
mavlink_msg_follow_target_get_est_capabilities	common/mavlink_msg_follow_target.h	/^static inline uint8_t mavlink_msg_follow_target_get_est_capabilities(const mavlink_message_t* msg)$/;"	f
mavlink_msg_follow_target_get_lat	common/mavlink_msg_follow_target.h	/^static inline int32_t mavlink_msg_follow_target_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_follow_target_get_lon	common/mavlink_msg_follow_target.h	/^static inline int32_t mavlink_msg_follow_target_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_follow_target_get_position_cov	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_get_position_cov(const mavlink_message_t* msg, float *position_cov)$/;"	f
mavlink_msg_follow_target_get_rates	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_get_rates(const mavlink_message_t* msg, float *rates)$/;"	f
mavlink_msg_follow_target_get_timestamp	common/mavlink_msg_follow_target.h	/^static inline uint64_t mavlink_msg_follow_target_get_timestamp(const mavlink_message_t* msg)$/;"	f
mavlink_msg_follow_target_get_vel	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_get_vel(const mavlink_message_t* msg, float *vel)$/;"	f
mavlink_msg_follow_target_pack	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_follow_target_pack_chan	common/mavlink_msg_follow_target.h	/^static inline uint16_t mavlink_msg_follow_target_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_follow_target_send	common/mavlink_msg_follow_target.h	/^static inline void mavlink_msg_follow_target_send(mavlink_channel_t chan, uint64_t timestamp, uint8_t est_capabilities, int32_t lat, int32_t lon, float alt, const float *vel, const float *acc, const float *attitude_q, const float *rates, const float *position_cov, uint64_t custom_state)$/;"	f
mavlink_msg_follow_target_send_buf	common/mavlink_msg_follow_target.h	/^static inline void mavlink_msg_follow_target_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t timestamp, uint8_t est_capabilities, int32_t lat, int32_t lon, float alt, const float *vel, const float *acc, const float *attitude_q, const float *rates, const float *position_cov, uint64_t custom_state)$/;"	f
mavlink_msg_follow_target_send_struct	common/mavlink_msg_follow_target.h	/^static inline void mavlink_msg_follow_target_send_struct(mavlink_channel_t chan, const mavlink_follow_target_t* follow_target)$/;"	f
mavlink_msg_get_send_buffer_length	protocol.h	/^static inline uint16_t mavlink_msg_get_send_buffer_length(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_decode	common/mavlink_msg_global_position_int_cov.h	/^static inline void mavlink_msg_global_position_int_cov_decode(const mavlink_message_t* msg, mavlink_global_position_int_cov_t* global_position_int_cov)$/;"	f
mavlink_msg_global_position_int_cov_encode	common/mavlink_msg_global_position_int_cov.h	/^static inline uint16_t mavlink_msg_global_position_int_cov_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_global_position_int_cov_t* global_position_int_cov)$/;"	f
mavlink_msg_global_position_int_cov_encode_chan	common/mavlink_msg_global_position_int_cov.h	/^static inline uint16_t mavlink_msg_global_position_int_cov_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_global_position_int_cov_t* global_position_int_cov)$/;"	f
mavlink_msg_global_position_int_cov_get_alt	common/mavlink_msg_global_position_int_cov.h	/^static inline int32_t mavlink_msg_global_position_int_cov_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_covariance	common/mavlink_msg_global_position_int_cov.h	/^static inline uint16_t mavlink_msg_global_position_int_cov_get_covariance(const mavlink_message_t* msg, float *covariance)$/;"	f
mavlink_msg_global_position_int_cov_get_estimator_type	common/mavlink_msg_global_position_int_cov.h	/^static inline uint8_t mavlink_msg_global_position_int_cov_get_estimator_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_lat	common/mavlink_msg_global_position_int_cov.h	/^static inline int32_t mavlink_msg_global_position_int_cov_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_lon	common/mavlink_msg_global_position_int_cov.h	/^static inline int32_t mavlink_msg_global_position_int_cov_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_relative_alt	common/mavlink_msg_global_position_int_cov.h	/^static inline int32_t mavlink_msg_global_position_int_cov_get_relative_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_time_boot_ms	common/mavlink_msg_global_position_int_cov.h	/^static inline uint32_t mavlink_msg_global_position_int_cov_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_time_utc	common/mavlink_msg_global_position_int_cov.h	/^static inline uint64_t mavlink_msg_global_position_int_cov_get_time_utc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_vx	common/mavlink_msg_global_position_int_cov.h	/^static inline float mavlink_msg_global_position_int_cov_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_vy	common/mavlink_msg_global_position_int_cov.h	/^static inline float mavlink_msg_global_position_int_cov_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_get_vz	common/mavlink_msg_global_position_int_cov.h	/^static inline float mavlink_msg_global_position_int_cov_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_cov_pack	common/mavlink_msg_global_position_int_cov.h	/^static inline uint16_t mavlink_msg_global_position_int_cov_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_global_position_int_cov_pack_chan	common/mavlink_msg_global_position_int_cov.h	/^static inline uint16_t mavlink_msg_global_position_int_cov_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_global_position_int_cov_send	common/mavlink_msg_global_position_int_cov.h	/^static inline void mavlink_msg_global_position_int_cov_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint64_t time_utc, uint8_t estimator_type, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, float vx, float vy, float vz, const float *covariance)$/;"	f
mavlink_msg_global_position_int_cov_send_buf	common/mavlink_msg_global_position_int_cov.h	/^static inline void mavlink_msg_global_position_int_cov_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint64_t time_utc, uint8_t estimator_type, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, float vx, float vy, float vz, const float *covariance)$/;"	f
mavlink_msg_global_position_int_cov_send_struct	common/mavlink_msg_global_position_int_cov.h	/^static inline void mavlink_msg_global_position_int_cov_send_struct(mavlink_channel_t chan, const mavlink_global_position_int_cov_t* global_position_int_cov)$/;"	f
mavlink_msg_global_position_int_decode	common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_decode(const mavlink_message_t* msg, mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_position_int_encode	common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_position_int_encode_chan	common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_position_int_get_alt	common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_hdg	common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_get_hdg(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_lat	common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_lon	common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_relative_alt	common/mavlink_msg_global_position_int.h	/^static inline int32_t mavlink_msg_global_position_int_get_relative_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_time_boot_ms	common/mavlink_msg_global_position_int.h	/^static inline uint32_t mavlink_msg_global_position_int_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_vx	common/mavlink_msg_global_position_int.h	/^static inline int16_t mavlink_msg_global_position_int_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_vy	common/mavlink_msg_global_position_int.h	/^static inline int16_t mavlink_msg_global_position_int_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_get_vz	common/mavlink_msg_global_position_int.h	/^static inline int16_t mavlink_msg_global_position_int_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_position_int_pack	common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_global_position_int_pack_chan	common/mavlink_msg_global_position_int.h	/^static inline uint16_t mavlink_msg_global_position_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_global_position_int_send	common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_send(mavlink_channel_t chan, uint32_t time_boot_ms, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, int16_t vx, int16_t vy, int16_t vz, uint16_t hdg)$/;"	f
mavlink_msg_global_position_int_send_buf	common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, int32_t lat, int32_t lon, int32_t alt, int32_t relative_alt, int16_t vx, int16_t vy, int16_t vz, uint16_t hdg)$/;"	f
mavlink_msg_global_position_int_send_struct	common/mavlink_msg_global_position_int.h	/^static inline void mavlink_msg_global_position_int_send_struct(mavlink_channel_t chan, const mavlink_global_position_int_t* global_position_int)$/;"	f
mavlink_msg_global_vision_position_estimate_decode	common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_decode(const mavlink_message_t* msg, mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_global_vision_position_estimate_encode	common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_global_vision_position_estimate_encode_chan	common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_global_vision_position_estimate_get_pitch	common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_roll	common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_usec	common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint64_t mavlink_msg_global_vision_position_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_x	common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_y	common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_yaw	common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_get_z	common/mavlink_msg_global_vision_position_estimate.h	/^static inline float mavlink_msg_global_vision_position_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_global_vision_position_estimate_pack	common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_global_vision_position_estimate_pack_chan	common/mavlink_msg_global_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_global_vision_position_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_global_vision_position_estimate_send	common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_global_vision_position_estimate_send_buf	common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_global_vision_position_estimate_send_struct	common/mavlink_msg_global_vision_position_estimate.h	/^static inline void mavlink_msg_global_vision_position_estimate_send_struct(mavlink_channel_t chan, const mavlink_global_vision_position_estimate_t* global_vision_position_estimate)$/;"	f
mavlink_msg_gps2_raw_decode	common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_decode(const mavlink_message_t* msg, mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_raw_encode	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_raw_encode_chan	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_raw_get_alt	common/mavlink_msg_gps2_raw.h	/^static inline int32_t mavlink_msg_gps2_raw_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_cog	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_cog(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_dgps_age	common/mavlink_msg_gps2_raw.h	/^static inline uint32_t mavlink_msg_gps2_raw_get_dgps_age(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_dgps_numch	common/mavlink_msg_gps2_raw.h	/^static inline uint8_t mavlink_msg_gps2_raw_get_dgps_numch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_eph	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_eph(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_epv	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_epv(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_fix_type	common/mavlink_msg_gps2_raw.h	/^static inline uint8_t mavlink_msg_gps2_raw_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_lat	common/mavlink_msg_gps2_raw.h	/^static inline int32_t mavlink_msg_gps2_raw_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_lon	common/mavlink_msg_gps2_raw.h	/^static inline int32_t mavlink_msg_gps2_raw_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_satellites_visible	common/mavlink_msg_gps2_raw.h	/^static inline uint8_t mavlink_msg_gps2_raw_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_time_usec	common/mavlink_msg_gps2_raw.h	/^static inline uint64_t mavlink_msg_gps2_raw_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_get_vel	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_get_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_raw_pack	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps2_raw_pack_chan	common/mavlink_msg_gps2_raw.h	/^static inline uint16_t mavlink_msg_gps2_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps2_raw_send	common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible, uint8_t dgps_numch, uint32_t dgps_age)$/;"	f
mavlink_msg_gps2_raw_send_buf	common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible, uint8_t dgps_numch, uint32_t dgps_age)$/;"	f
mavlink_msg_gps2_raw_send_struct	common/mavlink_msg_gps2_raw.h	/^static inline void mavlink_msg_gps2_raw_send_struct(mavlink_channel_t chan, const mavlink_gps2_raw_t* gps2_raw)$/;"	f
mavlink_msg_gps2_rtk_decode	common/mavlink_msg_gps2_rtk.h	/^static inline void mavlink_msg_gps2_rtk_decode(const mavlink_message_t* msg, mavlink_gps2_rtk_t* gps2_rtk)$/;"	f
mavlink_msg_gps2_rtk_encode	common/mavlink_msg_gps2_rtk.h	/^static inline uint16_t mavlink_msg_gps2_rtk_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps2_rtk_t* gps2_rtk)$/;"	f
mavlink_msg_gps2_rtk_encode_chan	common/mavlink_msg_gps2_rtk.h	/^static inline uint16_t mavlink_msg_gps2_rtk_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps2_rtk_t* gps2_rtk)$/;"	f
mavlink_msg_gps2_rtk_get_accuracy	common/mavlink_msg_gps2_rtk.h	/^static inline uint32_t mavlink_msg_gps2_rtk_get_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_baseline_a_mm	common/mavlink_msg_gps2_rtk.h	/^static inline int32_t mavlink_msg_gps2_rtk_get_baseline_a_mm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_baseline_b_mm	common/mavlink_msg_gps2_rtk.h	/^static inline int32_t mavlink_msg_gps2_rtk_get_baseline_b_mm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_baseline_c_mm	common/mavlink_msg_gps2_rtk.h	/^static inline int32_t mavlink_msg_gps2_rtk_get_baseline_c_mm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_baseline_coords_type	common/mavlink_msg_gps2_rtk.h	/^static inline uint8_t mavlink_msg_gps2_rtk_get_baseline_coords_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_iar_num_hypotheses	common/mavlink_msg_gps2_rtk.h	/^static inline int32_t mavlink_msg_gps2_rtk_get_iar_num_hypotheses(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_nsats	common/mavlink_msg_gps2_rtk.h	/^static inline uint8_t mavlink_msg_gps2_rtk_get_nsats(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_rtk_health	common/mavlink_msg_gps2_rtk.h	/^static inline uint8_t mavlink_msg_gps2_rtk_get_rtk_health(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_rtk_rate	common/mavlink_msg_gps2_rtk.h	/^static inline uint8_t mavlink_msg_gps2_rtk_get_rtk_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_rtk_receiver_id	common/mavlink_msg_gps2_rtk.h	/^static inline uint8_t mavlink_msg_gps2_rtk_get_rtk_receiver_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_time_last_baseline_ms	common/mavlink_msg_gps2_rtk.h	/^static inline uint32_t mavlink_msg_gps2_rtk_get_time_last_baseline_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_tow	common/mavlink_msg_gps2_rtk.h	/^static inline uint32_t mavlink_msg_gps2_rtk_get_tow(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_get_wn	common/mavlink_msg_gps2_rtk.h	/^static inline uint16_t mavlink_msg_gps2_rtk_get_wn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps2_rtk_pack	common/mavlink_msg_gps2_rtk.h	/^static inline uint16_t mavlink_msg_gps2_rtk_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps2_rtk_pack_chan	common/mavlink_msg_gps2_rtk.h	/^static inline uint16_t mavlink_msg_gps2_rtk_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps2_rtk_send	common/mavlink_msg_gps2_rtk.h	/^static inline void mavlink_msg_gps2_rtk_send(mavlink_channel_t chan, uint32_t time_last_baseline_ms, uint8_t rtk_receiver_id, uint16_t wn, uint32_t tow, uint8_t rtk_health, uint8_t rtk_rate, uint8_t nsats, uint8_t baseline_coords_type, int32_t baseline_a_mm, int32_t baseline_b_mm, int32_t baseline_c_mm, uint32_t accuracy, int32_t iar_num_hypotheses)$/;"	f
mavlink_msg_gps2_rtk_send_buf	common/mavlink_msg_gps2_rtk.h	/^static inline void mavlink_msg_gps2_rtk_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_last_baseline_ms, uint8_t rtk_receiver_id, uint16_t wn, uint32_t tow, uint8_t rtk_health, uint8_t rtk_rate, uint8_t nsats, uint8_t baseline_coords_type, int32_t baseline_a_mm, int32_t baseline_b_mm, int32_t baseline_c_mm, uint32_t accuracy, int32_t iar_num_hypotheses)$/;"	f
mavlink_msg_gps2_rtk_send_struct	common/mavlink_msg_gps2_rtk.h	/^static inline void mavlink_msg_gps2_rtk_send_struct(mavlink_channel_t chan, const mavlink_gps2_rtk_t* gps2_rtk)$/;"	f
mavlink_msg_gps_global_origin_decode	common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_decode(const mavlink_message_t* msg, mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_global_origin_encode	common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_global_origin_encode_chan	common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_global_origin_get_altitude	common/mavlink_msg_gps_global_origin.h	/^static inline int32_t mavlink_msg_gps_global_origin_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_global_origin_get_latitude	common/mavlink_msg_gps_global_origin.h	/^static inline int32_t mavlink_msg_gps_global_origin_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_global_origin_get_longitude	common/mavlink_msg_gps_global_origin.h	/^static inline int32_t mavlink_msg_gps_global_origin_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_global_origin_pack	common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_global_origin_pack_chan	common/mavlink_msg_gps_global_origin.h	/^static inline uint16_t mavlink_msg_gps_global_origin_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_global_origin_send	common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_send(mavlink_channel_t chan, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_gps_global_origin_send_buf	common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_gps_global_origin_send_struct	common/mavlink_msg_gps_global_origin.h	/^static inline void mavlink_msg_gps_global_origin_send_struct(mavlink_channel_t chan, const mavlink_gps_global_origin_t* gps_global_origin)$/;"	f
mavlink_msg_gps_inject_data_decode	common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_decode(const mavlink_message_t* msg, mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_inject_data_encode	common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_inject_data_encode_chan	common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_inject_data_get_data	common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_get_len	common/mavlink_msg_gps_inject_data.h	/^static inline uint8_t mavlink_msg_gps_inject_data_get_len(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_inject_data_get_target_component	common/mavlink_msg_gps_inject_data.h	/^static inline uint8_t mavlink_msg_gps_inject_data_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_inject_data_get_target_system	common/mavlink_msg_gps_inject_data.h	/^static inline uint8_t mavlink_msg_gps_inject_data_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_inject_data_pack	common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_inject_data_pack_chan	common/mavlink_msg_gps_inject_data.h	/^static inline uint16_t mavlink_msg_gps_inject_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_inject_data_send	common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_send_buf	common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_inject_data_send_struct	common/mavlink_msg_gps_inject_data.h	/^static inline void mavlink_msg_gps_inject_data_send_struct(mavlink_channel_t chan, const mavlink_gps_inject_data_t* gps_inject_data)$/;"	f
mavlink_msg_gps_input_decode	common/mavlink_msg_gps_input.h	/^static inline void mavlink_msg_gps_input_decode(const mavlink_message_t* msg, mavlink_gps_input_t* gps_input)$/;"	f
mavlink_msg_gps_input_encode	common/mavlink_msg_gps_input.h	/^static inline uint16_t mavlink_msg_gps_input_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_input_t* gps_input)$/;"	f
mavlink_msg_gps_input_encode_chan	common/mavlink_msg_gps_input.h	/^static inline uint16_t mavlink_msg_gps_input_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_input_t* gps_input)$/;"	f
mavlink_msg_gps_input_get_alt	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_fix_type	common/mavlink_msg_gps_input.h	/^static inline uint8_t mavlink_msg_gps_input_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_gps_id	common/mavlink_msg_gps_input.h	/^static inline uint8_t mavlink_msg_gps_input_get_gps_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_hdop	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_hdop(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_horiz_accuracy	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_horiz_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_ignore_flags	common/mavlink_msg_gps_input.h	/^static inline uint16_t mavlink_msg_gps_input_get_ignore_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_lat	common/mavlink_msg_gps_input.h	/^static inline int32_t mavlink_msg_gps_input_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_lon	common/mavlink_msg_gps_input.h	/^static inline int32_t mavlink_msg_gps_input_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_satellites_visible	common/mavlink_msg_gps_input.h	/^static inline uint8_t mavlink_msg_gps_input_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_speed_accuracy	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_speed_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_time_usec	common/mavlink_msg_gps_input.h	/^static inline uint64_t mavlink_msg_gps_input_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_time_week	common/mavlink_msg_gps_input.h	/^static inline uint16_t mavlink_msg_gps_input_get_time_week(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_time_week_ms	common/mavlink_msg_gps_input.h	/^static inline uint32_t mavlink_msg_gps_input_get_time_week_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_vd	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_vd(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_vdop	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_vdop(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_ve	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_ve(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_vert_accuracy	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_vert_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_get_vn	common/mavlink_msg_gps_input.h	/^static inline float mavlink_msg_gps_input_get_vn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_input_pack	common/mavlink_msg_gps_input.h	/^static inline uint16_t mavlink_msg_gps_input_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_input_pack_chan	common/mavlink_msg_gps_input.h	/^static inline uint16_t mavlink_msg_gps_input_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_input_send	common/mavlink_msg_gps_input.h	/^static inline void mavlink_msg_gps_input_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t gps_id, uint16_t ignore_flags, uint32_t time_week_ms, uint16_t time_week, uint8_t fix_type, int32_t lat, int32_t lon, float alt, float hdop, float vdop, float vn, float ve, float vd, float speed_accuracy, float horiz_accuracy, float vert_accuracy, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_input_send_buf	common/mavlink_msg_gps_input.h	/^static inline void mavlink_msg_gps_input_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t gps_id, uint16_t ignore_flags, uint32_t time_week_ms, uint16_t time_week, uint8_t fix_type, int32_t lat, int32_t lon, float alt, float hdop, float vdop, float vn, float ve, float vd, float speed_accuracy, float horiz_accuracy, float vert_accuracy, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_input_send_struct	common/mavlink_msg_gps_input.h	/^static inline void mavlink_msg_gps_input_send_struct(mavlink_channel_t chan, const mavlink_gps_input_t* gps_input)$/;"	f
mavlink_msg_gps_raw_int_decode	common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_decode(const mavlink_message_t* msg, mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_raw_int_encode	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_raw_int_encode_chan	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_raw_int_get_alt	common/mavlink_msg_gps_raw_int.h	/^static inline int32_t mavlink_msg_gps_raw_int_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_cog	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_cog(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_eph	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_eph(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_epv	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_epv(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_fix_type	common/mavlink_msg_gps_raw_int.h	/^static inline uint8_t mavlink_msg_gps_raw_int_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_lat	common/mavlink_msg_gps_raw_int.h	/^static inline int32_t mavlink_msg_gps_raw_int_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_lon	common/mavlink_msg_gps_raw_int.h	/^static inline int32_t mavlink_msg_gps_raw_int_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_satellites_visible	common/mavlink_msg_gps_raw_int.h	/^static inline uint8_t mavlink_msg_gps_raw_int_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_time_usec	common/mavlink_msg_gps_raw_int.h	/^static inline uint64_t mavlink_msg_gps_raw_int_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_get_vel	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_get_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_raw_int_pack	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_raw_int_pack_chan	common/mavlink_msg_gps_raw_int.h	/^static inline uint16_t mavlink_msg_gps_raw_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_raw_int_send	common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_raw_int_send_buf	common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_gps_raw_int_send_struct	common/mavlink_msg_gps_raw_int.h	/^static inline void mavlink_msg_gps_raw_int_send_struct(mavlink_channel_t chan, const mavlink_gps_raw_int_t* gps_raw_int)$/;"	f
mavlink_msg_gps_rtcm_data_decode	common/mavlink_msg_gps_rtcm_data.h	/^static inline void mavlink_msg_gps_rtcm_data_decode(const mavlink_message_t* msg, mavlink_gps_rtcm_data_t* gps_rtcm_data)$/;"	f
mavlink_msg_gps_rtcm_data_encode	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint16_t mavlink_msg_gps_rtcm_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_rtcm_data_t* gps_rtcm_data)$/;"	f
mavlink_msg_gps_rtcm_data_encode_chan	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint16_t mavlink_msg_gps_rtcm_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_rtcm_data_t* gps_rtcm_data)$/;"	f
mavlink_msg_gps_rtcm_data_get_data	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint16_t mavlink_msg_gps_rtcm_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_gps_rtcm_data_get_flags	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint8_t mavlink_msg_gps_rtcm_data_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtcm_data_get_len	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint8_t mavlink_msg_gps_rtcm_data_get_len(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtcm_data_pack	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint16_t mavlink_msg_gps_rtcm_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_rtcm_data_pack_chan	common/mavlink_msg_gps_rtcm_data.h	/^static inline uint16_t mavlink_msg_gps_rtcm_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_rtcm_data_send	common/mavlink_msg_gps_rtcm_data.h	/^static inline void mavlink_msg_gps_rtcm_data_send(mavlink_channel_t chan, uint8_t flags, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_rtcm_data_send_buf	common/mavlink_msg_gps_rtcm_data.h	/^static inline void mavlink_msg_gps_rtcm_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t flags, uint8_t len, const uint8_t *data)$/;"	f
mavlink_msg_gps_rtcm_data_send_struct	common/mavlink_msg_gps_rtcm_data.h	/^static inline void mavlink_msg_gps_rtcm_data_send_struct(mavlink_channel_t chan, const mavlink_gps_rtcm_data_t* gps_rtcm_data)$/;"	f
mavlink_msg_gps_rtk_decode	common/mavlink_msg_gps_rtk.h	/^static inline void mavlink_msg_gps_rtk_decode(const mavlink_message_t* msg, mavlink_gps_rtk_t* gps_rtk)$/;"	f
mavlink_msg_gps_rtk_encode	common/mavlink_msg_gps_rtk.h	/^static inline uint16_t mavlink_msg_gps_rtk_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_rtk_t* gps_rtk)$/;"	f
mavlink_msg_gps_rtk_encode_chan	common/mavlink_msg_gps_rtk.h	/^static inline uint16_t mavlink_msg_gps_rtk_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_rtk_t* gps_rtk)$/;"	f
mavlink_msg_gps_rtk_get_accuracy	common/mavlink_msg_gps_rtk.h	/^static inline uint32_t mavlink_msg_gps_rtk_get_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_baseline_a_mm	common/mavlink_msg_gps_rtk.h	/^static inline int32_t mavlink_msg_gps_rtk_get_baseline_a_mm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_baseline_b_mm	common/mavlink_msg_gps_rtk.h	/^static inline int32_t mavlink_msg_gps_rtk_get_baseline_b_mm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_baseline_c_mm	common/mavlink_msg_gps_rtk.h	/^static inline int32_t mavlink_msg_gps_rtk_get_baseline_c_mm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_baseline_coords_type	common/mavlink_msg_gps_rtk.h	/^static inline uint8_t mavlink_msg_gps_rtk_get_baseline_coords_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_iar_num_hypotheses	common/mavlink_msg_gps_rtk.h	/^static inline int32_t mavlink_msg_gps_rtk_get_iar_num_hypotheses(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_nsats	common/mavlink_msg_gps_rtk.h	/^static inline uint8_t mavlink_msg_gps_rtk_get_nsats(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_rtk_health	common/mavlink_msg_gps_rtk.h	/^static inline uint8_t mavlink_msg_gps_rtk_get_rtk_health(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_rtk_rate	common/mavlink_msg_gps_rtk.h	/^static inline uint8_t mavlink_msg_gps_rtk_get_rtk_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_rtk_receiver_id	common/mavlink_msg_gps_rtk.h	/^static inline uint8_t mavlink_msg_gps_rtk_get_rtk_receiver_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_time_last_baseline_ms	common/mavlink_msg_gps_rtk.h	/^static inline uint32_t mavlink_msg_gps_rtk_get_time_last_baseline_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_tow	common/mavlink_msg_gps_rtk.h	/^static inline uint32_t mavlink_msg_gps_rtk_get_tow(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_get_wn	common/mavlink_msg_gps_rtk.h	/^static inline uint16_t mavlink_msg_gps_rtk_get_wn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_rtk_pack	common/mavlink_msg_gps_rtk.h	/^static inline uint16_t mavlink_msg_gps_rtk_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_rtk_pack_chan	common/mavlink_msg_gps_rtk.h	/^static inline uint16_t mavlink_msg_gps_rtk_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_rtk_send	common/mavlink_msg_gps_rtk.h	/^static inline void mavlink_msg_gps_rtk_send(mavlink_channel_t chan, uint32_t time_last_baseline_ms, uint8_t rtk_receiver_id, uint16_t wn, uint32_t tow, uint8_t rtk_health, uint8_t rtk_rate, uint8_t nsats, uint8_t baseline_coords_type, int32_t baseline_a_mm, int32_t baseline_b_mm, int32_t baseline_c_mm, uint32_t accuracy, int32_t iar_num_hypotheses)$/;"	f
mavlink_msg_gps_rtk_send_buf	common/mavlink_msg_gps_rtk.h	/^static inline void mavlink_msg_gps_rtk_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_last_baseline_ms, uint8_t rtk_receiver_id, uint16_t wn, uint32_t tow, uint8_t rtk_health, uint8_t rtk_rate, uint8_t nsats, uint8_t baseline_coords_type, int32_t baseline_a_mm, int32_t baseline_b_mm, int32_t baseline_c_mm, uint32_t accuracy, int32_t iar_num_hypotheses)$/;"	f
mavlink_msg_gps_rtk_send_struct	common/mavlink_msg_gps_rtk.h	/^static inline void mavlink_msg_gps_rtk_send_struct(mavlink_channel_t chan, const mavlink_gps_rtk_t* gps_rtk)$/;"	f
mavlink_msg_gps_status_decode	common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_decode(const mavlink_message_t* msg, mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_gps_status_encode	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_gps_status_encode_chan	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_gps_status_get_satellite_azimuth	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_azimuth(const mavlink_message_t* msg, uint8_t *satellite_azimuth)$/;"	f
mavlink_msg_gps_status_get_satellite_elevation	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_elevation(const mavlink_message_t* msg, uint8_t *satellite_elevation)$/;"	f
mavlink_msg_gps_status_get_satellite_prn	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_prn(const mavlink_message_t* msg, uint8_t *satellite_prn)$/;"	f
mavlink_msg_gps_status_get_satellite_snr	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_snr(const mavlink_message_t* msg, uint8_t *satellite_snr)$/;"	f
mavlink_msg_gps_status_get_satellite_used	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_get_satellite_used(const mavlink_message_t* msg, uint8_t *satellite_used)$/;"	f
mavlink_msg_gps_status_get_satellites_visible	common/mavlink_msg_gps_status.h	/^static inline uint8_t mavlink_msg_gps_status_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_gps_status_pack	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_gps_status_pack_chan	common/mavlink_msg_gps_status.h	/^static inline uint16_t mavlink_msg_gps_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_gps_status_send	common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_send(mavlink_channel_t chan, uint8_t satellites_visible, const uint8_t *satellite_prn, const uint8_t *satellite_used, const uint8_t *satellite_elevation, const uint8_t *satellite_azimuth, const uint8_t *satellite_snr)$/;"	f
mavlink_msg_gps_status_send_buf	common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t satellites_visible, const uint8_t *satellite_prn, const uint8_t *satellite_used, const uint8_t *satellite_elevation, const uint8_t *satellite_azimuth, const uint8_t *satellite_snr)$/;"	f
mavlink_msg_gps_status_send_struct	common/mavlink_msg_gps_status.h	/^static inline void mavlink_msg_gps_status_send_struct(mavlink_channel_t chan, const mavlink_gps_status_t* gps_status)$/;"	f
mavlink_msg_heartbeat_decode	common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_decode(const mavlink_message_t* msg, mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_heartbeat_encode	common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_heartbeat_encode_chan	common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_heartbeat_get_autopilot	common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_autopilot(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_base_mode	common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_base_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_custom_mode	common/mavlink_msg_heartbeat.h	/^static inline uint32_t mavlink_msg_heartbeat_get_custom_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_mavlink_version	common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_mavlink_version(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_system_status	common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_system_status(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_get_type	common/mavlink_msg_heartbeat.h	/^static inline uint8_t mavlink_msg_heartbeat_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_heartbeat_pack	common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_heartbeat_pack_chan	common/mavlink_msg_heartbeat.h	/^static inline uint16_t mavlink_msg_heartbeat_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_heartbeat_send	common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_send(mavlink_channel_t chan, uint8_t type, uint8_t autopilot, uint8_t base_mode, uint32_t custom_mode, uint8_t system_status)$/;"	f
mavlink_msg_heartbeat_send_buf	common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t type, uint8_t autopilot, uint8_t base_mode, uint32_t custom_mode, uint8_t system_status)$/;"	f
mavlink_msg_heartbeat_send_struct	common/mavlink_msg_heartbeat.h	/^static inline void mavlink_msg_heartbeat_send_struct(mavlink_channel_t chan, const mavlink_heartbeat_t* heartbeat)$/;"	f
mavlink_msg_highres_imu_decode	common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_decode(const mavlink_message_t* msg, mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_highres_imu_encode	common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_highres_imu_encode_chan	common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_highres_imu_get_abs_pressure	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_abs_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_diff_pressure	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_diff_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_fields_updated	common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_get_fields_updated(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_pressure_alt	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_pressure_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_temperature	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_time_usec	common/mavlink_msg_highres_imu.h	/^static inline uint64_t mavlink_msg_highres_imu_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_xacc	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_xgyro	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_xmag	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_yacc	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_ygyro	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_ymag	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_zacc	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_zgyro	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_get_zmag	common/mavlink_msg_highres_imu.h	/^static inline float mavlink_msg_highres_imu_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_highres_imu_pack	common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_highres_imu_pack_chan	common/mavlink_msg_highres_imu.h	/^static inline uint16_t mavlink_msg_highres_imu_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_highres_imu_send	common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_send(mavlink_channel_t chan, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint16_t fields_updated)$/;"	f
mavlink_msg_highres_imu_send_buf	common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint16_t fields_updated)$/;"	f
mavlink_msg_highres_imu_send_struct	common/mavlink_msg_highres_imu.h	/^static inline void mavlink_msg_highres_imu_send_struct(mavlink_channel_t chan, const mavlink_highres_imu_t* highres_imu)$/;"	f
mavlink_msg_hil_controls_decode	common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_decode(const mavlink_message_t* msg, mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_controls_encode	common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_controls_encode_chan	common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_controls_get_aux1	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_aux2	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_aux3	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_aux4	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_aux4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_mode	common/mavlink_msg_hil_controls.h	/^static inline uint8_t mavlink_msg_hil_controls_get_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_nav_mode	common/mavlink_msg_hil_controls.h	/^static inline uint8_t mavlink_msg_hil_controls_get_nav_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_pitch_elevator	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_pitch_elevator(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_roll_ailerons	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_roll_ailerons(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_throttle	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_throttle(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_time_usec	common/mavlink_msg_hil_controls.h	/^static inline uint64_t mavlink_msg_hil_controls_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_get_yaw_rudder	common/mavlink_msg_hil_controls.h	/^static inline float mavlink_msg_hil_controls_get_yaw_rudder(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_controls_pack	common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_controls_pack_chan	common/mavlink_msg_hil_controls.h	/^static inline uint16_t mavlink_msg_hil_controls_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_controls_send	common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_send(mavlink_channel_t chan, uint64_t time_usec, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3, float aux4, uint8_t mode, uint8_t nav_mode)$/;"	f
mavlink_msg_hil_controls_send_buf	common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float roll_ailerons, float pitch_elevator, float yaw_rudder, float throttle, float aux1, float aux2, float aux3, float aux4, uint8_t mode, uint8_t nav_mode)$/;"	f
mavlink_msg_hil_controls_send_struct	common/mavlink_msg_hil_controls.h	/^static inline void mavlink_msg_hil_controls_send_struct(mavlink_channel_t chan, const mavlink_hil_controls_t* hil_controls)$/;"	f
mavlink_msg_hil_gps_decode	common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_decode(const mavlink_message_t* msg, mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_gps_encode	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_gps_encode_chan	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_gps_get_alt	common/mavlink_msg_hil_gps.h	/^static inline int32_t mavlink_msg_hil_gps_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_cog	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_cog(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_eph	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_eph(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_epv	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_epv(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_fix_type	common/mavlink_msg_hil_gps.h	/^static inline uint8_t mavlink_msg_hil_gps_get_fix_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_lat	common/mavlink_msg_hil_gps.h	/^static inline int32_t mavlink_msg_hil_gps_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_lon	common/mavlink_msg_hil_gps.h	/^static inline int32_t mavlink_msg_hil_gps_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_satellites_visible	common/mavlink_msg_hil_gps.h	/^static inline uint8_t mavlink_msg_hil_gps_get_satellites_visible(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_time_usec	common/mavlink_msg_hil_gps.h	/^static inline uint64_t mavlink_msg_hil_gps_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_vd	common/mavlink_msg_hil_gps.h	/^static inline int16_t mavlink_msg_hil_gps_get_vd(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_ve	common/mavlink_msg_hil_gps.h	/^static inline int16_t mavlink_msg_hil_gps_get_ve(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_vel	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_get_vel(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_get_vn	common/mavlink_msg_hil_gps.h	/^static inline int16_t mavlink_msg_hil_gps_get_vn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_gps_pack	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_gps_pack_chan	common/mavlink_msg_hil_gps.h	/^static inline uint16_t mavlink_msg_hil_gps_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_gps_send	common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, int16_t vn, int16_t ve, int16_t vd, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_hil_gps_send_buf	common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t fix_type, int32_t lat, int32_t lon, int32_t alt, uint16_t eph, uint16_t epv, uint16_t vel, int16_t vn, int16_t ve, int16_t vd, uint16_t cog, uint8_t satellites_visible)$/;"	f
mavlink_msg_hil_gps_send_struct	common/mavlink_msg_hil_gps.h	/^static inline void mavlink_msg_hil_gps_send_struct(mavlink_channel_t chan, const mavlink_hil_gps_t* hil_gps)$/;"	f
mavlink_msg_hil_optical_flow_decode	common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_decode(const mavlink_message_t* msg, mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_optical_flow_encode	common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_optical_flow_encode_chan	common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_optical_flow_get_distance	common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_integrated_x	common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_integrated_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_integrated_xgyro	common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_integrated_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_integrated_y	common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_integrated_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_integrated_ygyro	common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_integrated_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_integrated_zgyro	common/mavlink_msg_hil_optical_flow.h	/^static inline float mavlink_msg_hil_optical_flow_get_integrated_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_integration_time_us	common/mavlink_msg_hil_optical_flow.h	/^static inline uint32_t mavlink_msg_hil_optical_flow_get_integration_time_us(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_quality	common/mavlink_msg_hil_optical_flow.h	/^static inline uint8_t mavlink_msg_hil_optical_flow_get_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_sensor_id	common/mavlink_msg_hil_optical_flow.h	/^static inline uint8_t mavlink_msg_hil_optical_flow_get_sensor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_temperature	common/mavlink_msg_hil_optical_flow.h	/^static inline int16_t mavlink_msg_hil_optical_flow_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_time_delta_distance_us	common/mavlink_msg_hil_optical_flow.h	/^static inline uint32_t mavlink_msg_hil_optical_flow_get_time_delta_distance_us(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_get_time_usec	common/mavlink_msg_hil_optical_flow.h	/^static inline uint64_t mavlink_msg_hil_optical_flow_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_optical_flow_pack	common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_optical_flow_pack_chan	common/mavlink_msg_hil_optical_flow.h	/^static inline uint16_t mavlink_msg_hil_optical_flow_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_optical_flow_send	common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, uint32_t integration_time_us, float integrated_x, float integrated_y, float integrated_xgyro, float integrated_ygyro, float integrated_zgyro, int16_t temperature, uint8_t quality, uint32_t time_delta_distance_us, float distance)$/;"	f
mavlink_msg_hil_optical_flow_send_buf	common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t sensor_id, uint32_t integration_time_us, float integrated_x, float integrated_y, float integrated_xgyro, float integrated_ygyro, float integrated_zgyro, int16_t temperature, uint8_t quality, uint32_t time_delta_distance_us, float distance)$/;"	f
mavlink_msg_hil_optical_flow_send_struct	common/mavlink_msg_hil_optical_flow.h	/^static inline void mavlink_msg_hil_optical_flow_send_struct(mavlink_channel_t chan, const mavlink_hil_optical_flow_t* hil_optical_flow)$/;"	f
mavlink_msg_hil_rc_inputs_raw_decode	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_decode(const mavlink_message_t* msg, mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_rc_inputs_raw_encode	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_rc_inputs_raw_encode_chan	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan10_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan10_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan11_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan11_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan12_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan12_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan1_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan2_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan3_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan4_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan5_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan6_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan7_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan8_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_chan9_raw	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_get_chan9_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_rssi	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint8_t mavlink_msg_hil_rc_inputs_raw_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_get_time_usec	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint64_t mavlink_msg_hil_rc_inputs_raw_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_rc_inputs_raw_pack	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_rc_inputs_raw_pack_chan	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline uint16_t mavlink_msg_hil_rc_inputs_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_rc_inputs_raw_send	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_send(mavlink_channel_t chan, uint64_t time_usec, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint8_t rssi)$/;"	f
mavlink_msg_hil_rc_inputs_raw_send_buf	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint8_t rssi)$/;"	f
mavlink_msg_hil_rc_inputs_raw_send_struct	common/mavlink_msg_hil_rc_inputs_raw.h	/^static inline void mavlink_msg_hil_rc_inputs_raw_send_struct(mavlink_channel_t chan, const mavlink_hil_rc_inputs_raw_t* hil_rc_inputs_raw)$/;"	f
mavlink_msg_hil_sensor_decode	common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_decode(const mavlink_message_t* msg, mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_sensor_encode	common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_sensor_encode_chan	common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_sensor_get_abs_pressure	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_abs_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_diff_pressure	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_diff_pressure(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_fields_updated	common/mavlink_msg_hil_sensor.h	/^static inline uint32_t mavlink_msg_hil_sensor_get_fields_updated(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_pressure_alt	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_pressure_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_temperature	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_time_usec	common/mavlink_msg_hil_sensor.h	/^static inline uint64_t mavlink_msg_hil_sensor_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_xacc	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_xgyro	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_xmag	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_yacc	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_ygyro	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_ymag	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_zacc	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_zgyro	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_get_zmag	common/mavlink_msg_hil_sensor.h	/^static inline float mavlink_msg_hil_sensor_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_sensor_pack	common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_sensor_pack_chan	common/mavlink_msg_hil_sensor.h	/^static inline uint16_t mavlink_msg_hil_sensor_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_sensor_send	common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_send(mavlink_channel_t chan, uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint32_t fields_updated)$/;"	f
mavlink_msg_hil_sensor_send_buf	common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float xmag, float ymag, float zmag, float abs_pressure, float diff_pressure, float pressure_alt, float temperature, uint32_t fields_updated)$/;"	f
mavlink_msg_hil_sensor_send_struct	common/mavlink_msg_hil_sensor.h	/^static inline void mavlink_msg_hil_sensor_send_struct(mavlink_channel_t chan, const mavlink_hil_sensor_t* hil_sensor)$/;"	f
mavlink_msg_hil_state_decode	common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_decode(const mavlink_message_t* msg, mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_hil_state_encode	common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_hil_state_encode_chan	common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_hil_state_get_alt	common/mavlink_msg_hil_state.h	/^static inline int32_t mavlink_msg_hil_state_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_lat	common/mavlink_msg_hil_state.h	/^static inline int32_t mavlink_msg_hil_state_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_lon	common/mavlink_msg_hil_state.h	/^static inline int32_t mavlink_msg_hil_state_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_pitch	common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_pitchspeed	common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_roll	common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_rollspeed	common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_time_usec	common/mavlink_msg_hil_state.h	/^static inline uint64_t mavlink_msg_hil_state_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_vx	common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_vy	common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_vz	common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_xacc	common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_yacc	common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_yaw	common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_yawspeed	common/mavlink_msg_hil_state.h	/^static inline float mavlink_msg_hil_state_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_get_zacc	common/mavlink_msg_hil_state.h	/^static inline int16_t mavlink_msg_hil_state_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_pack	common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_state_pack_chan	common/mavlink_msg_hil_state.h	/^static inline uint16_t mavlink_msg_hil_state_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_state_quaternion_decode	common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_decode(const mavlink_message_t* msg, mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_encode	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_encode_chan	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_get_alt	common/mavlink_msg_hil_state_quaternion.h	/^static inline int32_t mavlink_msg_hil_state_quaternion_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_attitude_quaternion	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_get_attitude_quaternion(const mavlink_message_t* msg, float *attitude_quaternion)$/;"	f
mavlink_msg_hil_state_quaternion_get_ind_airspeed	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_get_ind_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_lat	common/mavlink_msg_hil_state_quaternion.h	/^static inline int32_t mavlink_msg_hil_state_quaternion_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_lon	common/mavlink_msg_hil_state_quaternion.h	/^static inline int32_t mavlink_msg_hil_state_quaternion_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_pitchspeed	common/mavlink_msg_hil_state_quaternion.h	/^static inline float mavlink_msg_hil_state_quaternion_get_pitchspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_rollspeed	common/mavlink_msg_hil_state_quaternion.h	/^static inline float mavlink_msg_hil_state_quaternion_get_rollspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_time_usec	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint64_t mavlink_msg_hil_state_quaternion_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_true_airspeed	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_get_true_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_vx	common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_vy	common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_vz	common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_xacc	common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_yacc	common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_yawspeed	common/mavlink_msg_hil_state_quaternion.h	/^static inline float mavlink_msg_hil_state_quaternion_get_yawspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_get_zacc	common/mavlink_msg_hil_state_quaternion.h	/^static inline int16_t mavlink_msg_hil_state_quaternion_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_hil_state_quaternion_pack	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_hil_state_quaternion_pack_chan	common/mavlink_msg_hil_state_quaternion.h	/^static inline uint16_t mavlink_msg_hil_state_quaternion_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_hil_state_quaternion_send	common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_send(mavlink_channel_t chan, uint64_t time_usec, const float *attitude_quaternion, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, uint16_t ind_airspeed, uint16_t true_airspeed, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_quaternion_send_buf	common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, const float *attitude_quaternion, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, uint16_t ind_airspeed, uint16_t true_airspeed, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_quaternion_send_struct	common/mavlink_msg_hil_state_quaternion.h	/^static inline void mavlink_msg_hil_state_quaternion_send_struct(mavlink_channel_t chan, const mavlink_hil_state_quaternion_t* hil_state_quaternion)$/;"	f
mavlink_msg_hil_state_send	common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_send(mavlink_channel_t chan, uint64_t time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_send_buf	common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float roll, float pitch, float yaw, float rollspeed, float pitchspeed, float yawspeed, int32_t lat, int32_t lon, int32_t alt, int16_t vx, int16_t vy, int16_t vz, int16_t xacc, int16_t yacc, int16_t zacc)$/;"	f
mavlink_msg_hil_state_send_struct	common/mavlink_msg_hil_state.h	/^static inline void mavlink_msg_hil_state_send_struct(mavlink_channel_t chan, const mavlink_hil_state_t* hil_state)$/;"	f
mavlink_msg_home_position_decode	common/mavlink_msg_home_position.h	/^static inline void mavlink_msg_home_position_decode(const mavlink_message_t* msg, mavlink_home_position_t* home_position)$/;"	f
mavlink_msg_home_position_encode	common/mavlink_msg_home_position.h	/^static inline uint16_t mavlink_msg_home_position_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_home_position_t* home_position)$/;"	f
mavlink_msg_home_position_encode_chan	common/mavlink_msg_home_position.h	/^static inline uint16_t mavlink_msg_home_position_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_home_position_t* home_position)$/;"	f
mavlink_msg_home_position_get_altitude	common/mavlink_msg_home_position.h	/^static inline int32_t mavlink_msg_home_position_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_approach_x	common/mavlink_msg_home_position.h	/^static inline float mavlink_msg_home_position_get_approach_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_approach_y	common/mavlink_msg_home_position.h	/^static inline float mavlink_msg_home_position_get_approach_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_approach_z	common/mavlink_msg_home_position.h	/^static inline float mavlink_msg_home_position_get_approach_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_latitude	common/mavlink_msg_home_position.h	/^static inline int32_t mavlink_msg_home_position_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_longitude	common/mavlink_msg_home_position.h	/^static inline int32_t mavlink_msg_home_position_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_q	common/mavlink_msg_home_position.h	/^static inline uint16_t mavlink_msg_home_position_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_home_position_get_x	common/mavlink_msg_home_position.h	/^static inline float mavlink_msg_home_position_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_y	common/mavlink_msg_home_position.h	/^static inline float mavlink_msg_home_position_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_get_z	common/mavlink_msg_home_position.h	/^static inline float mavlink_msg_home_position_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_home_position_pack	common/mavlink_msg_home_position.h	/^static inline uint16_t mavlink_msg_home_position_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_home_position_pack_chan	common/mavlink_msg_home_position.h	/^static inline uint16_t mavlink_msg_home_position_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_home_position_send	common/mavlink_msg_home_position.h	/^static inline void mavlink_msg_home_position_send(mavlink_channel_t chan, int32_t latitude, int32_t longitude, int32_t altitude, float x, float y, float z, const float *q, float approach_x, float approach_y, float approach_z)$/;"	f
mavlink_msg_home_position_send_buf	common/mavlink_msg_home_position.h	/^static inline void mavlink_msg_home_position_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int32_t latitude, int32_t longitude, int32_t altitude, float x, float y, float z, const float *q, float approach_x, float approach_y, float approach_z)$/;"	f
mavlink_msg_home_position_send_struct	common/mavlink_msg_home_position.h	/^static inline void mavlink_msg_home_position_send_struct(mavlink_channel_t chan, const mavlink_home_position_t* home_position)$/;"	f
mavlink_msg_landing_target_decode	common/mavlink_msg_landing_target.h	/^static inline void mavlink_msg_landing_target_decode(const mavlink_message_t* msg, mavlink_landing_target_t* landing_target)$/;"	f
mavlink_msg_landing_target_encode	common/mavlink_msg_landing_target.h	/^static inline uint16_t mavlink_msg_landing_target_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_landing_target_t* landing_target)$/;"	f
mavlink_msg_landing_target_encode_chan	common/mavlink_msg_landing_target.h	/^static inline uint16_t mavlink_msg_landing_target_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_landing_target_t* landing_target)$/;"	f
mavlink_msg_landing_target_get_angle_x	common/mavlink_msg_landing_target.h	/^static inline float mavlink_msg_landing_target_get_angle_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_angle_y	common/mavlink_msg_landing_target.h	/^static inline float mavlink_msg_landing_target_get_angle_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_distance	common/mavlink_msg_landing_target.h	/^static inline float mavlink_msg_landing_target_get_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_frame	common/mavlink_msg_landing_target.h	/^static inline uint8_t mavlink_msg_landing_target_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_size_x	common/mavlink_msg_landing_target.h	/^static inline float mavlink_msg_landing_target_get_size_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_size_y	common/mavlink_msg_landing_target.h	/^static inline float mavlink_msg_landing_target_get_size_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_target_num	common/mavlink_msg_landing_target.h	/^static inline uint8_t mavlink_msg_landing_target_get_target_num(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_get_time_usec	common/mavlink_msg_landing_target.h	/^static inline uint64_t mavlink_msg_landing_target_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_landing_target_pack	common/mavlink_msg_landing_target.h	/^static inline uint16_t mavlink_msg_landing_target_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_landing_target_pack_chan	common/mavlink_msg_landing_target.h	/^static inline uint16_t mavlink_msg_landing_target_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_landing_target_send	common/mavlink_msg_landing_target.h	/^static inline void mavlink_msg_landing_target_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t target_num, uint8_t frame, float angle_x, float angle_y, float distance, float size_x, float size_y)$/;"	f
mavlink_msg_landing_target_send_buf	common/mavlink_msg_landing_target.h	/^static inline void mavlink_msg_landing_target_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t target_num, uint8_t frame, float angle_x, float angle_y, float distance, float size_x, float size_y)$/;"	f
mavlink_msg_landing_target_send_struct	common/mavlink_msg_landing_target.h	/^static inline void mavlink_msg_landing_target_send_struct(mavlink_channel_t chan, const mavlink_landing_target_t* landing_target)$/;"	f
mavlink_msg_local_position_ned_cov_decode	common/mavlink_msg_local_position_ned_cov.h	/^static inline void mavlink_msg_local_position_ned_cov_decode(const mavlink_message_t* msg, mavlink_local_position_ned_cov_t* local_position_ned_cov)$/;"	f
mavlink_msg_local_position_ned_cov_encode	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint16_t mavlink_msg_local_position_ned_cov_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_local_position_ned_cov_t* local_position_ned_cov)$/;"	f
mavlink_msg_local_position_ned_cov_encode_chan	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint16_t mavlink_msg_local_position_ned_cov_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_local_position_ned_cov_t* local_position_ned_cov)$/;"	f
mavlink_msg_local_position_ned_cov_get_ax	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_ax(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_ay	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_ay(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_az	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_az(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_covariance	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint16_t mavlink_msg_local_position_ned_cov_get_covariance(const mavlink_message_t* msg, float *covariance)$/;"	f
mavlink_msg_local_position_ned_cov_get_estimator_type	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint8_t mavlink_msg_local_position_ned_cov_get_estimator_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_time_boot_ms	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint32_t mavlink_msg_local_position_ned_cov_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_time_utc	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint64_t mavlink_msg_local_position_ned_cov_get_time_utc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_vx	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_vy	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_vz	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_x	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_y	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_get_z	common/mavlink_msg_local_position_ned_cov.h	/^static inline float mavlink_msg_local_position_ned_cov_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_cov_pack	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint16_t mavlink_msg_local_position_ned_cov_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_local_position_ned_cov_pack_chan	common/mavlink_msg_local_position_ned_cov.h	/^static inline uint16_t mavlink_msg_local_position_ned_cov_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_local_position_ned_cov_send	common/mavlink_msg_local_position_ned_cov.h	/^static inline void mavlink_msg_local_position_ned_cov_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint64_t time_utc, uint8_t estimator_type, float x, float y, float z, float vx, float vy, float vz, float ax, float ay, float az, const float *covariance)$/;"	f
mavlink_msg_local_position_ned_cov_send_buf	common/mavlink_msg_local_position_ned_cov.h	/^static inline void mavlink_msg_local_position_ned_cov_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint64_t time_utc, uint8_t estimator_type, float x, float y, float z, float vx, float vy, float vz, float ax, float ay, float az, const float *covariance)$/;"	f
mavlink_msg_local_position_ned_cov_send_struct	common/mavlink_msg_local_position_ned_cov.h	/^static inline void mavlink_msg_local_position_ned_cov_send_struct(mavlink_channel_t chan, const mavlink_local_position_ned_cov_t* local_position_ned_cov)$/;"	f
mavlink_msg_local_position_ned_decode	common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_decode(const mavlink_message_t* msg, mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_encode	common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_encode_chan	common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_get_time_boot_ms	common/mavlink_msg_local_position_ned.h	/^static inline uint32_t mavlink_msg_local_position_ned_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_vx	common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_vy	common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_vz	common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_x	common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_y	common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_get_z	common/mavlink_msg_local_position_ned.h	/^static inline float mavlink_msg_local_position_ned_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_pack	common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_local_position_ned_pack_chan	common/mavlink_msg_local_position_ned.h	/^static inline uint16_t mavlink_msg_local_position_ned_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_local_position_ned_send	common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_send(mavlink_channel_t chan, uint32_t time_boot_ms, float x, float y, float z, float vx, float vy, float vz)$/;"	f
mavlink_msg_local_position_ned_send_buf	common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float x, float y, float z, float vx, float vy, float vz)$/;"	f
mavlink_msg_local_position_ned_send_struct	common/mavlink_msg_local_position_ned.h	/^static inline void mavlink_msg_local_position_ned_send_struct(mavlink_channel_t chan, const mavlink_local_position_ned_t* local_position_ned)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_decode	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_decode(const mavlink_message_t* msg, mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_encode	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_encode_chan	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_pitch	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_roll	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_time_boot_ms	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint32_t mavlink_msg_local_position_ned_system_global_offset_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_x	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_y	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_yaw	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_get_z	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline float mavlink_msg_local_position_ned_system_global_offset_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_pack	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_local_position_ned_system_global_offset_pack_chan	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline uint16_t mavlink_msg_local_position_ned_system_global_offset_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_local_position_ned_system_global_offset_send	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_send(mavlink_channel_t chan, uint32_t time_boot_ms, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_send_buf	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_local_position_ned_system_global_offset_send_struct	common/mavlink_msg_local_position_ned_system_global_offset.h	/^static inline void mavlink_msg_local_position_ned_system_global_offset_send_struct(mavlink_channel_t chan, const mavlink_local_position_ned_system_global_offset_t* local_position_ned_system_global_offset)$/;"	f
mavlink_msg_log_data_decode	common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_decode(const mavlink_message_t* msg, mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_data_encode	common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_data_encode_chan	common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_data_get_count	common/mavlink_msg_log_data.h	/^static inline uint8_t mavlink_msg_log_data_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_data_get_data	common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_log_data_get_id	common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_data_get_ofs	common/mavlink_msg_log_data.h	/^static inline uint32_t mavlink_msg_log_data_get_ofs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_data_pack	common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_log_data_pack_chan	common/mavlink_msg_log_data.h	/^static inline uint16_t mavlink_msg_log_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_log_data_send	common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_send(mavlink_channel_t chan, uint16_t id, uint32_t ofs, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_log_data_send_buf	common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t id, uint32_t ofs, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_log_data_send_struct	common/mavlink_msg_log_data.h	/^static inline void mavlink_msg_log_data_send_struct(mavlink_channel_t chan, const mavlink_log_data_t* log_data)$/;"	f
mavlink_msg_log_entry_decode	common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_decode(const mavlink_message_t* msg, mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_entry_encode	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_entry_encode_chan	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_entry_get_id	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_last_log_num	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_get_last_log_num(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_num_logs	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_get_num_logs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_size	common/mavlink_msg_log_entry.h	/^static inline uint32_t mavlink_msg_log_entry_get_size(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_get_time_utc	common/mavlink_msg_log_entry.h	/^static inline uint32_t mavlink_msg_log_entry_get_time_utc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_entry_pack	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_log_entry_pack_chan	common/mavlink_msg_log_entry.h	/^static inline uint16_t mavlink_msg_log_entry_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_log_entry_send	common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_send(mavlink_channel_t chan, uint16_t id, uint16_t num_logs, uint16_t last_log_num, uint32_t time_utc, uint32_t size)$/;"	f
mavlink_msg_log_entry_send_buf	common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t id, uint16_t num_logs, uint16_t last_log_num, uint32_t time_utc, uint32_t size)$/;"	f
mavlink_msg_log_entry_send_struct	common/mavlink_msg_log_entry.h	/^static inline void mavlink_msg_log_entry_send_struct(mavlink_channel_t chan, const mavlink_log_entry_t* log_entry)$/;"	f
mavlink_msg_log_erase_decode	common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_decode(const mavlink_message_t* msg, mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_erase_encode	common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_erase_encode_chan	common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_erase_get_target_component	common/mavlink_msg_log_erase.h	/^static inline uint8_t mavlink_msg_log_erase_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_erase_get_target_system	common/mavlink_msg_log_erase.h	/^static inline uint8_t mavlink_msg_log_erase_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_erase_pack	common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_log_erase_pack_chan	common/mavlink_msg_log_erase.h	/^static inline uint16_t mavlink_msg_log_erase_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_log_erase_send	common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_erase_send_buf	common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_erase_send_struct	common/mavlink_msg_log_erase.h	/^static inline void mavlink_msg_log_erase_send_struct(mavlink_channel_t chan, const mavlink_log_erase_t* log_erase)$/;"	f
mavlink_msg_log_request_data_decode	common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_decode(const mavlink_message_t* msg, mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_data_encode	common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_data_encode_chan	common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_data_get_count	common/mavlink_msg_log_request_data.h	/^static inline uint32_t mavlink_msg_log_request_data_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_id	common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_get_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_ofs	common/mavlink_msg_log_request_data.h	/^static inline uint32_t mavlink_msg_log_request_data_get_ofs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_target_component	common/mavlink_msg_log_request_data.h	/^static inline uint8_t mavlink_msg_log_request_data_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_get_target_system	common/mavlink_msg_log_request_data.h	/^static inline uint8_t mavlink_msg_log_request_data_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_data_pack	common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_log_request_data_pack_chan	common/mavlink_msg_log_request_data.h	/^static inline uint16_t mavlink_msg_log_request_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_log_request_data_send	common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t id, uint32_t ofs, uint32_t count)$/;"	f
mavlink_msg_log_request_data_send_buf	common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t id, uint32_t ofs, uint32_t count)$/;"	f
mavlink_msg_log_request_data_send_struct	common/mavlink_msg_log_request_data.h	/^static inline void mavlink_msg_log_request_data_send_struct(mavlink_channel_t chan, const mavlink_log_request_data_t* log_request_data)$/;"	f
mavlink_msg_log_request_end_decode	common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_decode(const mavlink_message_t* msg, mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_end_encode	common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_end_encode_chan	common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_end_get_target_component	common/mavlink_msg_log_request_end.h	/^static inline uint8_t mavlink_msg_log_request_end_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_end_get_target_system	common/mavlink_msg_log_request_end.h	/^static inline uint8_t mavlink_msg_log_request_end_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_end_pack	common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_log_request_end_pack_chan	common/mavlink_msg_log_request_end.h	/^static inline uint16_t mavlink_msg_log_request_end_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_log_request_end_send	common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_end_send_buf	common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_log_request_end_send_struct	common/mavlink_msg_log_request_end.h	/^static inline void mavlink_msg_log_request_end_send_struct(mavlink_channel_t chan, const mavlink_log_request_end_t* log_request_end)$/;"	f
mavlink_msg_log_request_list_decode	common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_decode(const mavlink_message_t* msg, mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_log_request_list_encode	common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_log_request_list_encode_chan	common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_log_request_list_get_end	common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_get_end(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_get_start	common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_get_start(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_get_target_component	common/mavlink_msg_log_request_list.h	/^static inline uint8_t mavlink_msg_log_request_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_get_target_system	common/mavlink_msg_log_request_list.h	/^static inline uint8_t mavlink_msg_log_request_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_log_request_list_pack	common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_log_request_list_pack_chan	common/mavlink_msg_log_request_list.h	/^static inline uint16_t mavlink_msg_log_request_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_log_request_list_send	common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t start, uint16_t end)$/;"	f
mavlink_msg_log_request_list_send_buf	common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t start, uint16_t end)$/;"	f
mavlink_msg_log_request_list_send_struct	common/mavlink_msg_log_request_list.h	/^static inline void mavlink_msg_log_request_list_send_struct(mavlink_channel_t chan, const mavlink_log_request_list_t* log_request_list)$/;"	f
mavlink_msg_manual_control_decode	common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_decode(const mavlink_message_t* msg, mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_control_encode	common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_control_encode_chan	common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_control_get_buttons	common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_get_buttons(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_r	common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_r(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_target	common/mavlink_msg_manual_control.h	/^static inline uint8_t mavlink_msg_manual_control_get_target(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_x	common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_y	common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_get_z	common/mavlink_msg_manual_control.h	/^static inline int16_t mavlink_msg_manual_control_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_control_pack	common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_manual_control_pack_chan	common/mavlink_msg_manual_control.h	/^static inline uint16_t mavlink_msg_manual_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_manual_control_send	common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_send(mavlink_channel_t chan, uint8_t target, int16_t x, int16_t y, int16_t z, int16_t r, uint16_t buttons)$/;"	f
mavlink_msg_manual_control_send_buf	common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target, int16_t x, int16_t y, int16_t z, int16_t r, uint16_t buttons)$/;"	f
mavlink_msg_manual_control_send_struct	common/mavlink_msg_manual_control.h	/^static inline void mavlink_msg_manual_control_send_struct(mavlink_channel_t chan, const mavlink_manual_control_t* manual_control)$/;"	f
mavlink_msg_manual_setpoint_decode	common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_decode(const mavlink_message_t* msg, mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_manual_setpoint_encode	common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_manual_setpoint_encode_chan	common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_manual_setpoint_get_manual_override_switch	common/mavlink_msg_manual_setpoint.h	/^static inline uint8_t mavlink_msg_manual_setpoint_get_manual_override_switch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_mode_switch	common/mavlink_msg_manual_setpoint.h	/^static inline uint8_t mavlink_msg_manual_setpoint_get_mode_switch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_pitch	common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_roll	common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_thrust	common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_time_boot_ms	common/mavlink_msg_manual_setpoint.h	/^static inline uint32_t mavlink_msg_manual_setpoint_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_get_yaw	common/mavlink_msg_manual_setpoint.h	/^static inline float mavlink_msg_manual_setpoint_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_manual_setpoint_pack	common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_manual_setpoint_pack_chan	common/mavlink_msg_manual_setpoint.h	/^static inline uint16_t mavlink_msg_manual_setpoint_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_manual_setpoint_send	common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_send(mavlink_channel_t chan, uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust, uint8_t mode_switch, uint8_t manual_override_switch)$/;"	f
mavlink_msg_manual_setpoint_send_buf	common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float roll, float pitch, float yaw, float thrust, uint8_t mode_switch, uint8_t manual_override_switch)$/;"	f
mavlink_msg_manual_setpoint_send_struct	common/mavlink_msg_manual_setpoint.h	/^static inline void mavlink_msg_manual_setpoint_send_struct(mavlink_channel_t chan, const mavlink_manual_setpoint_t* manual_setpoint)$/;"	f
mavlink_msg_memory_vect_decode	common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_decode(const mavlink_message_t* msg, mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_memory_vect_encode	common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_memory_vect_encode_chan	common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_memory_vect_get_address	common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_get_address(const mavlink_message_t* msg)$/;"	f
mavlink_msg_memory_vect_get_type	common/mavlink_msg_memory_vect.h	/^static inline uint8_t mavlink_msg_memory_vect_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_memory_vect_get_value	common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_get_value(const mavlink_message_t* msg, int8_t *value)$/;"	f
mavlink_msg_memory_vect_get_ver	common/mavlink_msg_memory_vect.h	/^static inline uint8_t mavlink_msg_memory_vect_get_ver(const mavlink_message_t* msg)$/;"	f
mavlink_msg_memory_vect_pack	common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_memory_vect_pack_chan	common/mavlink_msg_memory_vect.h	/^static inline uint16_t mavlink_msg_memory_vect_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_memory_vect_send	common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_send(mavlink_channel_t chan, uint16_t address, uint8_t ver, uint8_t type, const int8_t *value)$/;"	f
mavlink_msg_memory_vect_send_buf	common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t address, uint8_t ver, uint8_t type, const int8_t *value)$/;"	f
mavlink_msg_memory_vect_send_struct	common/mavlink_msg_memory_vect.h	/^static inline void mavlink_msg_memory_vect_send_struct(mavlink_channel_t chan, const mavlink_memory_vect_t* memory_vect)$/;"	f
mavlink_msg_message_interval_decode	common/mavlink_msg_message_interval.h	/^static inline void mavlink_msg_message_interval_decode(const mavlink_message_t* msg, mavlink_message_interval_t* message_interval)$/;"	f
mavlink_msg_message_interval_encode	common/mavlink_msg_message_interval.h	/^static inline uint16_t mavlink_msg_message_interval_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_message_interval_t* message_interval)$/;"	f
mavlink_msg_message_interval_encode_chan	common/mavlink_msg_message_interval.h	/^static inline uint16_t mavlink_msg_message_interval_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_message_interval_t* message_interval)$/;"	f
mavlink_msg_message_interval_get_interval_us	common/mavlink_msg_message_interval.h	/^static inline int32_t mavlink_msg_message_interval_get_interval_us(const mavlink_message_t* msg)$/;"	f
mavlink_msg_message_interval_get_message_id	common/mavlink_msg_message_interval.h	/^static inline uint16_t mavlink_msg_message_interval_get_message_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_message_interval_pack	common/mavlink_msg_message_interval.h	/^static inline uint16_t mavlink_msg_message_interval_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_message_interval_pack_chan	common/mavlink_msg_message_interval.h	/^static inline uint16_t mavlink_msg_message_interval_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_message_interval_send	common/mavlink_msg_message_interval.h	/^static inline void mavlink_msg_message_interval_send(mavlink_channel_t chan, uint16_t message_id, int32_t interval_us)$/;"	f
mavlink_msg_message_interval_send_buf	common/mavlink_msg_message_interval.h	/^static inline void mavlink_msg_message_interval_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t message_id, int32_t interval_us)$/;"	f
mavlink_msg_message_interval_send_struct	common/mavlink_msg_message_interval.h	/^static inline void mavlink_msg_message_interval_send_struct(mavlink_channel_t chan, const mavlink_message_interval_t* message_interval)$/;"	f
mavlink_msg_mission_ack_decode	common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_decode(const mavlink_message_t* msg, mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_ack_encode	common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_ack_encode_chan	common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_ack_get_target_component	common/mavlink_msg_mission_ack.h	/^static inline uint8_t mavlink_msg_mission_ack_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_ack_get_target_system	common/mavlink_msg_mission_ack.h	/^static inline uint8_t mavlink_msg_mission_ack_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_ack_get_type	common/mavlink_msg_mission_ack.h	/^static inline uint8_t mavlink_msg_mission_ack_get_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_ack_pack	common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_ack_pack_chan	common/mavlink_msg_mission_ack.h	/^static inline uint16_t mavlink_msg_mission_ack_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_ack_send	common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t type)$/;"	f
mavlink_msg_mission_ack_send_buf	common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint8_t type)$/;"	f
mavlink_msg_mission_ack_send_struct	common/mavlink_msg_mission_ack.h	/^static inline void mavlink_msg_mission_ack_send_struct(mavlink_channel_t chan, const mavlink_mission_ack_t* mission_ack)$/;"	f
mavlink_msg_mission_clear_all_decode	common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_decode(const mavlink_message_t* msg, mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_clear_all_encode	common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_clear_all_encode_chan	common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_clear_all_get_target_component	common/mavlink_msg_mission_clear_all.h	/^static inline uint8_t mavlink_msg_mission_clear_all_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_clear_all_get_target_system	common/mavlink_msg_mission_clear_all.h	/^static inline uint8_t mavlink_msg_mission_clear_all_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_clear_all_pack	common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_clear_all_pack_chan	common/mavlink_msg_mission_clear_all.h	/^static inline uint16_t mavlink_msg_mission_clear_all_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_clear_all_send	common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_clear_all_send_buf	common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_clear_all_send_struct	common/mavlink_msg_mission_clear_all.h	/^static inline void mavlink_msg_mission_clear_all_send_struct(mavlink_channel_t chan, const mavlink_mission_clear_all_t* mission_clear_all)$/;"	f
mavlink_msg_mission_count_decode	common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_decode(const mavlink_message_t* msg, mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_count_encode	common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_count_encode_chan	common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_count_get_count	common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_count_get_target_component	common/mavlink_msg_mission_count.h	/^static inline uint8_t mavlink_msg_mission_count_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_count_get_target_system	common/mavlink_msg_mission_count.h	/^static inline uint8_t mavlink_msg_mission_count_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_count_pack	common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_count_pack_chan	common/mavlink_msg_mission_count.h	/^static inline uint16_t mavlink_msg_mission_count_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_count_send	common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t count)$/;"	f
mavlink_msg_mission_count_send_buf	common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t count)$/;"	f
mavlink_msg_mission_count_send_struct	common/mavlink_msg_mission_count.h	/^static inline void mavlink_msg_mission_count_send_struct(mavlink_channel_t chan, const mavlink_mission_count_t* mission_count)$/;"	f
mavlink_msg_mission_current_decode	common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_decode(const mavlink_message_t* msg, mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_current_encode	common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_current_encode_chan	common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_current_get_seq	common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_current_pack	common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_current_pack_chan	common/mavlink_msg_mission_current.h	/^static inline uint16_t mavlink_msg_mission_current_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_current_send	common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_send(mavlink_channel_t chan, uint16_t seq)$/;"	f
mavlink_msg_mission_current_send_buf	common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t seq)$/;"	f
mavlink_msg_mission_current_send_struct	common/mavlink_msg_mission_current.h	/^static inline void mavlink_msg_mission_current_send_struct(mavlink_channel_t chan, const mavlink_mission_current_t* mission_current)$/;"	f
mavlink_msg_mission_item_decode	common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_decode(const mavlink_message_t* msg, mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_item_encode	common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_item_encode_chan	common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_item_get_autocontinue	common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_autocontinue(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_command	common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_current	common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_current(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_frame	common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param1	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param2	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param3	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_param4	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_param4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_seq	common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_target_component	common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_target_system	common/mavlink_msg_mission_item.h	/^static inline uint8_t mavlink_msg_mission_item_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_x	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_y	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_get_z	common/mavlink_msg_mission_item.h	/^static inline float mavlink_msg_mission_item_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_decode	common/mavlink_msg_mission_item_int.h	/^static inline void mavlink_msg_mission_item_int_decode(const mavlink_message_t* msg, mavlink_mission_item_int_t* mission_item_int)$/;"	f
mavlink_msg_mission_item_int_encode	common/mavlink_msg_mission_item_int.h	/^static inline uint16_t mavlink_msg_mission_item_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_item_int_t* mission_item_int)$/;"	f
mavlink_msg_mission_item_int_encode_chan	common/mavlink_msg_mission_item_int.h	/^static inline uint16_t mavlink_msg_mission_item_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_item_int_t* mission_item_int)$/;"	f
mavlink_msg_mission_item_int_get_autocontinue	common/mavlink_msg_mission_item_int.h	/^static inline uint8_t mavlink_msg_mission_item_int_get_autocontinue(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_command	common/mavlink_msg_mission_item_int.h	/^static inline uint16_t mavlink_msg_mission_item_int_get_command(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_current	common/mavlink_msg_mission_item_int.h	/^static inline uint8_t mavlink_msg_mission_item_int_get_current(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_frame	common/mavlink_msg_mission_item_int.h	/^static inline uint8_t mavlink_msg_mission_item_int_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_param1	common/mavlink_msg_mission_item_int.h	/^static inline float mavlink_msg_mission_item_int_get_param1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_param2	common/mavlink_msg_mission_item_int.h	/^static inline float mavlink_msg_mission_item_int_get_param2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_param3	common/mavlink_msg_mission_item_int.h	/^static inline float mavlink_msg_mission_item_int_get_param3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_param4	common/mavlink_msg_mission_item_int.h	/^static inline float mavlink_msg_mission_item_int_get_param4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_seq	common/mavlink_msg_mission_item_int.h	/^static inline uint16_t mavlink_msg_mission_item_int_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_target_component	common/mavlink_msg_mission_item_int.h	/^static inline uint8_t mavlink_msg_mission_item_int_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_target_system	common/mavlink_msg_mission_item_int.h	/^static inline uint8_t mavlink_msg_mission_item_int_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_x	common/mavlink_msg_mission_item_int.h	/^static inline int32_t mavlink_msg_mission_item_int_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_y	common/mavlink_msg_mission_item_int.h	/^static inline int32_t mavlink_msg_mission_item_int_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_get_z	common/mavlink_msg_mission_item_int.h	/^static inline float mavlink_msg_mission_item_int_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_int_pack	common/mavlink_msg_mission_item_int.h	/^static inline uint16_t mavlink_msg_mission_item_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_item_int_pack_chan	common/mavlink_msg_mission_item_int.h	/^static inline uint16_t mavlink_msg_mission_item_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_item_int_send	common/mavlink_msg_mission_item_int.h	/^static inline void mavlink_msg_mission_item_int_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, int32_t x, int32_t y, float z)$/;"	f
mavlink_msg_mission_item_int_send_buf	common/mavlink_msg_mission_item_int.h	/^static inline void mavlink_msg_mission_item_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, int32_t x, int32_t y, float z)$/;"	f
mavlink_msg_mission_item_int_send_struct	common/mavlink_msg_mission_item_int.h	/^static inline void mavlink_msg_mission_item_int_send_struct(mavlink_channel_t chan, const mavlink_mission_item_int_t* mission_item_int)$/;"	f
mavlink_msg_mission_item_pack	common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_item_pack_chan	common/mavlink_msg_mission_item.h	/^static inline uint16_t mavlink_msg_mission_item_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_item_reached_decode	common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_decode(const mavlink_message_t* msg, mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_reached_encode	common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_reached_encode_chan	common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_reached_get_seq	common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_item_reached_pack	common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_item_reached_pack_chan	common/mavlink_msg_mission_item_reached.h	/^static inline uint16_t mavlink_msg_mission_item_reached_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_item_reached_send	common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_send(mavlink_channel_t chan, uint16_t seq)$/;"	f
mavlink_msg_mission_item_reached_send_buf	common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t seq)$/;"	f
mavlink_msg_mission_item_reached_send_struct	common/mavlink_msg_mission_item_reached.h	/^static inline void mavlink_msg_mission_item_reached_send_struct(mavlink_channel_t chan, const mavlink_mission_item_reached_t* mission_item_reached)$/;"	f
mavlink_msg_mission_item_send	common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, float x, float y, float z)$/;"	f
mavlink_msg_mission_item_send_buf	common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t seq, uint8_t frame, uint16_t command, uint8_t current, uint8_t autocontinue, float param1, float param2, float param3, float param4, float x, float y, float z)$/;"	f
mavlink_msg_mission_item_send_struct	common/mavlink_msg_mission_item.h	/^static inline void mavlink_msg_mission_item_send_struct(mavlink_channel_t chan, const mavlink_mission_item_t* mission_item)$/;"	f
mavlink_msg_mission_request_decode	common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_decode(const mavlink_message_t* msg, mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_request_encode	common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_request_encode_chan	common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_request_get_seq	common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_get_target_component	common/mavlink_msg_mission_request.h	/^static inline uint8_t mavlink_msg_mission_request_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_get_target_system	common/mavlink_msg_mission_request.h	/^static inline uint8_t mavlink_msg_mission_request_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_int_decode	common/mavlink_msg_mission_request_int.h	/^static inline void mavlink_msg_mission_request_int_decode(const mavlink_message_t* msg, mavlink_mission_request_int_t* mission_request_int)$/;"	f
mavlink_msg_mission_request_int_encode	common/mavlink_msg_mission_request_int.h	/^static inline uint16_t mavlink_msg_mission_request_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_int_t* mission_request_int)$/;"	f
mavlink_msg_mission_request_int_encode_chan	common/mavlink_msg_mission_request_int.h	/^static inline uint16_t mavlink_msg_mission_request_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_int_t* mission_request_int)$/;"	f
mavlink_msg_mission_request_int_get_seq	common/mavlink_msg_mission_request_int.h	/^static inline uint16_t mavlink_msg_mission_request_int_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_int_get_target_component	common/mavlink_msg_mission_request_int.h	/^static inline uint8_t mavlink_msg_mission_request_int_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_int_get_target_system	common/mavlink_msg_mission_request_int.h	/^static inline uint8_t mavlink_msg_mission_request_int_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_int_pack	common/mavlink_msg_mission_request_int.h	/^static inline uint16_t mavlink_msg_mission_request_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_request_int_pack_chan	common/mavlink_msg_mission_request_int.h	/^static inline uint16_t mavlink_msg_mission_request_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_request_int_send	common/mavlink_msg_mission_request_int.h	/^static inline void mavlink_msg_mission_request_int_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_int_send_buf	common/mavlink_msg_mission_request_int.h	/^static inline void mavlink_msg_mission_request_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_int_send_struct	common/mavlink_msg_mission_request_int.h	/^static inline void mavlink_msg_mission_request_int_send_struct(mavlink_channel_t chan, const mavlink_mission_request_int_t* mission_request_int)$/;"	f
mavlink_msg_mission_request_list_decode	common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_decode(const mavlink_message_t* msg, mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_list_encode	common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_list_encode_chan	common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_list_get_target_component	common/mavlink_msg_mission_request_list.h	/^static inline uint8_t mavlink_msg_mission_request_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_list_get_target_system	common/mavlink_msg_mission_request_list.h	/^static inline uint8_t mavlink_msg_mission_request_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_list_pack	common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_request_list_pack_chan	common/mavlink_msg_mission_request_list.h	/^static inline uint16_t mavlink_msg_mission_request_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_request_list_send	common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_request_list_send_buf	common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_mission_request_list_send_struct	common/mavlink_msg_mission_request_list.h	/^static inline void mavlink_msg_mission_request_list_send_struct(mavlink_channel_t chan, const mavlink_mission_request_list_t* mission_request_list)$/;"	f
mavlink_msg_mission_request_pack	common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_request_pack_chan	common/mavlink_msg_mission_request.h	/^static inline uint16_t mavlink_msg_mission_request_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_request_partial_list_decode	common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_decode(const mavlink_message_t* msg, mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_partial_list_encode	common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_partial_list_encode_chan	common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_partial_list_get_end_index	common/mavlink_msg_mission_request_partial_list.h	/^static inline int16_t mavlink_msg_mission_request_partial_list_get_end_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_get_start_index	common/mavlink_msg_mission_request_partial_list.h	/^static inline int16_t mavlink_msg_mission_request_partial_list_get_start_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_get_target_component	common/mavlink_msg_mission_request_partial_list.h	/^static inline uint8_t mavlink_msg_mission_request_partial_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_get_target_system	common/mavlink_msg_mission_request_partial_list.h	/^static inline uint8_t mavlink_msg_mission_request_partial_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_request_partial_list_pack	common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_request_partial_list_pack_chan	common/mavlink_msg_mission_request_partial_list.h	/^static inline uint16_t mavlink_msg_mission_request_partial_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_request_partial_list_send	common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_request_partial_list_send_buf	common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_request_partial_list_send_struct	common/mavlink_msg_mission_request_partial_list.h	/^static inline void mavlink_msg_mission_request_partial_list_send_struct(mavlink_channel_t chan, const mavlink_mission_request_partial_list_t* mission_request_partial_list)$/;"	f
mavlink_msg_mission_request_send	common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_send_buf	common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_request_send_struct	common/mavlink_msg_mission_request.h	/^static inline void mavlink_msg_mission_request_send_struct(mavlink_channel_t chan, const mavlink_mission_request_t* mission_request)$/;"	f
mavlink_msg_mission_set_current_decode	common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_decode(const mavlink_message_t* msg, mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_set_current_encode	common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_set_current_encode_chan	common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_set_current_get_seq	common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_set_current_get_target_component	common/mavlink_msg_mission_set_current.h	/^static inline uint8_t mavlink_msg_mission_set_current_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_set_current_get_target_system	common/mavlink_msg_mission_set_current.h	/^static inline uint8_t mavlink_msg_mission_set_current_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_set_current_pack	common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_set_current_pack_chan	common/mavlink_msg_mission_set_current.h	/^static inline uint16_t mavlink_msg_mission_set_current_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_set_current_send	common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_set_current_send_buf	common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t seq)$/;"	f
mavlink_msg_mission_set_current_send_struct	common/mavlink_msg_mission_set_current.h	/^static inline void mavlink_msg_mission_set_current_send_struct(mavlink_channel_t chan, const mavlink_mission_set_current_t* mission_set_current)$/;"	f
mavlink_msg_mission_write_partial_list_decode	common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_decode(const mavlink_message_t* msg, mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mission_write_partial_list_encode	common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mission_write_partial_list_encode_chan	common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mission_write_partial_list_get_end_index	common/mavlink_msg_mission_write_partial_list.h	/^static inline int16_t mavlink_msg_mission_write_partial_list_get_end_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_get_start_index	common/mavlink_msg_mission_write_partial_list.h	/^static inline int16_t mavlink_msg_mission_write_partial_list_get_start_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_get_target_component	common/mavlink_msg_mission_write_partial_list.h	/^static inline uint8_t mavlink_msg_mission_write_partial_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_get_target_system	common/mavlink_msg_mission_write_partial_list.h	/^static inline uint8_t mavlink_msg_mission_write_partial_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mission_write_partial_list_pack	common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mission_write_partial_list_pack_chan	common/mavlink_msg_mission_write_partial_list.h	/^static inline uint16_t mavlink_msg_mission_write_partial_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mission_write_partial_list_send	common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_write_partial_list_send_buf	common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, int16_t start_index, int16_t end_index)$/;"	f
mavlink_msg_mission_write_partial_list_send_struct	common/mavlink_msg_mission_write_partial_list.h	/^static inline void mavlink_msg_mission_write_partial_list_send_struct(mavlink_channel_t chan, const mavlink_mission_write_partial_list_t* mission_write_partial_list)$/;"	f
mavlink_msg_mount_gimbal_control_decode	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline void mavlink_msg_mount_gimbal_control_decode(const mavlink_message_t* msg, mavlink_mount_gimbal_control_t* mount_gimbal_control)$/;"	f
mavlink_msg_mount_gimbal_control_encode	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint16_t mavlink_msg_mount_gimbal_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_mount_gimbal_control_t* mount_gimbal_control)$/;"	f
mavlink_msg_mount_gimbal_control_encode_chan	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint16_t mavlink_msg_mount_gimbal_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_mount_gimbal_control_t* mount_gimbal_control)$/;"	f
mavlink_msg_mount_gimbal_control_get_mount_mode	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint8_t mavlink_msg_mount_gimbal_control_get_mount_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mount_gimbal_control_get_stab_pitch	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline int32_t mavlink_msg_mount_gimbal_control_get_stab_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mount_gimbal_control_get_stab_roll	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline int32_t mavlink_msg_mount_gimbal_control_get_stab_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mount_gimbal_control_get_stab_yaw	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline int32_t mavlink_msg_mount_gimbal_control_get_stab_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mount_gimbal_control_get_target_component	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint8_t mavlink_msg_mount_gimbal_control_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mount_gimbal_control_get_target_system	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint8_t mavlink_msg_mount_gimbal_control_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_mount_gimbal_control_pack	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint16_t mavlink_msg_mount_gimbal_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_mount_gimbal_control_pack_chan	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline uint16_t mavlink_msg_mount_gimbal_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_mount_gimbal_control_send	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline void mavlink_msg_mount_gimbal_control_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t mount_mode, int32_t stab_roll, int32_t stab_pitch, int32_t stab_yaw)$/;"	f
mavlink_msg_mount_gimbal_control_send_buf	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline void mavlink_msg_mount_gimbal_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint8_t mount_mode, int32_t stab_roll, int32_t stab_pitch, int32_t stab_yaw)$/;"	f
mavlink_msg_mount_gimbal_control_send_struct	ntian/mavlink_msg_mount_gimbal_control.h	/^static inline void mavlink_msg_mount_gimbal_control_send_struct(mavlink_channel_t chan, const mavlink_mount_gimbal_control_t* mount_gimbal_control)$/;"	f
mavlink_msg_named_value_float_decode	common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_decode(const mavlink_message_t* msg, mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_float_encode	common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_float_encode_chan	common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_float_get_name	common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_get_name(const mavlink_message_t* msg, char *name)$/;"	f
mavlink_msg_named_value_float_get_time_boot_ms	common/mavlink_msg_named_value_float.h	/^static inline uint32_t mavlink_msg_named_value_float_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_float_get_value	common/mavlink_msg_named_value_float.h	/^static inline float mavlink_msg_named_value_float_get_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_float_pack	common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_named_value_float_pack_chan	common/mavlink_msg_named_value_float.h	/^static inline uint16_t mavlink_msg_named_value_float_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_named_value_float_send	common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_send(mavlink_channel_t chan, uint32_t time_boot_ms, const char *name, float value)$/;"	f
mavlink_msg_named_value_float_send_buf	common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, const char *name, float value)$/;"	f
mavlink_msg_named_value_float_send_struct	common/mavlink_msg_named_value_float.h	/^static inline void mavlink_msg_named_value_float_send_struct(mavlink_channel_t chan, const mavlink_named_value_float_t* named_value_float)$/;"	f
mavlink_msg_named_value_int_decode	common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_decode(const mavlink_message_t* msg, mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_named_value_int_encode	common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_named_value_int_encode_chan	common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_named_value_int_get_name	common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_get_name(const mavlink_message_t* msg, char *name)$/;"	f
mavlink_msg_named_value_int_get_time_boot_ms	common/mavlink_msg_named_value_int.h	/^static inline uint32_t mavlink_msg_named_value_int_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_int_get_value	common/mavlink_msg_named_value_int.h	/^static inline int32_t mavlink_msg_named_value_int_get_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_named_value_int_pack	common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_named_value_int_pack_chan	common/mavlink_msg_named_value_int.h	/^static inline uint16_t mavlink_msg_named_value_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_named_value_int_send	common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_send(mavlink_channel_t chan, uint32_t time_boot_ms, const char *name, int32_t value)$/;"	f
mavlink_msg_named_value_int_send_buf	common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, const char *name, int32_t value)$/;"	f
mavlink_msg_named_value_int_send_struct	common/mavlink_msg_named_value_int.h	/^static inline void mavlink_msg_named_value_int_send_struct(mavlink_channel_t chan, const mavlink_named_value_int_t* named_value_int)$/;"	f
mavlink_msg_nav_controller_output_decode	common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_decode(const mavlink_message_t* msg, mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_nav_controller_output_encode	common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_nav_controller_output_encode_chan	common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_nav_controller_output_get_alt_error	common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_alt_error(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_aspd_error	common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_aspd_error(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_nav_bearing	common/mavlink_msg_nav_controller_output.h	/^static inline int16_t mavlink_msg_nav_controller_output_get_nav_bearing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_nav_pitch	common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_nav_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_nav_roll	common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_nav_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_target_bearing	common/mavlink_msg_nav_controller_output.h	/^static inline int16_t mavlink_msg_nav_controller_output_get_target_bearing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_wp_dist	common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_get_wp_dist(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_get_xtrack_error	common/mavlink_msg_nav_controller_output.h	/^static inline float mavlink_msg_nav_controller_output_get_xtrack_error(const mavlink_message_t* msg)$/;"	f
mavlink_msg_nav_controller_output_pack	common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_nav_controller_output_pack_chan	common/mavlink_msg_nav_controller_output.h	/^static inline uint16_t mavlink_msg_nav_controller_output_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_nav_controller_output_send	common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_send(mavlink_channel_t chan, float nav_roll, float nav_pitch, int16_t nav_bearing, int16_t target_bearing, uint16_t wp_dist, float alt_error, float aspd_error, float xtrack_error)$/;"	f
mavlink_msg_nav_controller_output_send_buf	common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  float nav_roll, float nav_pitch, int16_t nav_bearing, int16_t target_bearing, uint16_t wp_dist, float alt_error, float aspd_error, float xtrack_error)$/;"	f
mavlink_msg_nav_controller_output_send_struct	common/mavlink_msg_nav_controller_output.h	/^static inline void mavlink_msg_nav_controller_output_send_struct(mavlink_channel_t chan, const mavlink_nav_controller_output_t* nav_controller_output)$/;"	f
mavlink_msg_optical_flow_decode	common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_decode(const mavlink_message_t* msg, mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_optical_flow_encode	common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_optical_flow_encode_chan	common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_optical_flow_get_flow_comp_m_x	common/mavlink_msg_optical_flow.h	/^static inline float mavlink_msg_optical_flow_get_flow_comp_m_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_flow_comp_m_y	common/mavlink_msg_optical_flow.h	/^static inline float mavlink_msg_optical_flow_get_flow_comp_m_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_flow_x	common/mavlink_msg_optical_flow.h	/^static inline int16_t mavlink_msg_optical_flow_get_flow_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_flow_y	common/mavlink_msg_optical_flow.h	/^static inline int16_t mavlink_msg_optical_flow_get_flow_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_ground_distance	common/mavlink_msg_optical_flow.h	/^static inline float mavlink_msg_optical_flow_get_ground_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_quality	common/mavlink_msg_optical_flow.h	/^static inline uint8_t mavlink_msg_optical_flow_get_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_sensor_id	common/mavlink_msg_optical_flow.h	/^static inline uint8_t mavlink_msg_optical_flow_get_sensor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_get_time_usec	common/mavlink_msg_optical_flow.h	/^static inline uint64_t mavlink_msg_optical_flow_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_pack	common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_optical_flow_pack_chan	common/mavlink_msg_optical_flow.h	/^static inline uint16_t mavlink_msg_optical_flow_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_optical_flow_rad_decode	common/mavlink_msg_optical_flow_rad.h	/^static inline void mavlink_msg_optical_flow_rad_decode(const mavlink_message_t* msg, mavlink_optical_flow_rad_t* optical_flow_rad)$/;"	f
mavlink_msg_optical_flow_rad_encode	common/mavlink_msg_optical_flow_rad.h	/^static inline uint16_t mavlink_msg_optical_flow_rad_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_optical_flow_rad_t* optical_flow_rad)$/;"	f
mavlink_msg_optical_flow_rad_encode_chan	common/mavlink_msg_optical_flow_rad.h	/^static inline uint16_t mavlink_msg_optical_flow_rad_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_optical_flow_rad_t* optical_flow_rad)$/;"	f
mavlink_msg_optical_flow_rad_get_distance	common/mavlink_msg_optical_flow_rad.h	/^static inline float mavlink_msg_optical_flow_rad_get_distance(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_integrated_x	common/mavlink_msg_optical_flow_rad.h	/^static inline float mavlink_msg_optical_flow_rad_get_integrated_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_integrated_xgyro	common/mavlink_msg_optical_flow_rad.h	/^static inline float mavlink_msg_optical_flow_rad_get_integrated_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_integrated_y	common/mavlink_msg_optical_flow_rad.h	/^static inline float mavlink_msg_optical_flow_rad_get_integrated_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_integrated_ygyro	common/mavlink_msg_optical_flow_rad.h	/^static inline float mavlink_msg_optical_flow_rad_get_integrated_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_integrated_zgyro	common/mavlink_msg_optical_flow_rad.h	/^static inline float mavlink_msg_optical_flow_rad_get_integrated_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_integration_time_us	common/mavlink_msg_optical_flow_rad.h	/^static inline uint32_t mavlink_msg_optical_flow_rad_get_integration_time_us(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_quality	common/mavlink_msg_optical_flow_rad.h	/^static inline uint8_t mavlink_msg_optical_flow_rad_get_quality(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_sensor_id	common/mavlink_msg_optical_flow_rad.h	/^static inline uint8_t mavlink_msg_optical_flow_rad_get_sensor_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_temperature	common/mavlink_msg_optical_flow_rad.h	/^static inline int16_t mavlink_msg_optical_flow_rad_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_time_delta_distance_us	common/mavlink_msg_optical_flow_rad.h	/^static inline uint32_t mavlink_msg_optical_flow_rad_get_time_delta_distance_us(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_get_time_usec	common/mavlink_msg_optical_flow_rad.h	/^static inline uint64_t mavlink_msg_optical_flow_rad_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_optical_flow_rad_pack	common/mavlink_msg_optical_flow_rad.h	/^static inline uint16_t mavlink_msg_optical_flow_rad_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_optical_flow_rad_pack_chan	common/mavlink_msg_optical_flow_rad.h	/^static inline uint16_t mavlink_msg_optical_flow_rad_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_optical_flow_rad_send	common/mavlink_msg_optical_flow_rad.h	/^static inline void mavlink_msg_optical_flow_rad_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, uint32_t integration_time_us, float integrated_x, float integrated_y, float integrated_xgyro, float integrated_ygyro, float integrated_zgyro, int16_t temperature, uint8_t quality, uint32_t time_delta_distance_us, float distance)$/;"	f
mavlink_msg_optical_flow_rad_send_buf	common/mavlink_msg_optical_flow_rad.h	/^static inline void mavlink_msg_optical_flow_rad_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t sensor_id, uint32_t integration_time_us, float integrated_x, float integrated_y, float integrated_xgyro, float integrated_ygyro, float integrated_zgyro, int16_t temperature, uint8_t quality, uint32_t time_delta_distance_us, float distance)$/;"	f
mavlink_msg_optical_flow_rad_send_struct	common/mavlink_msg_optical_flow_rad.h	/^static inline void mavlink_msg_optical_flow_rad_send_struct(mavlink_channel_t chan, const mavlink_optical_flow_rad_t* optical_flow_rad)$/;"	f
mavlink_msg_optical_flow_send	common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_optical_flow_send_buf	common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t sensor_id, int16_t flow_x, int16_t flow_y, float flow_comp_m_x, float flow_comp_m_y, uint8_t quality, float ground_distance)$/;"	f
mavlink_msg_optical_flow_send_struct	common/mavlink_msg_optical_flow.h	/^static inline void mavlink_msg_optical_flow_send_struct(mavlink_channel_t chan, const mavlink_optical_flow_t* optical_flow)$/;"	f
mavlink_msg_param_map_rc_decode	common/mavlink_msg_param_map_rc.h	/^static inline void mavlink_msg_param_map_rc_decode(const mavlink_message_t* msg, mavlink_param_map_rc_t* param_map_rc)$/;"	f
mavlink_msg_param_map_rc_encode	common/mavlink_msg_param_map_rc.h	/^static inline uint16_t mavlink_msg_param_map_rc_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_map_rc_t* param_map_rc)$/;"	f
mavlink_msg_param_map_rc_encode_chan	common/mavlink_msg_param_map_rc.h	/^static inline uint16_t mavlink_msg_param_map_rc_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_map_rc_t* param_map_rc)$/;"	f
mavlink_msg_param_map_rc_get_param_id	common/mavlink_msg_param_map_rc.h	/^static inline uint16_t mavlink_msg_param_map_rc_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_map_rc_get_param_index	common/mavlink_msg_param_map_rc.h	/^static inline int16_t mavlink_msg_param_map_rc_get_param_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_param_value0	common/mavlink_msg_param_map_rc.h	/^static inline float mavlink_msg_param_map_rc_get_param_value0(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_param_value_max	common/mavlink_msg_param_map_rc.h	/^static inline float mavlink_msg_param_map_rc_get_param_value_max(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_param_value_min	common/mavlink_msg_param_map_rc.h	/^static inline float mavlink_msg_param_map_rc_get_param_value_min(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_parameter_rc_channel_index	common/mavlink_msg_param_map_rc.h	/^static inline uint8_t mavlink_msg_param_map_rc_get_parameter_rc_channel_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_scale	common/mavlink_msg_param_map_rc.h	/^static inline float mavlink_msg_param_map_rc_get_scale(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_target_component	common/mavlink_msg_param_map_rc.h	/^static inline uint8_t mavlink_msg_param_map_rc_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_get_target_system	common/mavlink_msg_param_map_rc.h	/^static inline uint8_t mavlink_msg_param_map_rc_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_map_rc_pack	common/mavlink_msg_param_map_rc.h	/^static inline uint16_t mavlink_msg_param_map_rc_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_param_map_rc_pack_chan	common/mavlink_msg_param_map_rc.h	/^static inline uint16_t mavlink_msg_param_map_rc_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_param_map_rc_send	common/mavlink_msg_param_map_rc.h	/^static inline void mavlink_msg_param_map_rc_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index, uint8_t parameter_rc_channel_index, float param_value0, float scale, float param_value_min, float param_value_max)$/;"	f
mavlink_msg_param_map_rc_send_buf	common/mavlink_msg_param_map_rc.h	/^static inline void mavlink_msg_param_map_rc_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index, uint8_t parameter_rc_channel_index, float param_value0, float scale, float param_value_min, float param_value_max)$/;"	f
mavlink_msg_param_map_rc_send_struct	common/mavlink_msg_param_map_rc.h	/^static inline void mavlink_msg_param_map_rc_send_struct(mavlink_channel_t chan, const mavlink_param_map_rc_t* param_map_rc)$/;"	f
mavlink_msg_param_request_list_decode	common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_decode(const mavlink_message_t* msg, mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_list_encode	common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_list_encode_chan	common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_list_get_target_component	common/mavlink_msg_param_request_list.h	/^static inline uint8_t mavlink_msg_param_request_list_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_list_get_target_system	common/mavlink_msg_param_request_list.h	/^static inline uint8_t mavlink_msg_param_request_list_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_list_pack	common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_param_request_list_pack_chan	common/mavlink_msg_param_request_list.h	/^static inline uint16_t mavlink_msg_param_request_list_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_param_request_list_send	common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_param_request_list_send_buf	common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_param_request_list_send_struct	common/mavlink_msg_param_request_list.h	/^static inline void mavlink_msg_param_request_list_send_struct(mavlink_channel_t chan, const mavlink_param_request_list_t* param_request_list)$/;"	f
mavlink_msg_param_request_read_decode	common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_decode(const mavlink_message_t* msg, mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_request_read_encode	common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_request_read_encode_chan	common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_request_read_get_param_id	common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_request_read_get_param_index	common/mavlink_msg_param_request_read.h	/^static inline int16_t mavlink_msg_param_request_read_get_param_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_read_get_target_component	common/mavlink_msg_param_request_read.h	/^static inline uint8_t mavlink_msg_param_request_read_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_read_get_target_system	common/mavlink_msg_param_request_read.h	/^static inline uint8_t mavlink_msg_param_request_read_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_request_read_pack	common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_param_request_read_pack_chan	common/mavlink_msg_param_request_read.h	/^static inline uint16_t mavlink_msg_param_request_read_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_param_request_read_send	common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index)$/;"	f
mavlink_msg_param_request_read_send_buf	common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, const char *param_id, int16_t param_index)$/;"	f
mavlink_msg_param_request_read_send_struct	common/mavlink_msg_param_request_read.h	/^static inline void mavlink_msg_param_request_read_send_struct(mavlink_channel_t chan, const mavlink_param_request_read_t* param_request_read)$/;"	f
mavlink_msg_param_set_decode	common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_decode(const mavlink_message_t* msg, mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_set_encode	common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_set_encode_chan	common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_set_get_param_id	common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_set_get_param_type	common/mavlink_msg_param_set.h	/^static inline uint8_t mavlink_msg_param_set_get_param_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_get_param_value	common/mavlink_msg_param_set.h	/^static inline float mavlink_msg_param_set_get_param_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_get_target_component	common/mavlink_msg_param_set.h	/^static inline uint8_t mavlink_msg_param_set_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_get_target_system	common/mavlink_msg_param_set.h	/^static inline uint8_t mavlink_msg_param_set_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_set_pack	common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_param_set_pack_chan	common/mavlink_msg_param_set.h	/^static inline uint16_t mavlink_msg_param_set_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_param_set_send	common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const char *param_id, float param_value, uint8_t param_type)$/;"	f
mavlink_msg_param_set_send_buf	common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, const char *param_id, float param_value, uint8_t param_type)$/;"	f
mavlink_msg_param_set_send_struct	common/mavlink_msg_param_set.h	/^static inline void mavlink_msg_param_set_send_struct(mavlink_channel_t chan, const mavlink_param_set_t* param_set)$/;"	f
mavlink_msg_param_value_decode	common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_decode(const mavlink_message_t* msg, mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_param_value_encode	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_param_value_encode_chan	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_param_value_get_param_count	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_get_param_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_get_param_id	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_get_param_id(const mavlink_message_t* msg, char *param_id)$/;"	f
mavlink_msg_param_value_get_param_index	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_get_param_index(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_get_param_type	common/mavlink_msg_param_value.h	/^static inline uint8_t mavlink_msg_param_value_get_param_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_get_param_value	common/mavlink_msg_param_value.h	/^static inline float mavlink_msg_param_value_get_param_value(const mavlink_message_t* msg)$/;"	f
mavlink_msg_param_value_pack	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_param_value_pack_chan	common/mavlink_msg_param_value.h	/^static inline uint16_t mavlink_msg_param_value_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_param_value_send	common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_send(mavlink_channel_t chan, const char *param_id, float param_value, uint8_t param_type, uint16_t param_count, uint16_t param_index)$/;"	f
mavlink_msg_param_value_send_buf	common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  const char *param_id, float param_value, uint8_t param_type, uint16_t param_count, uint16_t param_index)$/;"	f
mavlink_msg_param_value_send_struct	common/mavlink_msg_param_value.h	/^static inline void mavlink_msg_param_value_send_struct(mavlink_channel_t chan, const mavlink_param_value_t* param_value)$/;"	f
mavlink_msg_ping_decode	common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_decode(const mavlink_message_t* msg, mavlink_ping_t* ping)$/;"	f
mavlink_msg_ping_encode	common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_ping_t* ping)$/;"	f
mavlink_msg_ping_encode_chan	common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_ping_t* ping)$/;"	f
mavlink_msg_ping_get_seq	common/mavlink_msg_ping.h	/^static inline uint32_t mavlink_msg_ping_get_seq(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_get_target_component	common/mavlink_msg_ping.h	/^static inline uint8_t mavlink_msg_ping_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_get_target_system	common/mavlink_msg_ping.h	/^static inline uint8_t mavlink_msg_ping_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_get_time_usec	common/mavlink_msg_ping.h	/^static inline uint64_t mavlink_msg_ping_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_ping_pack	common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_ping_pack_chan	common/mavlink_msg_ping.h	/^static inline uint16_t mavlink_msg_ping_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_ping_send	common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_send(mavlink_channel_t chan, uint64_t time_usec, uint32_t seq, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_ping_send_buf	common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint32_t seq, uint8_t target_system, uint8_t target_component)$/;"	f
mavlink_msg_ping_send_struct	common/mavlink_msg_ping.h	/^static inline void mavlink_msg_ping_send_struct(mavlink_channel_t chan, const mavlink_ping_t* ping)$/;"	f
mavlink_msg_position_target_global_int_decode	common/mavlink_msg_position_target_global_int.h	/^static inline void mavlink_msg_position_target_global_int_decode(const mavlink_message_t* msg, mavlink_position_target_global_int_t* position_target_global_int)$/;"	f
mavlink_msg_position_target_global_int_encode	common/mavlink_msg_position_target_global_int.h	/^static inline uint16_t mavlink_msg_position_target_global_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_position_target_global_int_t* position_target_global_int)$/;"	f
mavlink_msg_position_target_global_int_encode_chan	common/mavlink_msg_position_target_global_int.h	/^static inline uint16_t mavlink_msg_position_target_global_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_position_target_global_int_t* position_target_global_int)$/;"	f
mavlink_msg_position_target_global_int_get_afx	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_afx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_afy	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_afy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_afz	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_afz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_alt	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_coordinate_frame	common/mavlink_msg_position_target_global_int.h	/^static inline uint8_t mavlink_msg_position_target_global_int_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_lat_int	common/mavlink_msg_position_target_global_int.h	/^static inline int32_t mavlink_msg_position_target_global_int_get_lat_int(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_lon_int	common/mavlink_msg_position_target_global_int.h	/^static inline int32_t mavlink_msg_position_target_global_int_get_lon_int(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_time_boot_ms	common/mavlink_msg_position_target_global_int.h	/^static inline uint32_t mavlink_msg_position_target_global_int_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_type_mask	common/mavlink_msg_position_target_global_int.h	/^static inline uint16_t mavlink_msg_position_target_global_int_get_type_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_vx	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_vy	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_vz	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_yaw	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_get_yaw_rate	common/mavlink_msg_position_target_global_int.h	/^static inline float mavlink_msg_position_target_global_int_get_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_global_int_pack	common/mavlink_msg_position_target_global_int.h	/^static inline uint16_t mavlink_msg_position_target_global_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_position_target_global_int_pack_chan	common/mavlink_msg_position_target_global_int.h	/^static inline uint16_t mavlink_msg_position_target_global_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_position_target_global_int_send	common/mavlink_msg_position_target_global_int.h	/^static inline void mavlink_msg_position_target_global_int_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t coordinate_frame, uint16_t type_mask, int32_t lat_int, int32_t lon_int, float alt, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_position_target_global_int_send_buf	common/mavlink_msg_position_target_global_int.h	/^static inline void mavlink_msg_position_target_global_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t coordinate_frame, uint16_t type_mask, int32_t lat_int, int32_t lon_int, float alt, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_position_target_global_int_send_struct	common/mavlink_msg_position_target_global_int.h	/^static inline void mavlink_msg_position_target_global_int_send_struct(mavlink_channel_t chan, const mavlink_position_target_global_int_t* position_target_global_int)$/;"	f
mavlink_msg_position_target_local_ned_decode	common/mavlink_msg_position_target_local_ned.h	/^static inline void mavlink_msg_position_target_local_ned_decode(const mavlink_message_t* msg, mavlink_position_target_local_ned_t* position_target_local_ned)$/;"	f
mavlink_msg_position_target_local_ned_encode	common/mavlink_msg_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_position_target_local_ned_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_position_target_local_ned_t* position_target_local_ned)$/;"	f
mavlink_msg_position_target_local_ned_encode_chan	common/mavlink_msg_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_position_target_local_ned_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_position_target_local_ned_t* position_target_local_ned)$/;"	f
mavlink_msg_position_target_local_ned_get_afx	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_afx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_afy	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_afy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_afz	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_afz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_coordinate_frame	common/mavlink_msg_position_target_local_ned.h	/^static inline uint8_t mavlink_msg_position_target_local_ned_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_time_boot_ms	common/mavlink_msg_position_target_local_ned.h	/^static inline uint32_t mavlink_msg_position_target_local_ned_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_type_mask	common/mavlink_msg_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_position_target_local_ned_get_type_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_vx	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_vy	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_vz	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_x	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_y	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_yaw	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_yaw_rate	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_get_z	common/mavlink_msg_position_target_local_ned.h	/^static inline float mavlink_msg_position_target_local_ned_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_position_target_local_ned_pack	common/mavlink_msg_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_position_target_local_ned_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_position_target_local_ned_pack_chan	common/mavlink_msg_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_position_target_local_ned_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_position_target_local_ned_send	common/mavlink_msg_position_target_local_ned.h	/^static inline void mavlink_msg_position_target_local_ned_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t coordinate_frame, uint16_t type_mask, float x, float y, float z, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_position_target_local_ned_send_buf	common/mavlink_msg_position_target_local_ned.h	/^static inline void mavlink_msg_position_target_local_ned_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t coordinate_frame, uint16_t type_mask, float x, float y, float z, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_position_target_local_ned_send_struct	common/mavlink_msg_position_target_local_ned.h	/^static inline void mavlink_msg_position_target_local_ned_send_struct(mavlink_channel_t chan, const mavlink_position_target_local_ned_t* position_target_local_ned)$/;"	f
mavlink_msg_power_status_decode	common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_decode(const mavlink_message_t* msg, mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_power_status_encode	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_power_status_encode_chan	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_power_status_get_Vcc	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_get_Vcc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_power_status_get_Vservo	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_get_Vservo(const mavlink_message_t* msg)$/;"	f
mavlink_msg_power_status_get_flags	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_power_status_pack	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_power_status_pack_chan	common/mavlink_msg_power_status.h	/^static inline uint16_t mavlink_msg_power_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_power_status_send	common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_send(mavlink_channel_t chan, uint16_t Vcc, uint16_t Vservo, uint16_t flags)$/;"	f
mavlink_msg_power_status_send_buf	common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint16_t Vcc, uint16_t Vservo, uint16_t flags)$/;"	f
mavlink_msg_power_status_send_struct	common/mavlink_msg_power_status.h	/^static inline void mavlink_msg_power_status_send_struct(mavlink_channel_t chan, const mavlink_power_status_t* power_status)$/;"	f
mavlink_msg_radio_status_decode	common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_decode(const mavlink_message_t* msg, mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_radio_status_encode	common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_radio_status_encode_chan	common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_radio_status_get_fixed	common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_get_fixed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_noise	common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_noise(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_remnoise	common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_remnoise(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_remrssi	common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_remrssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_rssi	common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_rxerrors	common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_get_rxerrors(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_get_txbuf	common/mavlink_msg_radio_status.h	/^static inline uint8_t mavlink_msg_radio_status_get_txbuf(const mavlink_message_t* msg)$/;"	f
mavlink_msg_radio_status_pack	common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_radio_status_pack_chan	common/mavlink_msg_radio_status.h	/^static inline uint16_t mavlink_msg_radio_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_radio_status_send	common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_send(mavlink_channel_t chan, uint8_t rssi, uint8_t remrssi, uint8_t txbuf, uint8_t noise, uint8_t remnoise, uint16_t rxerrors, uint16_t fixed)$/;"	f
mavlink_msg_radio_status_send_buf	common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t rssi, uint8_t remrssi, uint8_t txbuf, uint8_t noise, uint8_t remnoise, uint16_t rxerrors, uint16_t fixed)$/;"	f
mavlink_msg_radio_status_send_struct	common/mavlink_msg_radio_status.h	/^static inline void mavlink_msg_radio_status_send_struct(mavlink_channel_t chan, const mavlink_radio_status_t* radio_status)$/;"	f
mavlink_msg_raw_imu_decode	common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_decode(const mavlink_message_t* msg, mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_imu_encode	common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_imu_encode_chan	common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_imu_get_time_usec	common/mavlink_msg_raw_imu.h	/^static inline uint64_t mavlink_msg_raw_imu_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_xacc	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_xgyro	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_xmag	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_yacc	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_ygyro	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_ymag	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_zacc	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_zgyro	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_get_zmag	common/mavlink_msg_raw_imu.h	/^static inline int16_t mavlink_msg_raw_imu_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_imu_pack	common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_raw_imu_pack_chan	common/mavlink_msg_raw_imu.h	/^static inline uint16_t mavlink_msg_raw_imu_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_raw_imu_send	common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_send(mavlink_channel_t chan, uint64_t time_usec, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_raw_imu_send_buf	common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_raw_imu_send_struct	common/mavlink_msg_raw_imu.h	/^static inline void mavlink_msg_raw_imu_send_struct(mavlink_channel_t chan, const mavlink_raw_imu_t* raw_imu)$/;"	f
mavlink_msg_raw_pressure_decode	common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_decode(const mavlink_message_t* msg, mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_raw_pressure_encode	common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_raw_pressure_encode_chan	common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_raw_pressure_get_press_abs	common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_press_abs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_press_diff1	common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_press_diff1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_press_diff2	common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_press_diff2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_temperature	common/mavlink_msg_raw_pressure.h	/^static inline int16_t mavlink_msg_raw_pressure_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_get_time_usec	common/mavlink_msg_raw_pressure.h	/^static inline uint64_t mavlink_msg_raw_pressure_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_raw_pressure_pack	common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_raw_pressure_pack_chan	common/mavlink_msg_raw_pressure.h	/^static inline uint16_t mavlink_msg_raw_pressure_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_raw_pressure_send	common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_send(mavlink_channel_t chan, uint64_t time_usec, int16_t press_abs, int16_t press_diff1, int16_t press_diff2, int16_t temperature)$/;"	f
mavlink_msg_raw_pressure_send_buf	common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, int16_t press_abs, int16_t press_diff1, int16_t press_diff2, int16_t temperature)$/;"	f
mavlink_msg_raw_pressure_send_struct	common/mavlink_msg_raw_pressure.h	/^static inline void mavlink_msg_raw_pressure_send_struct(mavlink_channel_t chan, const mavlink_raw_pressure_t* raw_pressure)$/;"	f
mavlink_msg_rc_channels_decode	common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_decode(const mavlink_message_t* msg, mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_rc_channels_encode	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_rc_channels_encode_chan	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_rc_channels_get_chan10_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan10_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan11_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan11_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan12_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan12_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan13_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan13_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan14_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan14_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan15_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan15_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan16_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan16_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan17_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan17_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan18_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan18_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan1_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan2_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan3_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan4_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan5_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan6_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan7_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan8_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chan9_raw	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_get_chan9_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_chancount	common/mavlink_msg_rc_channels.h	/^static inline uint8_t mavlink_msg_rc_channels_get_chancount(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_rssi	common/mavlink_msg_rc_channels.h	/^static inline uint8_t mavlink_msg_rc_channels_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_get_time_boot_ms	common/mavlink_msg_rc_channels.h	/^static inline uint32_t mavlink_msg_rc_channels_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_decode	common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_decode(const mavlink_message_t* msg, mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_override_encode	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_override_encode_chan	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_override_get_chan1_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan2_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan3_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan4_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan5_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan6_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan7_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_chan8_raw	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_target_component	common/mavlink_msg_rc_channels_override.h	/^static inline uint8_t mavlink_msg_rc_channels_override_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_get_target_system	common/mavlink_msg_rc_channels_override.h	/^static inline uint8_t mavlink_msg_rc_channels_override_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_override_pack	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_rc_channels_override_pack_chan	common/mavlink_msg_rc_channels_override.h	/^static inline uint16_t mavlink_msg_rc_channels_override_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_rc_channels_override_send	common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw)$/;"	f
mavlink_msg_rc_channels_override_send_buf	common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw)$/;"	f
mavlink_msg_rc_channels_override_send_struct	common/mavlink_msg_rc_channels_override.h	/^static inline void mavlink_msg_rc_channels_override_send_struct(mavlink_channel_t chan, const mavlink_rc_channels_override_t* rc_channels_override)$/;"	f
mavlink_msg_rc_channels_pack	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_rc_channels_pack_chan	common/mavlink_msg_rc_channels.h	/^static inline uint16_t mavlink_msg_rc_channels_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_rc_channels_raw_decode	common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_decode(const mavlink_message_t* msg, mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_raw_encode	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_raw_encode_chan	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_raw_get_chan1_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan2_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan3_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan4_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan5_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan6_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan7_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_chan8_raw	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_get_chan8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_port	common/mavlink_msg_rc_channels_raw.h	/^static inline uint8_t mavlink_msg_rc_channels_raw_get_port(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_rssi	common/mavlink_msg_rc_channels_raw.h	/^static inline uint8_t mavlink_msg_rc_channels_raw_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_get_time_boot_ms	common/mavlink_msg_rc_channels_raw.h	/^static inline uint32_t mavlink_msg_rc_channels_raw_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_raw_pack	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_rc_channels_raw_pack_chan	common/mavlink_msg_rc_channels_raw.h	/^static inline uint16_t mavlink_msg_rc_channels_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_rc_channels_raw_send	common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t port, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_raw_send_buf	common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t port, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_raw_send_struct	common/mavlink_msg_rc_channels_raw.h	/^static inline void mavlink_msg_rc_channels_raw_send_struct(mavlink_channel_t chan, const mavlink_rc_channels_raw_t* rc_channels_raw)$/;"	f
mavlink_msg_rc_channels_scaled_decode	common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_decode(const mavlink_message_t* msg, mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_scaled_encode	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_scaled_encode_chan	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan1_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan1_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan2_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan2_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan3_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan3_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan4_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan4_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan5_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan5_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan6_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan6_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan7_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan7_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_chan8_scaled	common/mavlink_msg_rc_channels_scaled.h	/^static inline int16_t mavlink_msg_rc_channels_scaled_get_chan8_scaled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_port	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint8_t mavlink_msg_rc_channels_scaled_get_port(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_rssi	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint8_t mavlink_msg_rc_channels_scaled_get_rssi(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_get_time_boot_ms	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint32_t mavlink_msg_rc_channels_scaled_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_rc_channels_scaled_pack	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_rc_channels_scaled_pack_chan	common/mavlink_msg_rc_channels_scaled.h	/^static inline uint16_t mavlink_msg_rc_channels_scaled_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_rc_channels_scaled_send	common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t port, int16_t chan1_scaled, int16_t chan2_scaled, int16_t chan3_scaled, int16_t chan4_scaled, int16_t chan5_scaled, int16_t chan6_scaled, int16_t chan7_scaled, int16_t chan8_scaled, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_scaled_send_buf	common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t port, int16_t chan1_scaled, int16_t chan2_scaled, int16_t chan3_scaled, int16_t chan4_scaled, int16_t chan5_scaled, int16_t chan6_scaled, int16_t chan7_scaled, int16_t chan8_scaled, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_scaled_send_struct	common/mavlink_msg_rc_channels_scaled.h	/^static inline void mavlink_msg_rc_channels_scaled_send_struct(mavlink_channel_t chan, const mavlink_rc_channels_scaled_t* rc_channels_scaled)$/;"	f
mavlink_msg_rc_channels_send	common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t chancount, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint16_t chan13_raw, uint16_t chan14_raw, uint16_t chan15_raw, uint16_t chan16_raw, uint16_t chan17_raw, uint16_t chan18_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_send_buf	common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t chancount, uint16_t chan1_raw, uint16_t chan2_raw, uint16_t chan3_raw, uint16_t chan4_raw, uint16_t chan5_raw, uint16_t chan6_raw, uint16_t chan7_raw, uint16_t chan8_raw, uint16_t chan9_raw, uint16_t chan10_raw, uint16_t chan11_raw, uint16_t chan12_raw, uint16_t chan13_raw, uint16_t chan14_raw, uint16_t chan15_raw, uint16_t chan16_raw, uint16_t chan17_raw, uint16_t chan18_raw, uint8_t rssi)$/;"	f
mavlink_msg_rc_channels_send_struct	common/mavlink_msg_rc_channels.h	/^static inline void mavlink_msg_rc_channels_send_struct(mavlink_channel_t chan, const mavlink_rc_channels_t* rc_channels)$/;"	f
mavlink_msg_request_data_stream_decode	common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_decode(const mavlink_message_t* msg, mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_request_data_stream_encode	common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_request_data_stream_encode_chan	common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_request_data_stream_get_req_message_rate	common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_get_req_message_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_req_stream_id	common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_req_stream_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_start_stop	common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_start_stop(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_target_component	common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_get_target_system	common/mavlink_msg_request_data_stream.h	/^static inline uint8_t mavlink_msg_request_data_stream_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_request_data_stream_pack	common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_request_data_stream_pack_chan	common/mavlink_msg_request_data_stream.h	/^static inline uint16_t mavlink_msg_request_data_stream_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_request_data_stream_send	common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t req_stream_id, uint16_t req_message_rate, uint8_t start_stop)$/;"	f
mavlink_msg_request_data_stream_send_buf	common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint8_t req_stream_id, uint16_t req_message_rate, uint8_t start_stop)$/;"	f
mavlink_msg_request_data_stream_send_struct	common/mavlink_msg_request_data_stream.h	/^static inline void mavlink_msg_request_data_stream_send_struct(mavlink_channel_t chan, const mavlink_request_data_stream_t* request_data_stream)$/;"	f
mavlink_msg_resource_request_decode	common/mavlink_msg_resource_request.h	/^static inline void mavlink_msg_resource_request_decode(const mavlink_message_t* msg, mavlink_resource_request_t* resource_request)$/;"	f
mavlink_msg_resource_request_encode	common/mavlink_msg_resource_request.h	/^static inline uint16_t mavlink_msg_resource_request_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_resource_request_t* resource_request)$/;"	f
mavlink_msg_resource_request_encode_chan	common/mavlink_msg_resource_request.h	/^static inline uint16_t mavlink_msg_resource_request_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_resource_request_t* resource_request)$/;"	f
mavlink_msg_resource_request_get_request_id	common/mavlink_msg_resource_request.h	/^static inline uint8_t mavlink_msg_resource_request_get_request_id(const mavlink_message_t* msg)$/;"	f
mavlink_msg_resource_request_get_storage	common/mavlink_msg_resource_request.h	/^static inline uint16_t mavlink_msg_resource_request_get_storage(const mavlink_message_t* msg, uint8_t *storage)$/;"	f
mavlink_msg_resource_request_get_transfer_type	common/mavlink_msg_resource_request.h	/^static inline uint8_t mavlink_msg_resource_request_get_transfer_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_resource_request_get_uri	common/mavlink_msg_resource_request.h	/^static inline uint16_t mavlink_msg_resource_request_get_uri(const mavlink_message_t* msg, uint8_t *uri)$/;"	f
mavlink_msg_resource_request_get_uri_type	common/mavlink_msg_resource_request.h	/^static inline uint8_t mavlink_msg_resource_request_get_uri_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_resource_request_pack	common/mavlink_msg_resource_request.h	/^static inline uint16_t mavlink_msg_resource_request_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_resource_request_pack_chan	common/mavlink_msg_resource_request.h	/^static inline uint16_t mavlink_msg_resource_request_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_resource_request_send	common/mavlink_msg_resource_request.h	/^static inline void mavlink_msg_resource_request_send(mavlink_channel_t chan, uint8_t request_id, uint8_t uri_type, const uint8_t *uri, uint8_t transfer_type, const uint8_t *storage)$/;"	f
mavlink_msg_resource_request_send_buf	common/mavlink_msg_resource_request.h	/^static inline void mavlink_msg_resource_request_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t request_id, uint8_t uri_type, const uint8_t *uri, uint8_t transfer_type, const uint8_t *storage)$/;"	f
mavlink_msg_resource_request_send_struct	common/mavlink_msg_resource_request.h	/^static inline void mavlink_msg_resource_request_send_struct(mavlink_channel_t chan, const mavlink_resource_request_t* resource_request)$/;"	f
mavlink_msg_safety_allowed_area_decode	common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_decode(const mavlink_message_t* msg, mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_allowed_area_encode	common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_allowed_area_encode_chan	common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_allowed_area_get_frame	common/mavlink_msg_safety_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_allowed_area_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p1x	common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p1x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p1y	common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p1y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p1z	common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p1z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p2x	common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p2x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p2y	common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p2y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_get_p2z	common/mavlink_msg_safety_allowed_area.h	/^static inline float mavlink_msg_safety_allowed_area_get_p2z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_allowed_area_pack	common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_safety_allowed_area_pack_chan	common/mavlink_msg_safety_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_allowed_area_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_safety_allowed_area_send	common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_send(mavlink_channel_t chan, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_allowed_area_send_buf	common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_allowed_area_send_struct	common/mavlink_msg_safety_allowed_area.h	/^static inline void mavlink_msg_safety_allowed_area_send_struct(mavlink_channel_t chan, const mavlink_safety_allowed_area_t* safety_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_decode	common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_decode(const mavlink_message_t* msg, mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_encode	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_encode_chan	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_safety_set_allowed_area_get_frame	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_set_allowed_area_get_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p1x	common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p1x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p1y	common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p1y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p1z	common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p1z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p2x	common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p2x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p2y	common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p2y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_p2z	common/mavlink_msg_safety_set_allowed_area.h	/^static inline float mavlink_msg_safety_set_allowed_area_get_p2z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_target_component	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_set_allowed_area_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_get_target_system	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint8_t mavlink_msg_safety_set_allowed_area_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_safety_set_allowed_area_pack	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_safety_set_allowed_area_pack_chan	common/mavlink_msg_safety_set_allowed_area.h	/^static inline uint16_t mavlink_msg_safety_set_allowed_area_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_safety_set_allowed_area_send	common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_set_allowed_area_send_buf	common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, uint8_t frame, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)$/;"	f
mavlink_msg_safety_set_allowed_area_send_struct	common/mavlink_msg_safety_set_allowed_area.h	/^static inline void mavlink_msg_safety_set_allowed_area_send_struct(mavlink_channel_t chan, const mavlink_safety_set_allowed_area_t* safety_set_allowed_area)$/;"	f
mavlink_msg_scaled_imu2_decode	common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_decode(const mavlink_message_t* msg, mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu2_encode	common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu2_encode_chan	common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu2_get_time_boot_ms	common/mavlink_msg_scaled_imu2.h	/^static inline uint32_t mavlink_msg_scaled_imu2_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_xacc	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_xgyro	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_xmag	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_yacc	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_ygyro	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_ymag	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_zacc	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_zgyro	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_get_zmag	common/mavlink_msg_scaled_imu2.h	/^static inline int16_t mavlink_msg_scaled_imu2_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu2_pack	common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_scaled_imu2_pack_chan	common/mavlink_msg_scaled_imu2.h	/^static inline uint16_t mavlink_msg_scaled_imu2_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_scaled_imu2_send	common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_send(mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu2_send_buf	common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu2_send_struct	common/mavlink_msg_scaled_imu2.h	/^static inline void mavlink_msg_scaled_imu2_send_struct(mavlink_channel_t chan, const mavlink_scaled_imu2_t* scaled_imu2)$/;"	f
mavlink_msg_scaled_imu3_decode	common/mavlink_msg_scaled_imu3.h	/^static inline void mavlink_msg_scaled_imu3_decode(const mavlink_message_t* msg, mavlink_scaled_imu3_t* scaled_imu3)$/;"	f
mavlink_msg_scaled_imu3_encode	common/mavlink_msg_scaled_imu3.h	/^static inline uint16_t mavlink_msg_scaled_imu3_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_imu3_t* scaled_imu3)$/;"	f
mavlink_msg_scaled_imu3_encode_chan	common/mavlink_msg_scaled_imu3.h	/^static inline uint16_t mavlink_msg_scaled_imu3_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_imu3_t* scaled_imu3)$/;"	f
mavlink_msg_scaled_imu3_get_time_boot_ms	common/mavlink_msg_scaled_imu3.h	/^static inline uint32_t mavlink_msg_scaled_imu3_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_xacc	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_xgyro	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_xmag	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_yacc	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_ygyro	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_ymag	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_zacc	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_zgyro	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_get_zmag	common/mavlink_msg_scaled_imu3.h	/^static inline int16_t mavlink_msg_scaled_imu3_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu3_pack	common/mavlink_msg_scaled_imu3.h	/^static inline uint16_t mavlink_msg_scaled_imu3_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_scaled_imu3_pack_chan	common/mavlink_msg_scaled_imu3.h	/^static inline uint16_t mavlink_msg_scaled_imu3_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_scaled_imu3_send	common/mavlink_msg_scaled_imu3.h	/^static inline void mavlink_msg_scaled_imu3_send(mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu3_send_buf	common/mavlink_msg_scaled_imu3.h	/^static inline void mavlink_msg_scaled_imu3_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu3_send_struct	common/mavlink_msg_scaled_imu3.h	/^static inline void mavlink_msg_scaled_imu3_send_struct(mavlink_channel_t chan, const mavlink_scaled_imu3_t* scaled_imu3)$/;"	f
mavlink_msg_scaled_imu_decode	common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_decode(const mavlink_message_t* msg, mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_imu_encode	common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_imu_encode_chan	common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_imu_get_time_boot_ms	common/mavlink_msg_scaled_imu.h	/^static inline uint32_t mavlink_msg_scaled_imu_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_xacc	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_xgyro	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_xmag	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_xmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_yacc	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_ygyro	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_ymag	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_ymag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_zacc	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_zgyro	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_get_zmag	common/mavlink_msg_scaled_imu.h	/^static inline int16_t mavlink_msg_scaled_imu_get_zmag(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_imu_pack	common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_scaled_imu_pack_chan	common/mavlink_msg_scaled_imu.h	/^static inline uint16_t mavlink_msg_scaled_imu_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_scaled_imu_send	common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_send(mavlink_channel_t chan, uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu_send_buf	common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, int16_t xacc, int16_t yacc, int16_t zacc, int16_t xgyro, int16_t ygyro, int16_t zgyro, int16_t xmag, int16_t ymag, int16_t zmag)$/;"	f
mavlink_msg_scaled_imu_send_struct	common/mavlink_msg_scaled_imu.h	/^static inline void mavlink_msg_scaled_imu_send_struct(mavlink_channel_t chan, const mavlink_scaled_imu_t* scaled_imu)$/;"	f
mavlink_msg_scaled_pressure2_decode	common/mavlink_msg_scaled_pressure2.h	/^static inline void mavlink_msg_scaled_pressure2_decode(const mavlink_message_t* msg, mavlink_scaled_pressure2_t* scaled_pressure2)$/;"	f
mavlink_msg_scaled_pressure2_encode	common/mavlink_msg_scaled_pressure2.h	/^static inline uint16_t mavlink_msg_scaled_pressure2_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_pressure2_t* scaled_pressure2)$/;"	f
mavlink_msg_scaled_pressure2_encode_chan	common/mavlink_msg_scaled_pressure2.h	/^static inline uint16_t mavlink_msg_scaled_pressure2_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_pressure2_t* scaled_pressure2)$/;"	f
mavlink_msg_scaled_pressure2_get_press_abs	common/mavlink_msg_scaled_pressure2.h	/^static inline float mavlink_msg_scaled_pressure2_get_press_abs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure2_get_press_diff	common/mavlink_msg_scaled_pressure2.h	/^static inline float mavlink_msg_scaled_pressure2_get_press_diff(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure2_get_temperature	common/mavlink_msg_scaled_pressure2.h	/^static inline int16_t mavlink_msg_scaled_pressure2_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure2_get_time_boot_ms	common/mavlink_msg_scaled_pressure2.h	/^static inline uint32_t mavlink_msg_scaled_pressure2_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure2_pack	common/mavlink_msg_scaled_pressure2.h	/^static inline uint16_t mavlink_msg_scaled_pressure2_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_scaled_pressure2_pack_chan	common/mavlink_msg_scaled_pressure2.h	/^static inline uint16_t mavlink_msg_scaled_pressure2_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_scaled_pressure2_send	common/mavlink_msg_scaled_pressure2.h	/^static inline void mavlink_msg_scaled_pressure2_send(mavlink_channel_t chan, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure2_send_buf	common/mavlink_msg_scaled_pressure2.h	/^static inline void mavlink_msg_scaled_pressure2_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure2_send_struct	common/mavlink_msg_scaled_pressure2.h	/^static inline void mavlink_msg_scaled_pressure2_send_struct(mavlink_channel_t chan, const mavlink_scaled_pressure2_t* scaled_pressure2)$/;"	f
mavlink_msg_scaled_pressure3_decode	common/mavlink_msg_scaled_pressure3.h	/^static inline void mavlink_msg_scaled_pressure3_decode(const mavlink_message_t* msg, mavlink_scaled_pressure3_t* scaled_pressure3)$/;"	f
mavlink_msg_scaled_pressure3_encode	common/mavlink_msg_scaled_pressure3.h	/^static inline uint16_t mavlink_msg_scaled_pressure3_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_pressure3_t* scaled_pressure3)$/;"	f
mavlink_msg_scaled_pressure3_encode_chan	common/mavlink_msg_scaled_pressure3.h	/^static inline uint16_t mavlink_msg_scaled_pressure3_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_pressure3_t* scaled_pressure3)$/;"	f
mavlink_msg_scaled_pressure3_get_press_abs	common/mavlink_msg_scaled_pressure3.h	/^static inline float mavlink_msg_scaled_pressure3_get_press_abs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure3_get_press_diff	common/mavlink_msg_scaled_pressure3.h	/^static inline float mavlink_msg_scaled_pressure3_get_press_diff(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure3_get_temperature	common/mavlink_msg_scaled_pressure3.h	/^static inline int16_t mavlink_msg_scaled_pressure3_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure3_get_time_boot_ms	common/mavlink_msg_scaled_pressure3.h	/^static inline uint32_t mavlink_msg_scaled_pressure3_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure3_pack	common/mavlink_msg_scaled_pressure3.h	/^static inline uint16_t mavlink_msg_scaled_pressure3_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_scaled_pressure3_pack_chan	common/mavlink_msg_scaled_pressure3.h	/^static inline uint16_t mavlink_msg_scaled_pressure3_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_scaled_pressure3_send	common/mavlink_msg_scaled_pressure3.h	/^static inline void mavlink_msg_scaled_pressure3_send(mavlink_channel_t chan, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure3_send_buf	common/mavlink_msg_scaled_pressure3.h	/^static inline void mavlink_msg_scaled_pressure3_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure3_send_struct	common/mavlink_msg_scaled_pressure3.h	/^static inline void mavlink_msg_scaled_pressure3_send_struct(mavlink_channel_t chan, const mavlink_scaled_pressure3_t* scaled_pressure3)$/;"	f
mavlink_msg_scaled_pressure_decode	common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_decode(const mavlink_message_t* msg, mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_scaled_pressure_encode	common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_scaled_pressure_encode_chan	common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_scaled_pressure_get_press_abs	common/mavlink_msg_scaled_pressure.h	/^static inline float mavlink_msg_scaled_pressure_get_press_abs(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_get_press_diff	common/mavlink_msg_scaled_pressure.h	/^static inline float mavlink_msg_scaled_pressure_get_press_diff(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_get_temperature	common/mavlink_msg_scaled_pressure.h	/^static inline int16_t mavlink_msg_scaled_pressure_get_temperature(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_get_time_boot_ms	common/mavlink_msg_scaled_pressure.h	/^static inline uint32_t mavlink_msg_scaled_pressure_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_scaled_pressure_pack	common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_scaled_pressure_pack_chan	common/mavlink_msg_scaled_pressure.h	/^static inline uint16_t mavlink_msg_scaled_pressure_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_scaled_pressure_send	common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_send(mavlink_channel_t chan, uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure_send_buf	common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, float press_abs, float press_diff, int16_t temperature)$/;"	f
mavlink_msg_scaled_pressure_send_struct	common/mavlink_msg_scaled_pressure.h	/^static inline void mavlink_msg_scaled_pressure_send_struct(mavlink_channel_t chan, const mavlink_scaled_pressure_t* scaled_pressure)$/;"	f
mavlink_msg_serial_control_decode	common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_decode(const mavlink_message_t* msg, mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_serial_control_encode	common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_serial_control_encode_chan	common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_serial_control_get_baudrate	common/mavlink_msg_serial_control.h	/^static inline uint32_t mavlink_msg_serial_control_get_baudrate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_count	common/mavlink_msg_serial_control.h	/^static inline uint8_t mavlink_msg_serial_control_get_count(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_data	common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_get_data(const mavlink_message_t* msg, uint8_t *data)$/;"	f
mavlink_msg_serial_control_get_device	common/mavlink_msg_serial_control.h	/^static inline uint8_t mavlink_msg_serial_control_get_device(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_flags	common/mavlink_msg_serial_control.h	/^static inline uint8_t mavlink_msg_serial_control_get_flags(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_get_timeout	common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_get_timeout(const mavlink_message_t* msg)$/;"	f
mavlink_msg_serial_control_pack	common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_serial_control_pack_chan	common/mavlink_msg_serial_control.h	/^static inline uint16_t mavlink_msg_serial_control_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_serial_control_send	common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_send(mavlink_channel_t chan, uint8_t device, uint8_t flags, uint16_t timeout, uint32_t baudrate, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_serial_control_send_buf	common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t device, uint8_t flags, uint16_t timeout, uint32_t baudrate, uint8_t count, const uint8_t *data)$/;"	f
mavlink_msg_serial_control_send_struct	common/mavlink_msg_serial_control.h	/^static inline void mavlink_msg_serial_control_send_struct(mavlink_channel_t chan, const mavlink_serial_control_t* serial_control)$/;"	f
mavlink_msg_servo_output_raw_decode	common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_decode(const mavlink_message_t* msg, mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_servo_output_raw_encode	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_servo_output_raw_encode_chan	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_servo_output_raw_get_port	common/mavlink_msg_servo_output_raw.h	/^static inline uint8_t mavlink_msg_servo_output_raw_get_port(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo1_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo1_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo2_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo2_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo3_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo3_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo4_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo4_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo5_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo5_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo6_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo6_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo7_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo7_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_servo8_raw	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_get_servo8_raw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_get_time_usec	common/mavlink_msg_servo_output_raw.h	/^static inline uint32_t mavlink_msg_servo_output_raw_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_servo_output_raw_pack	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_servo_output_raw_pack_chan	common/mavlink_msg_servo_output_raw.h	/^static inline uint16_t mavlink_msg_servo_output_raw_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_servo_output_raw_send	common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_send(mavlink_channel_t chan, uint32_t time_usec, uint8_t port, uint16_t servo1_raw, uint16_t servo2_raw, uint16_t servo3_raw, uint16_t servo4_raw, uint16_t servo5_raw, uint16_t servo6_raw, uint16_t servo7_raw, uint16_t servo8_raw)$/;"	f
mavlink_msg_servo_output_raw_send_buf	common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_usec, uint8_t port, uint16_t servo1_raw, uint16_t servo2_raw, uint16_t servo3_raw, uint16_t servo4_raw, uint16_t servo5_raw, uint16_t servo6_raw, uint16_t servo7_raw, uint16_t servo8_raw)$/;"	f
mavlink_msg_servo_output_raw_send_struct	common/mavlink_msg_servo_output_raw.h	/^static inline void mavlink_msg_servo_output_raw_send_struct(mavlink_channel_t chan, const mavlink_servo_output_raw_t* servo_output_raw)$/;"	f
mavlink_msg_set_actuator_control_target_decode	common/mavlink_msg_set_actuator_control_target.h	/^static inline void mavlink_msg_set_actuator_control_target_decode(const mavlink_message_t* msg, mavlink_set_actuator_control_target_t* set_actuator_control_target)$/;"	f
mavlink_msg_set_actuator_control_target_encode	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint16_t mavlink_msg_set_actuator_control_target_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_actuator_control_target_t* set_actuator_control_target)$/;"	f
mavlink_msg_set_actuator_control_target_encode_chan	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint16_t mavlink_msg_set_actuator_control_target_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_actuator_control_target_t* set_actuator_control_target)$/;"	f
mavlink_msg_set_actuator_control_target_get_controls	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint16_t mavlink_msg_set_actuator_control_target_get_controls(const mavlink_message_t* msg, float *controls)$/;"	f
mavlink_msg_set_actuator_control_target_get_group_mlx	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint8_t mavlink_msg_set_actuator_control_target_get_group_mlx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_actuator_control_target_get_target_component	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint8_t mavlink_msg_set_actuator_control_target_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_actuator_control_target_get_target_system	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint8_t mavlink_msg_set_actuator_control_target_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_actuator_control_target_get_time_usec	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint64_t mavlink_msg_set_actuator_control_target_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_actuator_control_target_pack	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint16_t mavlink_msg_set_actuator_control_target_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_actuator_control_target_pack_chan	common/mavlink_msg_set_actuator_control_target.h	/^static inline uint16_t mavlink_msg_set_actuator_control_target_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_actuator_control_target_send	common/mavlink_msg_set_actuator_control_target.h	/^static inline void mavlink_msg_set_actuator_control_target_send(mavlink_channel_t chan, uint64_t time_usec, uint8_t group_mlx, uint8_t target_system, uint8_t target_component, const float *controls)$/;"	f
mavlink_msg_set_actuator_control_target_send_buf	common/mavlink_msg_set_actuator_control_target.h	/^static inline void mavlink_msg_set_actuator_control_target_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, uint8_t group_mlx, uint8_t target_system, uint8_t target_component, const float *controls)$/;"	f
mavlink_msg_set_actuator_control_target_send_struct	common/mavlink_msg_set_actuator_control_target.h	/^static inline void mavlink_msg_set_actuator_control_target_send_struct(mavlink_channel_t chan, const mavlink_set_actuator_control_target_t* set_actuator_control_target)$/;"	f
mavlink_msg_set_attitude_target_decode	common/mavlink_msg_set_attitude_target.h	/^static inline void mavlink_msg_set_attitude_target_decode(const mavlink_message_t* msg, mavlink_set_attitude_target_t* set_attitude_target)$/;"	f
mavlink_msg_set_attitude_target_encode	common/mavlink_msg_set_attitude_target.h	/^static inline uint16_t mavlink_msg_set_attitude_target_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_attitude_target_t* set_attitude_target)$/;"	f
mavlink_msg_set_attitude_target_encode_chan	common/mavlink_msg_set_attitude_target.h	/^static inline uint16_t mavlink_msg_set_attitude_target_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_attitude_target_t* set_attitude_target)$/;"	f
mavlink_msg_set_attitude_target_get_body_pitch_rate	common/mavlink_msg_set_attitude_target.h	/^static inline float mavlink_msg_set_attitude_target_get_body_pitch_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_body_roll_rate	common/mavlink_msg_set_attitude_target.h	/^static inline float mavlink_msg_set_attitude_target_get_body_roll_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_body_yaw_rate	common/mavlink_msg_set_attitude_target.h	/^static inline float mavlink_msg_set_attitude_target_get_body_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_q	common/mavlink_msg_set_attitude_target.h	/^static inline uint16_t mavlink_msg_set_attitude_target_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_set_attitude_target_get_target_component	common/mavlink_msg_set_attitude_target.h	/^static inline uint8_t mavlink_msg_set_attitude_target_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_target_system	common/mavlink_msg_set_attitude_target.h	/^static inline uint8_t mavlink_msg_set_attitude_target_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_thrust	common/mavlink_msg_set_attitude_target.h	/^static inline float mavlink_msg_set_attitude_target_get_thrust(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_time_boot_ms	common/mavlink_msg_set_attitude_target.h	/^static inline uint32_t mavlink_msg_set_attitude_target_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_get_type_mask	common/mavlink_msg_set_attitude_target.h	/^static inline uint8_t mavlink_msg_set_attitude_target_get_type_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_attitude_target_pack	common/mavlink_msg_set_attitude_target.h	/^static inline uint16_t mavlink_msg_set_attitude_target_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_attitude_target_pack_chan	common/mavlink_msg_set_attitude_target.h	/^static inline uint16_t mavlink_msg_set_attitude_target_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_attitude_target_send	common/mavlink_msg_set_attitude_target.h	/^static inline void mavlink_msg_set_attitude_target_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t target_system, uint8_t target_component, uint8_t type_mask, const float *q, float body_roll_rate, float body_pitch_rate, float body_yaw_rate, float thrust)$/;"	f
mavlink_msg_set_attitude_target_send_buf	common/mavlink_msg_set_attitude_target.h	/^static inline void mavlink_msg_set_attitude_target_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t target_system, uint8_t target_component, uint8_t type_mask, const float *q, float body_roll_rate, float body_pitch_rate, float body_yaw_rate, float thrust)$/;"	f
mavlink_msg_set_attitude_target_send_struct	common/mavlink_msg_set_attitude_target.h	/^static inline void mavlink_msg_set_attitude_target_send_struct(mavlink_channel_t chan, const mavlink_set_attitude_target_t* set_attitude_target)$/;"	f
mavlink_msg_set_gps_global_origin_decode	common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_decode(const mavlink_message_t* msg, mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_gps_global_origin_encode	common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_gps_global_origin_encode_chan	common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_gps_global_origin_get_altitude	common/mavlink_msg_set_gps_global_origin.h	/^static inline int32_t mavlink_msg_set_gps_global_origin_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_get_latitude	common/mavlink_msg_set_gps_global_origin.h	/^static inline int32_t mavlink_msg_set_gps_global_origin_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_get_longitude	common/mavlink_msg_set_gps_global_origin.h	/^static inline int32_t mavlink_msg_set_gps_global_origin_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_get_target_system	common/mavlink_msg_set_gps_global_origin.h	/^static inline uint8_t mavlink_msg_set_gps_global_origin_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_gps_global_origin_pack	common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_gps_global_origin_pack_chan	common/mavlink_msg_set_gps_global_origin.h	/^static inline uint16_t mavlink_msg_set_gps_global_origin_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_gps_global_origin_send	common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_send(mavlink_channel_t chan, uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_set_gps_global_origin_send_buf	common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude)$/;"	f
mavlink_msg_set_gps_global_origin_send_struct	common/mavlink_msg_set_gps_global_origin.h	/^static inline void mavlink_msg_set_gps_global_origin_send_struct(mavlink_channel_t chan, const mavlink_set_gps_global_origin_t* set_gps_global_origin)$/;"	f
mavlink_msg_set_home_position_decode	common/mavlink_msg_set_home_position.h	/^static inline void mavlink_msg_set_home_position_decode(const mavlink_message_t* msg, mavlink_set_home_position_t* set_home_position)$/;"	f
mavlink_msg_set_home_position_encode	common/mavlink_msg_set_home_position.h	/^static inline uint16_t mavlink_msg_set_home_position_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_home_position_t* set_home_position)$/;"	f
mavlink_msg_set_home_position_encode_chan	common/mavlink_msg_set_home_position.h	/^static inline uint16_t mavlink_msg_set_home_position_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_home_position_t* set_home_position)$/;"	f
mavlink_msg_set_home_position_get_altitude	common/mavlink_msg_set_home_position.h	/^static inline int32_t mavlink_msg_set_home_position_get_altitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_approach_x	common/mavlink_msg_set_home_position.h	/^static inline float mavlink_msg_set_home_position_get_approach_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_approach_y	common/mavlink_msg_set_home_position.h	/^static inline float mavlink_msg_set_home_position_get_approach_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_approach_z	common/mavlink_msg_set_home_position.h	/^static inline float mavlink_msg_set_home_position_get_approach_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_latitude	common/mavlink_msg_set_home_position.h	/^static inline int32_t mavlink_msg_set_home_position_get_latitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_longitude	common/mavlink_msg_set_home_position.h	/^static inline int32_t mavlink_msg_set_home_position_get_longitude(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_q	common/mavlink_msg_set_home_position.h	/^static inline uint16_t mavlink_msg_set_home_position_get_q(const mavlink_message_t* msg, float *q)$/;"	f
mavlink_msg_set_home_position_get_target_system	common/mavlink_msg_set_home_position.h	/^static inline uint8_t mavlink_msg_set_home_position_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_x	common/mavlink_msg_set_home_position.h	/^static inline float mavlink_msg_set_home_position_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_y	common/mavlink_msg_set_home_position.h	/^static inline float mavlink_msg_set_home_position_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_get_z	common/mavlink_msg_set_home_position.h	/^static inline float mavlink_msg_set_home_position_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_home_position_pack	common/mavlink_msg_set_home_position.h	/^static inline uint16_t mavlink_msg_set_home_position_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_home_position_pack_chan	common/mavlink_msg_set_home_position.h	/^static inline uint16_t mavlink_msg_set_home_position_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_home_position_send	common/mavlink_msg_set_home_position.h	/^static inline void mavlink_msg_set_home_position_send(mavlink_channel_t chan, uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude, float x, float y, float z, const float *q, float approach_x, float approach_y, float approach_z)$/;"	f
mavlink_msg_set_home_position_send_buf	common/mavlink_msg_set_home_position.h	/^static inline void mavlink_msg_set_home_position_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, int32_t latitude, int32_t longitude, int32_t altitude, float x, float y, float z, const float *q, float approach_x, float approach_y, float approach_z)$/;"	f
mavlink_msg_set_home_position_send_struct	common/mavlink_msg_set_home_position.h	/^static inline void mavlink_msg_set_home_position_send_struct(mavlink_channel_t chan, const mavlink_set_home_position_t* set_home_position)$/;"	f
mavlink_msg_set_mode_decode	common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_decode(const mavlink_message_t* msg, mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_mode_encode	common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_mode_encode_chan	common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_mode_get_base_mode	common/mavlink_msg_set_mode.h	/^static inline uint8_t mavlink_msg_set_mode_get_base_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_mode_get_custom_mode	common/mavlink_msg_set_mode.h	/^static inline uint32_t mavlink_msg_set_mode_get_custom_mode(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_mode_get_target_system	common/mavlink_msg_set_mode.h	/^static inline uint8_t mavlink_msg_set_mode_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_mode_pack	common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_mode_pack_chan	common/mavlink_msg_set_mode.h	/^static inline uint16_t mavlink_msg_set_mode_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_mode_send	common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_send(mavlink_channel_t chan, uint8_t target_system, uint8_t base_mode, uint32_t custom_mode)$/;"	f
mavlink_msg_set_mode_send_buf	common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t base_mode, uint32_t custom_mode)$/;"	f
mavlink_msg_set_mode_send_struct	common/mavlink_msg_set_mode.h	/^static inline void mavlink_msg_set_mode_send_struct(mavlink_channel_t chan, const mavlink_set_mode_t* set_mode)$/;"	f
mavlink_msg_set_position_target_global_int_decode	common/mavlink_msg_set_position_target_global_int.h	/^static inline void mavlink_msg_set_position_target_global_int_decode(const mavlink_message_t* msg, mavlink_set_position_target_global_int_t* set_position_target_global_int)$/;"	f
mavlink_msg_set_position_target_global_int_encode	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint16_t mavlink_msg_set_position_target_global_int_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_position_target_global_int_t* set_position_target_global_int)$/;"	f
mavlink_msg_set_position_target_global_int_encode_chan	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint16_t mavlink_msg_set_position_target_global_int_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_position_target_global_int_t* set_position_target_global_int)$/;"	f
mavlink_msg_set_position_target_global_int_get_afx	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_afx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_afy	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_afy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_afz	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_afz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_alt	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_coordinate_frame	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint8_t mavlink_msg_set_position_target_global_int_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_lat_int	common/mavlink_msg_set_position_target_global_int.h	/^static inline int32_t mavlink_msg_set_position_target_global_int_get_lat_int(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_lon_int	common/mavlink_msg_set_position_target_global_int.h	/^static inline int32_t mavlink_msg_set_position_target_global_int_get_lon_int(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_target_component	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint8_t mavlink_msg_set_position_target_global_int_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_target_system	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint8_t mavlink_msg_set_position_target_global_int_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_time_boot_ms	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint32_t mavlink_msg_set_position_target_global_int_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_type_mask	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint16_t mavlink_msg_set_position_target_global_int_get_type_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_vx	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_vy	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_vz	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_yaw	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_get_yaw_rate	common/mavlink_msg_set_position_target_global_int.h	/^static inline float mavlink_msg_set_position_target_global_int_get_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_global_int_pack	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint16_t mavlink_msg_set_position_target_global_int_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_position_target_global_int_pack_chan	common/mavlink_msg_set_position_target_global_int.h	/^static inline uint16_t mavlink_msg_set_position_target_global_int_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_position_target_global_int_send	common/mavlink_msg_set_position_target_global_int.h	/^static inline void mavlink_msg_set_position_target_global_int_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, uint16_t type_mask, int32_t lat_int, int32_t lon_int, float alt, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_set_position_target_global_int_send_buf	common/mavlink_msg_set_position_target_global_int.h	/^static inline void mavlink_msg_set_position_target_global_int_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, uint16_t type_mask, int32_t lat_int, int32_t lon_int, float alt, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_set_position_target_global_int_send_struct	common/mavlink_msg_set_position_target_global_int.h	/^static inline void mavlink_msg_set_position_target_global_int_send_struct(mavlink_channel_t chan, const mavlink_set_position_target_global_int_t* set_position_target_global_int)$/;"	f
mavlink_msg_set_position_target_local_ned_decode	common/mavlink_msg_set_position_target_local_ned.h	/^static inline void mavlink_msg_set_position_target_local_ned_decode(const mavlink_message_t* msg, mavlink_set_position_target_local_ned_t* set_position_target_local_ned)$/;"	f
mavlink_msg_set_position_target_local_ned_encode	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_set_position_target_local_ned_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_set_position_target_local_ned_t* set_position_target_local_ned)$/;"	f
mavlink_msg_set_position_target_local_ned_encode_chan	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_set_position_target_local_ned_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_set_position_target_local_ned_t* set_position_target_local_ned)$/;"	f
mavlink_msg_set_position_target_local_ned_get_afx	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_afx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_afy	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_afy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_afz	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_afz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_coordinate_frame	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint8_t mavlink_msg_set_position_target_local_ned_get_coordinate_frame(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_target_component	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint8_t mavlink_msg_set_position_target_local_ned_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_target_system	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint8_t mavlink_msg_set_position_target_local_ned_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_time_boot_ms	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint32_t mavlink_msg_set_position_target_local_ned_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_type_mask	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_set_position_target_local_ned_get_type_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_vx	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_vx(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_vy	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_vy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_vz	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_vz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_x	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_y	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_yaw	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_yaw_rate	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_yaw_rate(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_get_z	common/mavlink_msg_set_position_target_local_ned.h	/^static inline float mavlink_msg_set_position_target_local_ned_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_set_position_target_local_ned_pack	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_set_position_target_local_ned_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_set_position_target_local_ned_pack_chan	common/mavlink_msg_set_position_target_local_ned.h	/^static inline uint16_t mavlink_msg_set_position_target_local_ned_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_set_position_target_local_ned_send	common/mavlink_msg_set_position_target_local_ned.h	/^static inline void mavlink_msg_set_position_target_local_ned_send(mavlink_channel_t chan, uint32_t time_boot_ms, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, uint16_t type_mask, float x, float y, float z, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_set_position_target_local_ned_send_buf	common/mavlink_msg_set_position_target_local_ned.h	/^static inline void mavlink_msg_set_position_target_local_ned_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t time_boot_ms, uint8_t target_system, uint8_t target_component, uint8_t coordinate_frame, uint16_t type_mask, float x, float y, float z, float vx, float vy, float vz, float afx, float afy, float afz, float yaw, float yaw_rate)$/;"	f
mavlink_msg_set_position_target_local_ned_send_struct	common/mavlink_msg_set_position_target_local_ned.h	/^static inline void mavlink_msg_set_position_target_local_ned_send_struct(mavlink_channel_t chan, const mavlink_set_position_target_local_ned_t* set_position_target_local_ned)$/;"	f
mavlink_msg_setup_signing_decode	common/mavlink_msg_setup_signing.h	/^static inline void mavlink_msg_setup_signing_decode(const mavlink_message_t* msg, mavlink_setup_signing_t* setup_signing)$/;"	f
mavlink_msg_setup_signing_encode	common/mavlink_msg_setup_signing.h	/^static inline uint16_t mavlink_msg_setup_signing_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_setup_signing_t* setup_signing)$/;"	f
mavlink_msg_setup_signing_encode_chan	common/mavlink_msg_setup_signing.h	/^static inline uint16_t mavlink_msg_setup_signing_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_setup_signing_t* setup_signing)$/;"	f
mavlink_msg_setup_signing_get_initial_timestamp	common/mavlink_msg_setup_signing.h	/^static inline uint64_t mavlink_msg_setup_signing_get_initial_timestamp(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setup_signing_get_secret_key	common/mavlink_msg_setup_signing.h	/^static inline uint16_t mavlink_msg_setup_signing_get_secret_key(const mavlink_message_t* msg, uint8_t *secret_key)$/;"	f
mavlink_msg_setup_signing_get_target_component	common/mavlink_msg_setup_signing.h	/^static inline uint8_t mavlink_msg_setup_signing_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setup_signing_get_target_system	common/mavlink_msg_setup_signing.h	/^static inline uint8_t mavlink_msg_setup_signing_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_setup_signing_pack	common/mavlink_msg_setup_signing.h	/^static inline uint16_t mavlink_msg_setup_signing_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_setup_signing_pack_chan	common/mavlink_msg_setup_signing.h	/^static inline uint16_t mavlink_msg_setup_signing_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_setup_signing_send	common/mavlink_msg_setup_signing.h	/^static inline void mavlink_msg_setup_signing_send(mavlink_channel_t chan, uint8_t target_system, uint8_t target_component, const uint8_t *secret_key, uint64_t initial_timestamp)$/;"	f
mavlink_msg_setup_signing_send_buf	common/mavlink_msg_setup_signing.h	/^static inline void mavlink_msg_setup_signing_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_system, uint8_t target_component, const uint8_t *secret_key, uint64_t initial_timestamp)$/;"	f
mavlink_msg_setup_signing_send_struct	common/mavlink_msg_setup_signing.h	/^static inline void mavlink_msg_setup_signing_send_struct(mavlink_channel_t chan, const mavlink_setup_signing_t* setup_signing)$/;"	f
mavlink_msg_sim_state_decode	common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_decode(const mavlink_message_t* msg, mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_sim_state_encode	common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_sim_state_encode_chan	common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_sim_state_get_alt	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_lat	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_lon	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_pitch	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q1	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q2	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q3	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_q4	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_q4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_roll	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_std_dev_horz	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_std_dev_horz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_std_dev_vert	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_std_dev_vert(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_vd	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_vd(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_ve	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_ve(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_vn	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_vn(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_xacc	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_xacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_xgyro	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_xgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_yacc	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_yacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_yaw	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_ygyro	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_ygyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_zacc	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_zacc(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_get_zgyro	common/mavlink_msg_sim_state.h	/^static inline float mavlink_msg_sim_state_get_zgyro(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sim_state_pack	common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_sim_state_pack_chan	common/mavlink_msg_sim_state.h	/^static inline uint16_t mavlink_msg_sim_state_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_sim_state_send	common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_send(mavlink_channel_t chan, float q1, float q2, float q3, float q4, float roll, float pitch, float yaw, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float lat, float lon, float alt, float std_dev_horz, float std_dev_vert, float vn, float ve, float vd)$/;"	f
mavlink_msg_sim_state_send_buf	common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  float q1, float q2, float q3, float q4, float roll, float pitch, float yaw, float xacc, float yacc, float zacc, float xgyro, float ygyro, float zgyro, float lat, float lon, float alt, float std_dev_horz, float std_dev_vert, float vn, float ve, float vd)$/;"	f
mavlink_msg_sim_state_send_struct	common/mavlink_msg_sim_state.h	/^static inline void mavlink_msg_sim_state_send_struct(mavlink_channel_t chan, const mavlink_sim_state_t* sim_state)$/;"	f
mavlink_msg_statustext_decode	common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_decode(const mavlink_message_t* msg, mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_statustext_encode	common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_statustext_encode_chan	common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_statustext_get_severity	common/mavlink_msg_statustext.h	/^static inline uint8_t mavlink_msg_statustext_get_severity(const mavlink_message_t* msg)$/;"	f
mavlink_msg_statustext_get_text	common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_get_text(const mavlink_message_t* msg, char *text)$/;"	f
mavlink_msg_statustext_pack	common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_statustext_pack_chan	common/mavlink_msg_statustext.h	/^static inline uint16_t mavlink_msg_statustext_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_statustext_send	common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_send(mavlink_channel_t chan, uint8_t severity, const char *text)$/;"	f
mavlink_msg_statustext_send_buf	common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t severity, const char *text)$/;"	f
mavlink_msg_statustext_send_struct	common/mavlink_msg_statustext.h	/^static inline void mavlink_msg_statustext_send_struct(mavlink_channel_t chan, const mavlink_statustext_t* statustext)$/;"	f
mavlink_msg_sys_status_decode	common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_decode(const mavlink_message_t* msg, mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_sys_status_encode	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_sys_status_encode_chan	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_sys_status_get_battery_remaining	common/mavlink_msg_sys_status.h	/^static inline int8_t mavlink_msg_sys_status_get_battery_remaining(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_current_battery	common/mavlink_msg_sys_status.h	/^static inline int16_t mavlink_msg_sys_status_get_current_battery(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_drop_rate_comm	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_drop_rate_comm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_comm	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_comm(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count1	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count2	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count3	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count3(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_errors_count4	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_errors_count4(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_load	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_load(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_onboard_control_sensors_enabled	common/mavlink_msg_sys_status.h	/^static inline uint32_t mavlink_msg_sys_status_get_onboard_control_sensors_enabled(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_onboard_control_sensors_health	common/mavlink_msg_sys_status.h	/^static inline uint32_t mavlink_msg_sys_status_get_onboard_control_sensors_health(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_onboard_control_sensors_present	common/mavlink_msg_sys_status.h	/^static inline uint32_t mavlink_msg_sys_status_get_onboard_control_sensors_present(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_get_voltage_battery	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_get_voltage_battery(const mavlink_message_t* msg)$/;"	f
mavlink_msg_sys_status_pack	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_sys_status_pack_chan	common/mavlink_msg_sys_status.h	/^static inline uint16_t mavlink_msg_sys_status_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_sys_status_send	common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_send(mavlink_channel_t chan, uint32_t onboard_control_sensors_present, uint32_t onboard_control_sensors_enabled, uint32_t onboard_control_sensors_health, uint16_t load, uint16_t voltage_battery, int16_t current_battery, int8_t battery_remaining, uint16_t drop_rate_comm, uint16_t errors_comm, uint16_t errors_count1, uint16_t errors_count2, uint16_t errors_count3, uint16_t errors_count4)$/;"	f
mavlink_msg_sys_status_send_buf	common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint32_t onboard_control_sensors_present, uint32_t onboard_control_sensors_enabled, uint32_t onboard_control_sensors_health, uint16_t load, uint16_t voltage_battery, int16_t current_battery, int8_t battery_remaining, uint16_t drop_rate_comm, uint16_t errors_comm, uint16_t errors_count1, uint16_t errors_count2, uint16_t errors_count3, uint16_t errors_count4)$/;"	f
mavlink_msg_sys_status_send_struct	common/mavlink_msg_sys_status.h	/^static inline void mavlink_msg_sys_status_send_struct(mavlink_channel_t chan, const mavlink_sys_status_t* sys_status)$/;"	f
mavlink_msg_system_time_decode	common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_decode(const mavlink_message_t* msg, mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_system_time_encode	common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_system_time_encode_chan	common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_system_time_get_time_boot_ms	common/mavlink_msg_system_time.h	/^static inline uint32_t mavlink_msg_system_time_get_time_boot_ms(const mavlink_message_t* msg)$/;"	f
mavlink_msg_system_time_get_time_unix_usec	common/mavlink_msg_system_time.h	/^static inline uint64_t mavlink_msg_system_time_get_time_unix_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_system_time_pack	common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_system_time_pack_chan	common/mavlink_msg_system_time.h	/^static inline uint16_t mavlink_msg_system_time_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_system_time_send	common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_send(mavlink_channel_t chan, uint64_t time_unix_usec, uint32_t time_boot_ms)$/;"	f
mavlink_msg_system_time_send_buf	common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_unix_usec, uint32_t time_boot_ms)$/;"	f
mavlink_msg_system_time_send_struct	common/mavlink_msg_system_time.h	/^static inline void mavlink_msg_system_time_send_struct(mavlink_channel_t chan, const mavlink_system_time_t* system_time)$/;"	f
mavlink_msg_terrain_check_decode	common/mavlink_msg_terrain_check.h	/^static inline void mavlink_msg_terrain_check_decode(const mavlink_message_t* msg, mavlink_terrain_check_t* terrain_check)$/;"	f
mavlink_msg_terrain_check_encode	common/mavlink_msg_terrain_check.h	/^static inline uint16_t mavlink_msg_terrain_check_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_terrain_check_t* terrain_check)$/;"	f
mavlink_msg_terrain_check_encode_chan	common/mavlink_msg_terrain_check.h	/^static inline uint16_t mavlink_msg_terrain_check_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_terrain_check_t* terrain_check)$/;"	f
mavlink_msg_terrain_check_get_lat	common/mavlink_msg_terrain_check.h	/^static inline int32_t mavlink_msg_terrain_check_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_check_get_lon	common/mavlink_msg_terrain_check.h	/^static inline int32_t mavlink_msg_terrain_check_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_check_pack	common/mavlink_msg_terrain_check.h	/^static inline uint16_t mavlink_msg_terrain_check_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_terrain_check_pack_chan	common/mavlink_msg_terrain_check.h	/^static inline uint16_t mavlink_msg_terrain_check_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_terrain_check_send	common/mavlink_msg_terrain_check.h	/^static inline void mavlink_msg_terrain_check_send(mavlink_channel_t chan, int32_t lat, int32_t lon)$/;"	f
mavlink_msg_terrain_check_send_buf	common/mavlink_msg_terrain_check.h	/^static inline void mavlink_msg_terrain_check_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int32_t lat, int32_t lon)$/;"	f
mavlink_msg_terrain_check_send_struct	common/mavlink_msg_terrain_check.h	/^static inline void mavlink_msg_terrain_check_send_struct(mavlink_channel_t chan, const mavlink_terrain_check_t* terrain_check)$/;"	f
mavlink_msg_terrain_data_decode	common/mavlink_msg_terrain_data.h	/^static inline void mavlink_msg_terrain_data_decode(const mavlink_message_t* msg, mavlink_terrain_data_t* terrain_data)$/;"	f
mavlink_msg_terrain_data_encode	common/mavlink_msg_terrain_data.h	/^static inline uint16_t mavlink_msg_terrain_data_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_terrain_data_t* terrain_data)$/;"	f
mavlink_msg_terrain_data_encode_chan	common/mavlink_msg_terrain_data.h	/^static inline uint16_t mavlink_msg_terrain_data_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_terrain_data_t* terrain_data)$/;"	f
mavlink_msg_terrain_data_get_data	common/mavlink_msg_terrain_data.h	/^static inline uint16_t mavlink_msg_terrain_data_get_data(const mavlink_message_t* msg, int16_t *data)$/;"	f
mavlink_msg_terrain_data_get_grid_spacing	common/mavlink_msg_terrain_data.h	/^static inline uint16_t mavlink_msg_terrain_data_get_grid_spacing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_data_get_gridbit	common/mavlink_msg_terrain_data.h	/^static inline uint8_t mavlink_msg_terrain_data_get_gridbit(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_data_get_lat	common/mavlink_msg_terrain_data.h	/^static inline int32_t mavlink_msg_terrain_data_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_data_get_lon	common/mavlink_msg_terrain_data.h	/^static inline int32_t mavlink_msg_terrain_data_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_data_pack	common/mavlink_msg_terrain_data.h	/^static inline uint16_t mavlink_msg_terrain_data_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_terrain_data_pack_chan	common/mavlink_msg_terrain_data.h	/^static inline uint16_t mavlink_msg_terrain_data_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_terrain_data_send	common/mavlink_msg_terrain_data.h	/^static inline void mavlink_msg_terrain_data_send(mavlink_channel_t chan, int32_t lat, int32_t lon, uint16_t grid_spacing, uint8_t gridbit, const int16_t *data)$/;"	f
mavlink_msg_terrain_data_send_buf	common/mavlink_msg_terrain_data.h	/^static inline void mavlink_msg_terrain_data_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int32_t lat, int32_t lon, uint16_t grid_spacing, uint8_t gridbit, const int16_t *data)$/;"	f
mavlink_msg_terrain_data_send_struct	common/mavlink_msg_terrain_data.h	/^static inline void mavlink_msg_terrain_data_send_struct(mavlink_channel_t chan, const mavlink_terrain_data_t* terrain_data)$/;"	f
mavlink_msg_terrain_report_decode	common/mavlink_msg_terrain_report.h	/^static inline void mavlink_msg_terrain_report_decode(const mavlink_message_t* msg, mavlink_terrain_report_t* terrain_report)$/;"	f
mavlink_msg_terrain_report_encode	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_terrain_report_t* terrain_report)$/;"	f
mavlink_msg_terrain_report_encode_chan	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_terrain_report_t* terrain_report)$/;"	f
mavlink_msg_terrain_report_get_current_height	common/mavlink_msg_terrain_report.h	/^static inline float mavlink_msg_terrain_report_get_current_height(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_get_lat	common/mavlink_msg_terrain_report.h	/^static inline int32_t mavlink_msg_terrain_report_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_get_loaded	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_get_loaded(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_get_lon	common/mavlink_msg_terrain_report.h	/^static inline int32_t mavlink_msg_terrain_report_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_get_pending	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_get_pending(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_get_spacing	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_get_spacing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_get_terrain_height	common/mavlink_msg_terrain_report.h	/^static inline float mavlink_msg_terrain_report_get_terrain_height(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_report_pack	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_terrain_report_pack_chan	common/mavlink_msg_terrain_report.h	/^static inline uint16_t mavlink_msg_terrain_report_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_terrain_report_send	common/mavlink_msg_terrain_report.h	/^static inline void mavlink_msg_terrain_report_send(mavlink_channel_t chan, int32_t lat, int32_t lon, uint16_t spacing, float terrain_height, float current_height, uint16_t pending, uint16_t loaded)$/;"	f
mavlink_msg_terrain_report_send_buf	common/mavlink_msg_terrain_report.h	/^static inline void mavlink_msg_terrain_report_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int32_t lat, int32_t lon, uint16_t spacing, float terrain_height, float current_height, uint16_t pending, uint16_t loaded)$/;"	f
mavlink_msg_terrain_report_send_struct	common/mavlink_msg_terrain_report.h	/^static inline void mavlink_msg_terrain_report_send_struct(mavlink_channel_t chan, const mavlink_terrain_report_t* terrain_report)$/;"	f
mavlink_msg_terrain_request_decode	common/mavlink_msg_terrain_request.h	/^static inline void mavlink_msg_terrain_request_decode(const mavlink_message_t* msg, mavlink_terrain_request_t* terrain_request)$/;"	f
mavlink_msg_terrain_request_encode	common/mavlink_msg_terrain_request.h	/^static inline uint16_t mavlink_msg_terrain_request_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_terrain_request_t* terrain_request)$/;"	f
mavlink_msg_terrain_request_encode_chan	common/mavlink_msg_terrain_request.h	/^static inline uint16_t mavlink_msg_terrain_request_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_terrain_request_t* terrain_request)$/;"	f
mavlink_msg_terrain_request_get_grid_spacing	common/mavlink_msg_terrain_request.h	/^static inline uint16_t mavlink_msg_terrain_request_get_grid_spacing(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_request_get_lat	common/mavlink_msg_terrain_request.h	/^static inline int32_t mavlink_msg_terrain_request_get_lat(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_request_get_lon	common/mavlink_msg_terrain_request.h	/^static inline int32_t mavlink_msg_terrain_request_get_lon(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_request_get_mask	common/mavlink_msg_terrain_request.h	/^static inline uint64_t mavlink_msg_terrain_request_get_mask(const mavlink_message_t* msg)$/;"	f
mavlink_msg_terrain_request_pack	common/mavlink_msg_terrain_request.h	/^static inline uint16_t mavlink_msg_terrain_request_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_terrain_request_pack_chan	common/mavlink_msg_terrain_request.h	/^static inline uint16_t mavlink_msg_terrain_request_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_terrain_request_send	common/mavlink_msg_terrain_request.h	/^static inline void mavlink_msg_terrain_request_send(mavlink_channel_t chan, int32_t lat, int32_t lon, uint16_t grid_spacing, uint64_t mask)$/;"	f
mavlink_msg_terrain_request_send_buf	common/mavlink_msg_terrain_request.h	/^static inline void mavlink_msg_terrain_request_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int32_t lat, int32_t lon, uint16_t grid_spacing, uint64_t mask)$/;"	f
mavlink_msg_terrain_request_send_struct	common/mavlink_msg_terrain_request.h	/^static inline void mavlink_msg_terrain_request_send_struct(mavlink_channel_t chan, const mavlink_terrain_request_t* terrain_request)$/;"	f
mavlink_msg_timesync_decode	common/mavlink_msg_timesync.h	/^static inline void mavlink_msg_timesync_decode(const mavlink_message_t* msg, mavlink_timesync_t* timesync)$/;"	f
mavlink_msg_timesync_encode	common/mavlink_msg_timesync.h	/^static inline uint16_t mavlink_msg_timesync_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_timesync_t* timesync)$/;"	f
mavlink_msg_timesync_encode_chan	common/mavlink_msg_timesync.h	/^static inline uint16_t mavlink_msg_timesync_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_timesync_t* timesync)$/;"	f
mavlink_msg_timesync_get_tc1	common/mavlink_msg_timesync.h	/^static inline int64_t mavlink_msg_timesync_get_tc1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_timesync_get_ts1	common/mavlink_msg_timesync.h	/^static inline int64_t mavlink_msg_timesync_get_ts1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_timesync_pack	common/mavlink_msg_timesync.h	/^static inline uint16_t mavlink_msg_timesync_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_timesync_pack_chan	common/mavlink_msg_timesync.h	/^static inline uint16_t mavlink_msg_timesync_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_timesync_send	common/mavlink_msg_timesync.h	/^static inline void mavlink_msg_timesync_send(mavlink_channel_t chan, int64_t tc1, int64_t ts1)$/;"	f
mavlink_msg_timesync_send_buf	common/mavlink_msg_timesync.h	/^static inline void mavlink_msg_timesync_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  int64_t tc1, int64_t ts1)$/;"	f
mavlink_msg_timesync_send_struct	common/mavlink_msg_timesync.h	/^static inline void mavlink_msg_timesync_send_struct(mavlink_channel_t chan, const mavlink_timesync_t* timesync)$/;"	f
mavlink_msg_to_send_buffer	mavlink_helpers.h	/^MAVLINK_HELPER uint16_t mavlink_msg_to_send_buffer(uint8_t *buf, const mavlink_message_t *msg)$/;"	f
mavlink_msg_v2_extension_decode	common/mavlink_msg_v2_extension.h	/^static inline void mavlink_msg_v2_extension_decode(const mavlink_message_t* msg, mavlink_v2_extension_t* v2_extension)$/;"	f
mavlink_msg_v2_extension_encode	common/mavlink_msg_v2_extension.h	/^static inline uint16_t mavlink_msg_v2_extension_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_v2_extension_t* v2_extension)$/;"	f
mavlink_msg_v2_extension_encode_chan	common/mavlink_msg_v2_extension.h	/^static inline uint16_t mavlink_msg_v2_extension_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_v2_extension_t* v2_extension)$/;"	f
mavlink_msg_v2_extension_get_message_type	common/mavlink_msg_v2_extension.h	/^static inline uint16_t mavlink_msg_v2_extension_get_message_type(const mavlink_message_t* msg)$/;"	f
mavlink_msg_v2_extension_get_payload	common/mavlink_msg_v2_extension.h	/^static inline uint16_t mavlink_msg_v2_extension_get_payload(const mavlink_message_t* msg, uint8_t *payload)$/;"	f
mavlink_msg_v2_extension_get_target_component	common/mavlink_msg_v2_extension.h	/^static inline uint8_t mavlink_msg_v2_extension_get_target_component(const mavlink_message_t* msg)$/;"	f
mavlink_msg_v2_extension_get_target_network	common/mavlink_msg_v2_extension.h	/^static inline uint8_t mavlink_msg_v2_extension_get_target_network(const mavlink_message_t* msg)$/;"	f
mavlink_msg_v2_extension_get_target_system	common/mavlink_msg_v2_extension.h	/^static inline uint8_t mavlink_msg_v2_extension_get_target_system(const mavlink_message_t* msg)$/;"	f
mavlink_msg_v2_extension_pack	common/mavlink_msg_v2_extension.h	/^static inline uint16_t mavlink_msg_v2_extension_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_v2_extension_pack_chan	common/mavlink_msg_v2_extension.h	/^static inline uint16_t mavlink_msg_v2_extension_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_v2_extension_send	common/mavlink_msg_v2_extension.h	/^static inline void mavlink_msg_v2_extension_send(mavlink_channel_t chan, uint8_t target_network, uint8_t target_system, uint8_t target_component, uint16_t message_type, const uint8_t *payload)$/;"	f
mavlink_msg_v2_extension_send_buf	common/mavlink_msg_v2_extension.h	/^static inline void mavlink_msg_v2_extension_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint8_t target_network, uint8_t target_system, uint8_t target_component, uint16_t message_type, const uint8_t *payload)$/;"	f
mavlink_msg_v2_extension_send_struct	common/mavlink_msg_v2_extension.h	/^static inline void mavlink_msg_v2_extension_send_struct(mavlink_channel_t chan, const mavlink_v2_extension_t* v2_extension)$/;"	f
mavlink_msg_vfr_hud_decode	common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_decode(const mavlink_message_t* msg, mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vfr_hud_encode	common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vfr_hud_encode_chan	common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vfr_hud_get_airspeed	common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_airspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_alt	common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_climb	common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_climb(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_groundspeed	common/mavlink_msg_vfr_hud.h	/^static inline float mavlink_msg_vfr_hud_get_groundspeed(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_heading	common/mavlink_msg_vfr_hud.h	/^static inline int16_t mavlink_msg_vfr_hud_get_heading(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_get_throttle	common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_get_throttle(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vfr_hud_pack	common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_vfr_hud_pack_chan	common/mavlink_msg_vfr_hud.h	/^static inline uint16_t mavlink_msg_vfr_hud_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_vfr_hud_send	common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_send(mavlink_channel_t chan, float airspeed, float groundspeed, int16_t heading, uint16_t throttle, float alt, float climb)$/;"	f
mavlink_msg_vfr_hud_send_buf	common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  float airspeed, float groundspeed, int16_t heading, uint16_t throttle, float alt, float climb)$/;"	f
mavlink_msg_vfr_hud_send_struct	common/mavlink_msg_vfr_hud.h	/^static inline void mavlink_msg_vfr_hud_send_struct(mavlink_channel_t chan, const mavlink_vfr_hud_t* vfr_hud)$/;"	f
mavlink_msg_vibration_decode	common/mavlink_msg_vibration.h	/^static inline void mavlink_msg_vibration_decode(const mavlink_message_t* msg, mavlink_vibration_t* vibration)$/;"	f
mavlink_msg_vibration_encode	common/mavlink_msg_vibration.h	/^static inline uint16_t mavlink_msg_vibration_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vibration_t* vibration)$/;"	f
mavlink_msg_vibration_encode_chan	common/mavlink_msg_vibration.h	/^static inline uint16_t mavlink_msg_vibration_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vibration_t* vibration)$/;"	f
mavlink_msg_vibration_get_clipping_0	common/mavlink_msg_vibration.h	/^static inline uint32_t mavlink_msg_vibration_get_clipping_0(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_get_clipping_1	common/mavlink_msg_vibration.h	/^static inline uint32_t mavlink_msg_vibration_get_clipping_1(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_get_clipping_2	common/mavlink_msg_vibration.h	/^static inline uint32_t mavlink_msg_vibration_get_clipping_2(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_get_time_usec	common/mavlink_msg_vibration.h	/^static inline uint64_t mavlink_msg_vibration_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_get_vibration_x	common/mavlink_msg_vibration.h	/^static inline float mavlink_msg_vibration_get_vibration_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_get_vibration_y	common/mavlink_msg_vibration.h	/^static inline float mavlink_msg_vibration_get_vibration_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_get_vibration_z	common/mavlink_msg_vibration.h	/^static inline float mavlink_msg_vibration_get_vibration_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vibration_pack	common/mavlink_msg_vibration.h	/^static inline uint16_t mavlink_msg_vibration_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_vibration_pack_chan	common/mavlink_msg_vibration.h	/^static inline uint16_t mavlink_msg_vibration_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_vibration_send	common/mavlink_msg_vibration.h	/^static inline void mavlink_msg_vibration_send(mavlink_channel_t chan, uint64_t time_usec, float vibration_x, float vibration_y, float vibration_z, uint32_t clipping_0, uint32_t clipping_1, uint32_t clipping_2)$/;"	f
mavlink_msg_vibration_send_buf	common/mavlink_msg_vibration.h	/^static inline void mavlink_msg_vibration_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float vibration_x, float vibration_y, float vibration_z, uint32_t clipping_0, uint32_t clipping_1, uint32_t clipping_2)$/;"	f
mavlink_msg_vibration_send_struct	common/mavlink_msg_vibration.h	/^static inline void mavlink_msg_vibration_send_struct(mavlink_channel_t chan, const mavlink_vibration_t* vibration)$/;"	f
mavlink_msg_vicon_position_estimate_decode	common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_decode(const mavlink_message_t* msg, mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vicon_position_estimate_encode	common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vicon_position_estimate_encode_chan	common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vicon_position_estimate_get_pitch	common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_roll	common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_usec	common/mavlink_msg_vicon_position_estimate.h	/^static inline uint64_t mavlink_msg_vicon_position_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_x	common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_y	common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_yaw	common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_get_z	common/mavlink_msg_vicon_position_estimate.h	/^static inline float mavlink_msg_vicon_position_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vicon_position_estimate_pack	common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_vicon_position_estimate_pack_chan	common/mavlink_msg_vicon_position_estimate.h	/^static inline uint16_t mavlink_msg_vicon_position_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_vicon_position_estimate_send	common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vicon_position_estimate_send_buf	common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vicon_position_estimate_send_struct	common/mavlink_msg_vicon_position_estimate.h	/^static inline void mavlink_msg_vicon_position_estimate_send_struct(mavlink_channel_t chan, const mavlink_vicon_position_estimate_t* vicon_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_decode	common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_decode(const mavlink_message_t* msg, mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_encode	common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_encode_chan	common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_position_estimate_get_pitch	common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_pitch(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_roll	common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_roll(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_usec	common/mavlink_msg_vision_position_estimate.h	/^static inline uint64_t mavlink_msg_vision_position_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_x	common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_y	common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_yaw	common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_yaw(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_get_z	common/mavlink_msg_vision_position_estimate.h	/^static inline float mavlink_msg_vision_position_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_position_estimate_pack	common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_vision_position_estimate_pack_chan	common/mavlink_msg_vision_position_estimate.h	/^static inline uint16_t mavlink_msg_vision_position_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_vision_position_estimate_send	common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_position_estimate_send_buf	common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t usec, float x, float y, float z, float roll, float pitch, float yaw)$/;"	f
mavlink_msg_vision_position_estimate_send_struct	common/mavlink_msg_vision_position_estimate.h	/^static inline void mavlink_msg_vision_position_estimate_send_struct(mavlink_channel_t chan, const mavlink_vision_position_estimate_t* vision_position_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_decode	common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_decode(const mavlink_message_t* msg, mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_encode	common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_encode_chan	common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_vision_speed_estimate_get_usec	common/mavlink_msg_vision_speed_estimate.h	/^static inline uint64_t mavlink_msg_vision_speed_estimate_get_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_get_x	common/mavlink_msg_vision_speed_estimate.h	/^static inline float mavlink_msg_vision_speed_estimate_get_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_get_y	common/mavlink_msg_vision_speed_estimate.h	/^static inline float mavlink_msg_vision_speed_estimate_get_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_get_z	common/mavlink_msg_vision_speed_estimate.h	/^static inline float mavlink_msg_vision_speed_estimate_get_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_vision_speed_estimate_pack	common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_vision_speed_estimate_pack_chan	common/mavlink_msg_vision_speed_estimate.h	/^static inline uint16_t mavlink_msg_vision_speed_estimate_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_vision_speed_estimate_send	common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_send(mavlink_channel_t chan, uint64_t usec, float x, float y, float z)$/;"	f
mavlink_msg_vision_speed_estimate_send_buf	common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t usec, float x, float y, float z)$/;"	f
mavlink_msg_vision_speed_estimate_send_struct	common/mavlink_msg_vision_speed_estimate.h	/^static inline void mavlink_msg_vision_speed_estimate_send_struct(mavlink_channel_t chan, const mavlink_vision_speed_estimate_t* vision_speed_estimate)$/;"	f
mavlink_msg_wind_cov_decode	common/mavlink_msg_wind_cov.h	/^static inline void mavlink_msg_wind_cov_decode(const mavlink_message_t* msg, mavlink_wind_cov_t* wind_cov)$/;"	f
mavlink_msg_wind_cov_encode	common/mavlink_msg_wind_cov.h	/^static inline uint16_t mavlink_msg_wind_cov_encode(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg, const mavlink_wind_cov_t* wind_cov)$/;"	f
mavlink_msg_wind_cov_encode_chan	common/mavlink_msg_wind_cov.h	/^static inline uint16_t mavlink_msg_wind_cov_encode_chan(uint8_t system_id, uint8_t component_id, uint8_t chan, mavlink_message_t* msg, const mavlink_wind_cov_t* wind_cov)$/;"	f
mavlink_msg_wind_cov_get_horiz_accuracy	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_horiz_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_time_usec	common/mavlink_msg_wind_cov.h	/^static inline uint64_t mavlink_msg_wind_cov_get_time_usec(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_var_horiz	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_var_horiz(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_var_vert	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_var_vert(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_vert_accuracy	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_vert_accuracy(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_wind_alt	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_wind_alt(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_wind_x	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_wind_x(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_wind_y	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_wind_y(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_get_wind_z	common/mavlink_msg_wind_cov.h	/^static inline float mavlink_msg_wind_cov_get_wind_z(const mavlink_message_t* msg)$/;"	f
mavlink_msg_wind_cov_pack	common/mavlink_msg_wind_cov.h	/^static inline uint16_t mavlink_msg_wind_cov_pack(uint8_t system_id, uint8_t component_id, mavlink_message_t* msg,$/;"	f
mavlink_msg_wind_cov_pack_chan	common/mavlink_msg_wind_cov.h	/^static inline uint16_t mavlink_msg_wind_cov_pack_chan(uint8_t system_id, uint8_t component_id, uint8_t chan,$/;"	f
mavlink_msg_wind_cov_send	common/mavlink_msg_wind_cov.h	/^static inline void mavlink_msg_wind_cov_send(mavlink_channel_t chan, uint64_t time_usec, float wind_x, float wind_y, float wind_z, float var_horiz, float var_vert, float wind_alt, float horiz_accuracy, float vert_accuracy)$/;"	f
mavlink_msg_wind_cov_send_buf	common/mavlink_msg_wind_cov.h	/^static inline void mavlink_msg_wind_cov_send_buf(mavlink_message_t *msgbuf, mavlink_channel_t chan,  uint64_t time_usec, float wind_x, float wind_y, float wind_z, float var_horiz, float var_vert, float wind_alt, float horiz_accuracy, float vert_accuracy)$/;"	f
mavlink_msg_wind_cov_send_struct	common/mavlink_msg_wind_cov.h	/^static inline void mavlink_msg_wind_cov_send_struct(mavlink_channel_t chan, const mavlink_wind_cov_t* wind_cov)$/;"	f
mavlink_parse_char	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_parse_char(uint8_t chan, uint8_t c, mavlink_message_t* r_message, mavlink_status_t* r_mavlink_status)$/;"	f
mavlink_parse_state_t	mavlink_types.h	/^} mavlink_parse_state_t; \/\/\/< The state machine for the comm parser$/;"	t	typeref:enum:__anon3
mavlink_quaternion_to_dcm	mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_quaternion_to_dcm(const float quaternion[4], float dcm[3][3])$/;"	f
mavlink_quaternion_to_euler	mavlink_conversions.h	/^MAVLINK_HELPER void mavlink_quaternion_to_euler(const float quaternion[4], float* roll, float* pitch, float* yaw)$/;"	f
mavlink_reset_channel_status	mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_reset_channel_status(uint8_t chan)$/;"	f
mavlink_set_proto_version	mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_set_proto_version(uint8_t chan, unsigned int version)$/;"	f
mavlink_sha256_calc	mavlink_sha256.h	/^static inline void mavlink_sha256_calc(mavlink_sha256_ctx *m, uint32_t *in)$/;"	f
mavlink_sha256_constant_256	mavlink_sha256.h	/^static const uint32_t mavlink_sha256_constant_256[64] = {$/;"	v
mavlink_sha256_ctx	mavlink_sha256.h	/^} mavlink_sha256_ctx;$/;"	t	typeref:struct:__anon5
mavlink_sha256_final_48	mavlink_sha256.h	/^MAVLINK_HELPER void mavlink_sha256_final_48(mavlink_sha256_ctx *m, uint8_t result[6])$/;"	f
mavlink_sha256_init	mavlink_sha256.h	/^MAVLINK_HELPER void mavlink_sha256_init(mavlink_sha256_ctx *m)$/;"	f
mavlink_sha256_update	mavlink_sha256.h	/^MAVLINK_HELPER void mavlink_sha256_update(mavlink_sha256_ctx *m, const void *v, uint32_t len)$/;"	f
mavlink_sign_packet	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t mavlink_sign_packet(mavlink_signing_t *signing,$/;"	f
mavlink_signature_check	mavlink_helpers.h	/^MAVLINK_HELPER bool mavlink_signature_check(mavlink_signing_t *signing,$/;"	f
mavlink_signing_streams_t	mavlink_types.h	/^} mavlink_signing_streams_t;$/;"	t	typeref:struct:__mavlink_signing_streams
mavlink_signing_t	mavlink_types.h	/^} mavlink_signing_t;$/;"	t	typeref:struct:__mavlink_signing
mavlink_start_checksum	mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_start_checksum(mavlink_message_t* msg)$/;"	f
mavlink_status_t	mavlink_types.h	/^} mavlink_status_t;$/;"	t	typeref:struct:__mavlink_status
mavlink_test_actuator_control_target	common/testsuite.h	/^static void mavlink_test_actuator_control_target(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_adsb_vehicle	common/testsuite.h	/^static void mavlink_test_adsb_vehicle(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_all	common/testsuite.h	/^static void mavlink_test_all(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_all	ntian/testsuite.h	/^static void mavlink_test_all(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_altitude	common/testsuite.h	/^static void mavlink_test_altitude(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_att_pos_mocap	common/testsuite.h	/^static void mavlink_test_att_pos_mocap(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_attitude	common/testsuite.h	/^static void mavlink_test_attitude(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_attitude_quaternion	common/testsuite.h	/^static void mavlink_test_attitude_quaternion(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_attitude_quaternion_cov	common/testsuite.h	/^static void mavlink_test_attitude_quaternion_cov(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_attitude_target	common/testsuite.h	/^static void mavlink_test_attitude_target(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_auth_key	common/testsuite.h	/^static void mavlink_test_auth_key(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_autopilot_version	common/testsuite.h	/^static void mavlink_test_autopilot_version(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_battery_status	common/testsuite.h	/^static void mavlink_test_battery_status(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_camera_trigger	common/testsuite.h	/^static void mavlink_test_camera_trigger(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_change_operator_control	common/testsuite.h	/^static void mavlink_test_change_operator_control(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_change_operator_control_ack	common/testsuite.h	/^static void mavlink_test_change_operator_control_ack(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_command_ack	common/testsuite.h	/^static void mavlink_test_command_ack(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_command_int	common/testsuite.h	/^static void mavlink_test_command_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_command_long	common/testsuite.h	/^static void mavlink_test_command_long(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_common	common/testsuite.h	/^static void mavlink_test_common(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_control_system_state	common/testsuite.h	/^static void mavlink_test_control_system_state(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_data_stream	common/testsuite.h	/^static void mavlink_test_data_stream(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_data_transmission_handshake	common/testsuite.h	/^static void mavlink_test_data_transmission_handshake(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_debug	common/testsuite.h	/^static void mavlink_test_debug(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_debug_vect	common/testsuite.h	/^static void mavlink_test_debug_vect(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_distance_sensor	common/testsuite.h	/^static void mavlink_test_distance_sensor(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_encapsulated_data	common/testsuite.h	/^static void mavlink_test_encapsulated_data(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_estimator_status	common/testsuite.h	/^static void mavlink_test_estimator_status(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_extended_sys_state	common/testsuite.h	/^static void mavlink_test_extended_sys_state(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_file_transfer_protocol	common/testsuite.h	/^static void mavlink_test_file_transfer_protocol(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_follow_target	common/testsuite.h	/^static void mavlink_test_follow_target(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_global_position_int	common/testsuite.h	/^static void mavlink_test_global_position_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_global_position_int_cov	common/testsuite.h	/^static void mavlink_test_global_position_int_cov(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_global_vision_position_estimate	common/testsuite.h	/^static void mavlink_test_global_vision_position_estimate(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps2_raw	common/testsuite.h	/^static void mavlink_test_gps2_raw(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps2_rtk	common/testsuite.h	/^static void mavlink_test_gps2_rtk(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_global_origin	common/testsuite.h	/^static void mavlink_test_gps_global_origin(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_inject_data	common/testsuite.h	/^static void mavlink_test_gps_inject_data(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_input	common/testsuite.h	/^static void mavlink_test_gps_input(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_raw_int	common/testsuite.h	/^static void mavlink_test_gps_raw_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_rtcm_data	common/testsuite.h	/^static void mavlink_test_gps_rtcm_data(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_rtk	common/testsuite.h	/^static void mavlink_test_gps_rtk(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_gps_status	common/testsuite.h	/^static void mavlink_test_gps_status(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_heartbeat	common/testsuite.h	/^static void mavlink_test_heartbeat(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_highres_imu	common/testsuite.h	/^static void mavlink_test_highres_imu(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_controls	common/testsuite.h	/^static void mavlink_test_hil_controls(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_gps	common/testsuite.h	/^static void mavlink_test_hil_gps(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_optical_flow	common/testsuite.h	/^static void mavlink_test_hil_optical_flow(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_rc_inputs_raw	common/testsuite.h	/^static void mavlink_test_hil_rc_inputs_raw(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_sensor	common/testsuite.h	/^static void mavlink_test_hil_sensor(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_state	common/testsuite.h	/^static void mavlink_test_hil_state(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_hil_state_quaternion	common/testsuite.h	/^static void mavlink_test_hil_state_quaternion(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_home_position	common/testsuite.h	/^static void mavlink_test_home_position(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_landing_target	common/testsuite.h	/^static void mavlink_test_landing_target(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_local_position_ned	common/testsuite.h	/^static void mavlink_test_local_position_ned(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_local_position_ned_cov	common/testsuite.h	/^static void mavlink_test_local_position_ned_cov(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_local_position_ned_system_global_offset	common/testsuite.h	/^static void mavlink_test_local_position_ned_system_global_offset(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_log_data	common/testsuite.h	/^static void mavlink_test_log_data(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_log_entry	common/testsuite.h	/^static void mavlink_test_log_entry(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_log_erase	common/testsuite.h	/^static void mavlink_test_log_erase(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_log_request_data	common/testsuite.h	/^static void mavlink_test_log_request_data(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_log_request_end	common/testsuite.h	/^static void mavlink_test_log_request_end(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_log_request_list	common/testsuite.h	/^static void mavlink_test_log_request_list(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_manual_control	common/testsuite.h	/^static void mavlink_test_manual_control(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_manual_setpoint	common/testsuite.h	/^static void mavlink_test_manual_setpoint(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_memory_vect	common/testsuite.h	/^static void mavlink_test_memory_vect(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_message_interval	common/testsuite.h	/^static void mavlink_test_message_interval(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_ack	common/testsuite.h	/^static void mavlink_test_mission_ack(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_clear_all	common/testsuite.h	/^static void mavlink_test_mission_clear_all(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_count	common/testsuite.h	/^static void mavlink_test_mission_count(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_current	common/testsuite.h	/^static void mavlink_test_mission_current(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_item	common/testsuite.h	/^static void mavlink_test_mission_item(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_item_int	common/testsuite.h	/^static void mavlink_test_mission_item_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_item_reached	common/testsuite.h	/^static void mavlink_test_mission_item_reached(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_request	common/testsuite.h	/^static void mavlink_test_mission_request(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_request_int	common/testsuite.h	/^static void mavlink_test_mission_request_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_request_list	common/testsuite.h	/^static void mavlink_test_mission_request_list(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_request_partial_list	common/testsuite.h	/^static void mavlink_test_mission_request_partial_list(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_set_current	common/testsuite.h	/^static void mavlink_test_mission_set_current(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mission_write_partial_list	common/testsuite.h	/^static void mavlink_test_mission_write_partial_list(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_mount_gimbal_control	ntian/testsuite.h	/^static void mavlink_test_mount_gimbal_control(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_named_value_float	common/testsuite.h	/^static void mavlink_test_named_value_float(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_named_value_int	common/testsuite.h	/^static void mavlink_test_named_value_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_nav_controller_output	common/testsuite.h	/^static void mavlink_test_nav_controller_output(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_ntian	ntian/testsuite.h	/^static void mavlink_test_ntian(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_optical_flow	common/testsuite.h	/^static void mavlink_test_optical_flow(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_optical_flow_rad	common/testsuite.h	/^static void mavlink_test_optical_flow_rad(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_param_map_rc	common/testsuite.h	/^static void mavlink_test_param_map_rc(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_param_request_list	common/testsuite.h	/^static void mavlink_test_param_request_list(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_param_request_read	common/testsuite.h	/^static void mavlink_test_param_request_read(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_param_set	common/testsuite.h	/^static void mavlink_test_param_set(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_param_value	common/testsuite.h	/^static void mavlink_test_param_value(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_ping	common/testsuite.h	/^static void mavlink_test_ping(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_position_target_global_int	common/testsuite.h	/^static void mavlink_test_position_target_global_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_position_target_local_ned	common/testsuite.h	/^static void mavlink_test_position_target_local_ned(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_power_status	common/testsuite.h	/^static void mavlink_test_power_status(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_radio_status	common/testsuite.h	/^static void mavlink_test_radio_status(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_raw_imu	common/testsuite.h	/^static void mavlink_test_raw_imu(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_raw_pressure	common/testsuite.h	/^static void mavlink_test_raw_pressure(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_rc_channels	common/testsuite.h	/^static void mavlink_test_rc_channels(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_rc_channels_override	common/testsuite.h	/^static void mavlink_test_rc_channels_override(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_rc_channels_raw	common/testsuite.h	/^static void mavlink_test_rc_channels_raw(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_rc_channels_scaled	common/testsuite.h	/^static void mavlink_test_rc_channels_scaled(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_request_data_stream	common/testsuite.h	/^static void mavlink_test_request_data_stream(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_resource_request	common/testsuite.h	/^static void mavlink_test_resource_request(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_safety_allowed_area	common/testsuite.h	/^static void mavlink_test_safety_allowed_area(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_safety_set_allowed_area	common/testsuite.h	/^static void mavlink_test_safety_set_allowed_area(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_scaled_imu	common/testsuite.h	/^static void mavlink_test_scaled_imu(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_scaled_imu2	common/testsuite.h	/^static void mavlink_test_scaled_imu2(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_scaled_imu3	common/testsuite.h	/^static void mavlink_test_scaled_imu3(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_scaled_pressure	common/testsuite.h	/^static void mavlink_test_scaled_pressure(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_scaled_pressure2	common/testsuite.h	/^static void mavlink_test_scaled_pressure2(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_scaled_pressure3	common/testsuite.h	/^static void mavlink_test_scaled_pressure3(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_serial_control	common/testsuite.h	/^static void mavlink_test_serial_control(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_servo_output_raw	common/testsuite.h	/^static void mavlink_test_servo_output_raw(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_actuator_control_target	common/testsuite.h	/^static void mavlink_test_set_actuator_control_target(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_attitude_target	common/testsuite.h	/^static void mavlink_test_set_attitude_target(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_gps_global_origin	common/testsuite.h	/^static void mavlink_test_set_gps_global_origin(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_home_position	common/testsuite.h	/^static void mavlink_test_set_home_position(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_mode	common/testsuite.h	/^static void mavlink_test_set_mode(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_position_target_global_int	common/testsuite.h	/^static void mavlink_test_set_position_target_global_int(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_set_position_target_local_ned	common/testsuite.h	/^static void mavlink_test_set_position_target_local_ned(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_setup_signing	common/testsuite.h	/^static void mavlink_test_setup_signing(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_sim_state	common/testsuite.h	/^static void mavlink_test_sim_state(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_statustext	common/testsuite.h	/^static void mavlink_test_statustext(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_sys_status	common/testsuite.h	/^static void mavlink_test_sys_status(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_system_time	common/testsuite.h	/^static void mavlink_test_system_time(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_terrain_check	common/testsuite.h	/^static void mavlink_test_terrain_check(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_terrain_data	common/testsuite.h	/^static void mavlink_test_terrain_data(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_terrain_report	common/testsuite.h	/^static void mavlink_test_terrain_report(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_terrain_request	common/testsuite.h	/^static void mavlink_test_terrain_request(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_timesync	common/testsuite.h	/^static void mavlink_test_timesync(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_v2_extension	common/testsuite.h	/^static void mavlink_test_v2_extension(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_vfr_hud	common/testsuite.h	/^static void mavlink_test_vfr_hud(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_vibration	common/testsuite.h	/^static void mavlink_test_vibration(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_vicon_position_estimate	common/testsuite.h	/^static void mavlink_test_vicon_position_estimate(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_vision_position_estimate	common/testsuite.h	/^static void mavlink_test_vision_position_estimate(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_vision_speed_estimate	common/testsuite.h	/^static void mavlink_test_vision_speed_estimate(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_test_wind_cov	common/testsuite.h	/^static void mavlink_test_wind_cov(uint8_t system_id, uint8_t component_id, mavlink_message_t *last_msg)$/;"	f
mavlink_update_checksum	mavlink_helpers.h	/^MAVLINK_HELPER void mavlink_update_checksum(mavlink_message_t* msg, uint8_t c)$/;"	f
msg_len	mavlink_types.h	/^	uint8_t msg_len;$/;"	m	struct:__mavlink_msg_entry
msg_received	mavlink_types.h	/^    uint8_t msg_received;               \/\/\/< Number of received messages$/;"	m	struct:__mavlink_status
msgid	mavlink_types.h	/^	uint32_t msgid;                                        \/\/ message ID$/;"	m	struct:__mavlink_message_info
msgid	mavlink_types.h	/^	uint32_t msgid;$/;"	m	struct:__mavlink_msg_entry
name	mavlink_types.h	/^	const char *name;                                      \/\/ name of the message$/;"	m	struct:__mavlink_message_info
name	mavlink_types.h	/^	const char *name;                 \/\/ name of this field$/;"	m	struct:__mavlink_field_info
num_fields	mavlink_types.h	/^	unsigned num_fields;                                   \/\/ how many fields in this message$/;"	m	struct:__mavlink_message_info
num_signing_streams	mavlink_types.h	/^    uint16_t num_signing_streams;$/;"	m	struct:__mavlink_signing_streams
packet_idx	mavlink_types.h	/^    uint8_t packet_idx;                 \/\/\/< Index in current packet$/;"	m	struct:__mavlink_status
packet_rx_drop_count	mavlink_types.h	/^    uint16_t packet_rx_drop_count;      \/\/\/< Number of packet drops$/;"	m	struct:__mavlink_status
packet_rx_success_count	mavlink_types.h	/^    uint16_t packet_rx_success_count;   \/\/\/< Received packets$/;"	m	struct:__mavlink_status
parse_error	mavlink_types.h	/^    uint8_t parse_error;                \/\/\/< Number of parse errors$/;"	m	struct:__mavlink_status
parse_state	mavlink_types.h	/^    mavlink_parse_state_t parse_state;  \/\/\/< Parsing state machine$/;"	m	struct:__mavlink_status
print_format	mavlink_types.h	/^        const char *print_format;         \/\/ printing format hint, or NULL$/;"	m	struct:__mavlink_field_info
put_bitfield_n_by_index	mavlink_helpers.h	/^MAVLINK_HELPER uint8_t put_bitfield_n_by_index(int32_t b, uint8_t bits, uint8_t packet_index, uint8_t bit_index, uint8_t* r_bit_index, uint8_t* buffer)$/;"	f
save_bytes	mavlink_sha256.h	/^      unsigned char save_bytes[64];$/;"	m	union:__anon5::__anon6
save_u32	mavlink_sha256.h	/^      uint32_t save_u32[16];$/;"	m	union:__anon5::__anon6
secret_key	mavlink_types.h	/^    uint8_t secret_key[32];$/;"	m	struct:__mavlink_signing
sigma0	mavlink_sha256.h	241;"	d
sigma0	mavlink_sha256.h	65;"	d
sigma1	mavlink_sha256.h	242;"	d
sigma1	mavlink_sha256.h	66;"	d
signature_wait	mavlink_types.h	/^    uint8_t signature_wait;             \/\/\/< number of signature bytes left to receive$/;"	m	struct:__mavlink_status
signing	mavlink_types.h	/^    struct __mavlink_signing *signing;  \/\/\/< optional signing state$/;"	m	struct:__mavlink_status	typeref:struct:__mavlink_status::__mavlink_signing
signing_streams	mavlink_types.h	/^    struct __mavlink_signing_streams *signing_streams; \/\/\/< global record of stream timestamps$/;"	m	struct:__mavlink_status	typeref:struct:__mavlink_status::__mavlink_signing_streams
stream	mavlink_types.h	/^    } stream[MAVLINK_MAX_SIGNING_STREAMS];$/;"	m	struct:__mavlink_signing_streams	typeref:struct:__mavlink_signing_streams::__mavlink_signing_stream
structure_offset	mavlink_types.h	/^        unsigned int structure_offset;    \/\/ offset in a C structure$/;"	m	struct:__mavlink_field_info
sysid	mavlink_types.h	/^        uint8_t sysid;$/;"	m	struct:__mavlink_signing_streams::__mavlink_signing_stream
sz	mavlink_sha256.h	/^  unsigned int sz[2];$/;"	m	struct:__anon5
target_component_ofs	mavlink_types.h	/^	uint8_t target_component_ofs; \/\/ payload offset to target_component, or 0$/;"	m	struct:__mavlink_msg_entry
target_system_ofs	mavlink_types.h	/^	uint8_t target_system_ofs; \/\/ payload offset to target_system, or 0$/;"	m	struct:__mavlink_msg_entry
timestamp	mavlink_types.h	/^    uint64_t timestamp;$/;"	m	struct:__mavlink_signing
timestamp_bytes	mavlink_types.h	/^        uint8_t timestamp_bytes[6];$/;"	m	struct:__mavlink_signing_streams::__mavlink_signing_stream
type	mavlink_types.h	/^        mavlink_message_type_t type;      \/\/ type of this field$/;"	m	struct:__mavlink_field_info
u	mavlink_sha256.h	/^  } u;$/;"	m	struct:__anon5	typeref:union:__anon5::__anon6
uint16	mavlink_helpers.h	/^	uint16_t uint16;$/;"	m	union:__mavlink_bitfield
uint32	mavlink_helpers.h	/^	uint32_t uint32;$/;"	m	union:__mavlink_bitfield
uint8	mavlink_helpers.h	/^	uint8_t uint8;$/;"	m	union:__mavlink_bitfield
wire_offset	mavlink_types.h	/^        unsigned int wire_offset;         \/\/ offset of each field in the payload$/;"	m	struct:__mavlink_field_info
